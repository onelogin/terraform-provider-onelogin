name: Release

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from tag
        id: get_version
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          # Remove 'v' prefix if present
          VERSION="${VERSION#v}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Update version in files
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          # Update GNUmakefile
          sed -i -E "s/VERSION=[0-9]+\.[0-9]+\.[0-9]+/VERSION=$VERSION/" GNUmakefile
          # Update README.md
          sed -i -E "s/version = \"[0-9]+\.[0-9]+\.[0-9]+\"/version = \"$VERSION\"/" README.md
          echo "Updated version to $VERSION"

      - name: Commit version changes back to main
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add GNUmakefile README.md
          # Commit if there are changes (may not be if version files already match)
          git commit -m "chore: bump version to ${{ steps.get_version.outputs.version }}" || echo "No changes to commit"
          # Validate we're on main branch before pushing
          CURRENT_BRANCH=$(git symbolic-ref --short HEAD)
          if [ "$CURRENT_BRANCH" != "main" ]; then
            echo "Error: Current branch is '$CURRENT_BRANCH', expected 'main'. Release should be created from main branch."
            exit 1
          fi
          # Push to main
          git push origin main

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Import GPG key
        id: import_gpg
        uses: paultyng/ghaction-import-gpg@v2.1.0
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: release --clean
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
