swagger: '2.0'
info:
  contact:
    name: OneLogin
    url: 'https://support.onelogin.com'
  description: OpenAPI Specification for OneLogin
  title: OneLogin API
  version: 3.1.1
host: your-api-subdomain.onelogin.com
basePath: /
schemes:
  - https
paths:
  /api/1/events:
    get:
      produces:
        - application/json
      parameters:
        - collectionFormat: multi
          in: query
          items:
            type: integer
          name: event_type_id
          type: array
        - in: query
          name: client_id
          type: integer
        - in: query
          name: directory_id
          type: integer
        - in: query
          name: id
          required: true
          type: integer
        - in: query
          name: created_at
          type: string
        - in: query
          name: resolution
          type: string
        - in: query
          name: since
          type: string
        - in: query
          name: until
          type: string
        - description: Set to the id of the user that you want to return.
          in: query
          name: user_id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            properties:
              data:
                items:
                  properties:
                    account_id:
                      description: Account that triggered the event.
                      type: integer
                    actor_system:
                      description: >-
                        Acting system that triggered the event when the actor is
                        not a user.
                      type: string
                    actor_user_id:
                      description: ID of the user whose action triggered the event.
                      type: integer
                    actor_user_name:
                      description: >-
                        First and last name of the user whose action triggered
                        the event.
                      type: string
                    adc_id:
                      type: integer
                    app-name:
                      description: 'Name of the app involved in the event, if applicable.'
                      type: string
                    app_id:
                      description: 'ID of the app involved in the event, if applicable.'
                      type: integer
                    assumed_by_superadmin_or_reseller:
                      type: integer
                    assuming_acting_user_id:
                      description: >-
                        ID of the user who assumed the role of the acting user
                        to trigger the event, if applicable.
                      type: integer
                    certificate_id:
                      type: integer
                    client_id:
                      description: >-
                        Client ID used to generate the access token that made
                        the API call that generated the event.
                      type: string
                    created_at:
                      description: >-
                        ISO8601 Time and date at which the event was created.
                        This value is autogenerated by OneLogin.
                      type: string
                    custom_message:
                      description: More details about the event.
                      type: string
                    directory_sync_run_id:
                      description: Directory sync run ID.
                      type: integer
                    error_description:
                      description: 'Provisioning error details, if applicable.'
                      type: string
                    event_type_id:
                      description: Type of event triggered.
                      enum:
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5
                        - 6
                        - 7
                        - 8
                        - 9
                        - 10
                        - 11
                        - 12
                        - 13
                        - 14
                        - 15
                        - 16
                        - 17
                        - 18
                        - 19
                        - 20
                        - 21
                        - 22
                        - 23
                        - 24
                        - 25
                        - 26
                        - 27
                        - 28
                        - 29
                        - 30
                        - 31
                        - 32
                        - 33
                        - 34
                        - 35
                        - 36
                        - 37
                        - 38
                        - 39
                        - 40
                        - 41
                        - 42
                        - 43
                        - 44
                        - 45
                        - 46
                        - 47
                        - 48
                        - 49
                        - 50
                        - 51
                        - 52
                        - 53
                        - 54
                        - 55
                        - 56
                        - 57
                        - 58
                        - 59
                        - 60
                        - 61
                        - 62
                        - 63
                        - 64
                        - 65
                        - 66
                        - 67
                        - 68
                        - 69
                        - 70
                        - 71
                        - 72
                        - 73
                        - 74
                        - 75
                        - 76
                        - 77
                        - 78
                        - 79
                        - 80
                        - 81
                        - 82
                        - 83
                        - 84
                        - 85
                        - 86
                        - 87
                        - 88
                        - 89
                        - 90
                        - 91
                        - 92
                        - 95
                        - 96
                        - 100
                        - 101
                        - 102
                        - 103
                        - 104
                        - 105
                        - 106
                        - 110
                        - 111
                        - 112
                        - 113
                        - 114
                        - 115
                        - 116
                        - 117
                        - 118
                        - 119
                        - 120
                        - 121
                        - 122
                        - 123
                        - 124
                        - 125
                        - 126
                        - 127
                        - 128
                        - 129
                        - 130
                        - 131
                        - 132
                        - 133
                        - 134
                        - 135
                        - 136
                        - 137
                        - 138
                        - 139
                        - 140
                        - 141
                        - 145
                        - 146
                        - 147
                        - 148
                        - 149
                        - 150
                        - 151
                        - 152
                        - 153
                        - 154
                        - 155
                        - 156
                        - 157
                        - 158
                        - 159
                        - 160
                        - 161
                        - 162
                        - 163
                        - 164
                        - 165
                        - 166
                        - 167
                        - 168
                        - 169
                        - 170
                        - 171
                        - 172
                        - 173
                        - 174
                        - 175
                        - 176
                        - 177
                        - 178
                        - 179
                        - 180
                        - 181
                        - 182
                        - 183
                        - 184
                        - 185
                        - 186
                        - 187
                        - 188
                        - 189
                        - 190
                        - 191
                        - 192
                        - 193
                        - 194
                        - 195
                        - 196
                        - 197
                        - 198
                        - 199
                        - 200
                        - 201
                        - 202
                        - 203
                        - 204
                        - 205
                        - 206
                        - 207
                        - 208
                        - 209
                        - 210
                        - 211
                        - 212
                        - 213
                        - 214
                        - 215
                        - 216
                        - 217
                        - 218
                        - 219
                        - 220
                        - 221
                        - 222
                        - 223
                        - 224
                        - 225
                        - 226
                        - 227
                        - 228
                        - 229
                        - 230
                        - 231
                        - 232
                        - 233
                        - 234
                        - 235
                        - 236
                        - 237
                        - 238
                        - 239
                        - 240
                        - 241
                        - 242
                        - 243
                        - 244
                        - 245
                        - 246
                        - 247
                        - 248
                        - 249
                        - 250
                        - 251
                        - 252
                        - 253
                        - 254
                        - 255
                        - 291
                        - 300
                        - 301
                        - 303
                        - 304
                        - 305
                        - 306
                        - 307
                        - 330
                        - 331
                        - 332
                        - 333
                        - 334
                        - 400
                        - 401
                        - 402
                        - 410
                        - 411
                        - 412
                        - 501
                        - 502
                        - 503
                        - 510
                        - 511
                        - 512
                        - 513
                        - 514
                        - 515
                        - 516
                        - 517
                        - 518
                        - 519
                        - 520
                        - 521
                        - 522
                        - 523
                        - 524
                        - 525
                        - 526
                        - 527
                        - 528
                        - 529
                        - 530
                        - 531
                        - 532
                        - 533
                        - 534
                        - 535
                        - 536
                        - 537
                        - 538
                        - 539
                        - 540
                        - 541
                        - 542
                        - 545
                        - 546
                        - 550
                        - 551
                        - 552
                        - 553
                        - 554
                        - 555
                        - 600
                        - 601
                        - 602
                        - 700
                        - 701
                        - 702
                        - 703
                        - 704
                        - 705
                        - 706
                        - 800
                        - 801
                        - 802
                        - 803
                        - 804
                        - 805
                        - 900
                        - 901
                        - 902
                        - 903
                        - 904
                        - 905
                        - 906
                        - 907
                        - 911
                        - 912
                        - 931
                        - 932
                        - 950
                        - 1001
                        - 1002
                        - 1010
                        - 1100
                        - 1101
                        - 1200
                        - 1201
                        - 1244
                        - 1245
                        - 1300
                        - 1301
                        - 1302
                        - 1303
                        - 1304
                        - 1305
                        - 1400
                        - 1401
                        - 1402
                        - 1403
                        - 1404
                        - 1405
                        - 1406
                        - 1407
                        - 1408
                        - 1409
                        - 1410
                        - 1411
                        - 1412
                        - 1413
                        - 1414
                        - 1415
                        - 1416
                        - 1417
                        - 1418
                        - 1419
                        - 1420
                        - 1421
                        - 1422
                        - 1423
                        - 1424
                        - 1500
                        - 1501
                        - 1502
                        - 1503
                        - 1504
                        - 1505
                        - 1506
                        - 1507
                        - 1508
                        - 1509
                        - 1510
                        - 1511
                        - 1512
                        - 1513
                        - 1514
                        - 1600
                        - 1601
                        - 1602
                        - 1603
                        - 1604
                        - 1605
                        - 1606
                        - 1607
                        - 1608
                        - 1609
                        - 1700
                        - 1701
                        - 1702
                        - 1801
                        - 1802
                        - 1900
                        - 1901
                        - 1902
                        - 1903
                        - 1904
                        - 1905
                        - 2000
                        - 2001
                        - 2002
                        - 2003
                        - 2004
                        - 2005
                        - 2006
                        - 2007
                        - 2008
                        - 2009
                        - 2010
                        - 2011
                        - 2012
                        - 2013
                        - 2014
                        - 2015
                        - 2016
                        - 2017
                        - 2018
                        - 2100
                        - 2101
                        - 2102
                        - 2103
                        - 2104
                        - 2105
                        - 2106
                        - 2107
                        - 2108
                        - 2109
                        - 2110
                        - 2111
                        - 2112
                        - 2113
                        - 2114
                        - 2201
                        - 2202
                        - 2203
                        - 2204
                        - 3000
                        - 3001
                        - 3002
                        - 3003
                        - 3004
                        - 3005
                        - 3006
                        - 3007
                        - 3008
                        - 3009
                        - 3010
                        - 3011
                        - 3012
                        - 3013
                        - 3014
                        - 3015
                        - 3016
                        - 3017
                        - 3018
                        - 3019
                        - 3020
                        - 3021
                        - 3022
                        - 3023
                        - 3024
                        - 3025
                        - 3026
                        - 3027
                        - 3028
                        - 9000
                        - 9001
                        - 9002
                        - 9003
                        - 9004
                        - 9005
                        - 9006
                        - 9007
                        - 9008
                        - 9009
                        - 9010
                        - 9011
                        - 9012
                        - 9013
                        - 9014
                        - 9015
                        - 9016
                        - 9017
                        - 9018
                        - 9019
                        - 9020
                        - 9021
                        - 9022
                        - 9023
                        - 9024
                        - 9025
                        - 9026
                        - 9027
                        - 9028
                        - 9029
                        - 9030
                        - 9031
                        - 9032
                        - 9033
                        - 9034
                        - 9035
                        - 9036
                        - 9037
                        - 9038
                        - 9039
                        - 9040
                        - 9041
                        - 9042
                        - 9043
                        - 9044
                        - 9045
                        - 9046
                        - 9047
                        - 9048
                        - 9049
                        - 9050
                        - 9051
                        - 9052
                        - 9053
                        - 9054
                        - 9055
                        - 9056
                        - 9057
                        - 9058
                        - 9059
                      type: integer
                    group-name:
                      description: Name of a group involved in the event.
                      type: string
                    group_id:
                      description: ID of a group involved in the event.
                      type: integer
                    id:
                      description: >-
                        Event's unique ID in OneLogin. Autogenerated by
                        OneLogin.
                      type: integer
                    ipaddr:
                      description: IP address of the machine used to trigger the event.
                      type: string
                    mapping_id:
                      type: integer
                    notes:
                      description: More details about the event.
                      type: string
                    object_id:
                      type: integer
                    otp_device_id:
                      description: ID of a device involved in the event.
                      type: integer
                    otp_device_name:
                      description: Name of a device involved in the event.
                      type: string
                    param:
                      type: string
                    policy_id:
                      description: ID of the policy involved in the event.
                      type: integer
                    policy_name:
                      description: Name of the policy involved in the event.
                      type: string
                    policy_type:
                      type: string
                    privilege_id:
                      type: integer
                    proxy_ip:
                      type: string
                    radius_config_id:
                      type: integer
                    resolved_at:
                      type: string
                    resource_type_id:
                      description: >-
                        ID of the resource (user, role, group, and so forth)
                        associated with the event.
                      type: integer
                    risk_cookie_id:
                      description: Identifier for risk cookie
                      type: string
                    risk_reasons:
                      type: string
                    risk_score:
                      type: integer
                    role_id:
                      description: ID of a role involved in the event.
                      type: integer
                    role_name:
                      description: Name of a role involved in the event.
                      type: string
                    service_directory_id:
                      type: integer
                    solved:
                      type: boolean
                    trusted_idp_id:
                      type: integer
                    user_field_id:
                      type: integer
                    user_id:
                      description: ID of the user that was acted upon to trigger the event.
                      type: integer
                    user_name:
                      description: >-
                        Name of the user that was acted upon to trigger the
                        event.
                      type: string
                  type: object
                type: array
              pagination:
                properties:
                  after_cursor:
                    example: xWNjb3VudF9pZDo6OjUzNDEzLS0jI2lkOjo6OTA0MjU3NTQ2
                    type: string
                  before_cursor:
                    example: 'null'
                    type: string
                  next_link:
                    example: >-
                      https://{subdomain}.onelogin.com/api/1/events?after_cursor=xWNjb3VudF9pZDo6OjUzNDEzLS0jI2lkOjo6OTA0MjU3NTQ2
                    type: string
                  previous_link:
                    example: 'null'
                    type: string
                type: object
              status:
                properties:
                  code:
                    example: 200
                    type: integer
                  error:
                    example: false
                    type: boolean
                  message:
                    example: Success
                    type: string
                  type:
                    example: Success
                    type: string
                required:
                  - code
                  - message
                type: object
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Read Users
            - Manage users
            - Manage All
            - Read All
      tags:
        - Events
      description: Get Events
      operationId: getEvents
      summary: Get Events
  /api/1/events/types:
    get:
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              data:
                items:
                  properties:
                    description:
                      example: App %app% removed from role %role%
                      type: string
                    id:
                      example: 2
                      type: integer
                    name:
                      example: APP_REMOVED_FROM_ROLE
                      type: string
                  type: object
                type: array
              status:
                properties:
                  code:
                    example: 200
                    type: integer
                  error:
                    example: false
                    type: boolean
                  message:
                    example: Success
                    type: string
                  type:
                    example: Success
                    type: string
                required:
                  - code
                  - message
                type: object
            type: object
      tags:
        - Events
      description: Get Event types
      operationId: getEventTypes
      summary: Get Event Types
  '/api/1/events/{event_id}':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: event_id
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              data:
                properties:
                  account_id:
                    description: Account that triggered the event.
                    type: integer
                  actor_system:
                    description: >-
                      Acting system that triggered the event when the actor is
                      not a user.
                    type: string
                  actor_user_id:
                    description: ID of the user whose action triggered the event.
                    type: integer
                  actor_user_name:
                    description: >-
                      First and last name of the user whose action triggered the
                      event.
                    type: string
                  adc_id:
                    type: integer
                  app-name:
                    description: 'Name of the app involved in the event, if applicable.'
                    type: string
                  app_id:
                    description: 'ID of the app involved in the event, if applicable.'
                    type: integer
                  assumed_by_superadmin_or_reseller:
                    type: integer
                  assuming_acting_user_id:
                    description: >-
                      ID of the user who assumed the role of the acting user to
                      trigger the event, if applicable.
                    type: integer
                  certificate_id:
                    type: integer
                  client_id:
                    description: >-
                      Client ID used to generate the access token that made the
                      API call that generated the event.
                    type: string
                  created_at:
                    description: >-
                      ISO8601 Time and date at which the event was created. This
                      value is autogenerated by OneLogin.
                    type: string
                  custom_message:
                    description: More details about the event.
                    type: string
                  directory_sync_run_id:
                    description: Directory sync run ID.
                    type: integer
                  error_description:
                    description: 'Provisioning error details, if applicable.'
                    type: string
                  event_type_id:
                    description: Type of event triggered.
                    enum:
                      - 1
                      - 2
                      - 3
                      - 4
                      - 5
                      - 6
                      - 7
                      - 8
                      - 9
                      - 10
                      - 11
                      - 12
                      - 13
                      - 14
                      - 15
                      - 16
                      - 17
                      - 18
                      - 19
                      - 20
                      - 21
                      - 22
                      - 23
                      - 24
                      - 25
                      - 26
                      - 27
                      - 28
                      - 29
                      - 30
                      - 31
                      - 32
                      - 33
                      - 34
                      - 35
                      - 36
                      - 37
                      - 38
                      - 39
                      - 40
                      - 41
                      - 42
                      - 43
                      - 44
                      - 45
                      - 46
                      - 47
                      - 48
                      - 49
                      - 50
                      - 51
                      - 52
                      - 53
                      - 54
                      - 55
                      - 56
                      - 57
                      - 58
                      - 59
                      - 60
                      - 61
                      - 62
                      - 63
                      - 64
                      - 65
                      - 66
                      - 67
                      - 68
                      - 69
                      - 70
                      - 71
                      - 72
                      - 73
                      - 74
                      - 75
                      - 76
                      - 77
                      - 78
                      - 79
                      - 80
                      - 81
                      - 82
                      - 83
                      - 84
                      - 85
                      - 86
                      - 87
                      - 88
                      - 89
                      - 90
                      - 91
                      - 92
                      - 95
                      - 96
                      - 100
                      - 101
                      - 102
                      - 103
                      - 104
                      - 105
                      - 106
                      - 110
                      - 111
                      - 112
                      - 113
                      - 114
                      - 115
                      - 116
                      - 117
                      - 118
                      - 119
                      - 120
                      - 121
                      - 122
                      - 123
                      - 124
                      - 125
                      - 126
                      - 127
                      - 128
                      - 129
                      - 130
                      - 131
                      - 132
                      - 133
                      - 134
                      - 135
                      - 136
                      - 137
                      - 138
                      - 139
                      - 140
                      - 141
                      - 145
                      - 146
                      - 147
                      - 148
                      - 149
                      - 150
                      - 151
                      - 152
                      - 153
                      - 154
                      - 155
                      - 156
                      - 157
                      - 158
                      - 159
                      - 160
                      - 161
                      - 162
                      - 163
                      - 164
                      - 165
                      - 166
                      - 167
                      - 168
                      - 169
                      - 170
                      - 171
                      - 172
                      - 173
                      - 174
                      - 175
                      - 176
                      - 177
                      - 178
                      - 179
                      - 180
                      - 181
                      - 182
                      - 183
                      - 184
                      - 185
                      - 186
                      - 187
                      - 188
                      - 189
                      - 190
                      - 191
                      - 192
                      - 193
                      - 194
                      - 195
                      - 196
                      - 197
                      - 198
                      - 199
                      - 200
                      - 201
                      - 202
                      - 203
                      - 204
                      - 205
                      - 206
                      - 207
                      - 208
                      - 209
                      - 210
                      - 211
                      - 212
                      - 213
                      - 214
                      - 215
                      - 216
                      - 217
                      - 218
                      - 219
                      - 220
                      - 221
                      - 222
                      - 223
                      - 224
                      - 225
                      - 226
                      - 227
                      - 228
                      - 229
                      - 230
                      - 231
                      - 232
                      - 233
                      - 234
                      - 235
                      - 236
                      - 237
                      - 238
                      - 239
                      - 240
                      - 241
                      - 242
                      - 243
                      - 244
                      - 245
                      - 246
                      - 247
                      - 248
                      - 249
                      - 250
                      - 251
                      - 252
                      - 253
                      - 254
                      - 255
                      - 291
                      - 300
                      - 301
                      - 303
                      - 304
                      - 305
                      - 306
                      - 307
                      - 330
                      - 331
                      - 332
                      - 333
                      - 334
                      - 400
                      - 401
                      - 402
                      - 410
                      - 411
                      - 412
                      - 501
                      - 502
                      - 503
                      - 510
                      - 511
                      - 512
                      - 513
                      - 514
                      - 515
                      - 516
                      - 517
                      - 518
                      - 519
                      - 520
                      - 521
                      - 522
                      - 523
                      - 524
                      - 525
                      - 526
                      - 527
                      - 528
                      - 529
                      - 530
                      - 531
                      - 532
                      - 533
                      - 534
                      - 535
                      - 536
                      - 537
                      - 538
                      - 539
                      - 540
                      - 541
                      - 542
                      - 545
                      - 546
                      - 550
                      - 551
                      - 552
                      - 553
                      - 554
                      - 555
                      - 600
                      - 601
                      - 602
                      - 700
                      - 701
                      - 702
                      - 703
                      - 704
                      - 705
                      - 706
                      - 800
                      - 801
                      - 802
                      - 803
                      - 804
                      - 805
                      - 900
                      - 901
                      - 902
                      - 903
                      - 904
                      - 905
                      - 906
                      - 907
                      - 911
                      - 912
                      - 931
                      - 932
                      - 950
                      - 1001
                      - 1002
                      - 1010
                      - 1100
                      - 1101
                      - 1200
                      - 1201
                      - 1244
                      - 1245
                      - 1300
                      - 1301
                      - 1302
                      - 1303
                      - 1304
                      - 1305
                      - 1400
                      - 1401
                      - 1402
                      - 1403
                      - 1404
                      - 1405
                      - 1406
                      - 1407
                      - 1408
                      - 1409
                      - 1410
                      - 1411
                      - 1412
                      - 1413
                      - 1414
                      - 1415
                      - 1416
                      - 1417
                      - 1418
                      - 1419
                      - 1420
                      - 1421
                      - 1422
                      - 1423
                      - 1424
                      - 1500
                      - 1501
                      - 1502
                      - 1503
                      - 1504
                      - 1505
                      - 1506
                      - 1507
                      - 1508
                      - 1509
                      - 1510
                      - 1511
                      - 1512
                      - 1513
                      - 1514
                      - 1600
                      - 1601
                      - 1602
                      - 1603
                      - 1604
                      - 1605
                      - 1606
                      - 1607
                      - 1608
                      - 1609
                      - 1700
                      - 1701
                      - 1702
                      - 1801
                      - 1802
                      - 1900
                      - 1901
                      - 1902
                      - 1903
                      - 1904
                      - 1905
                      - 2000
                      - 2001
                      - 2002
                      - 2003
                      - 2004
                      - 2005
                      - 2006
                      - 2007
                      - 2008
                      - 2009
                      - 2010
                      - 2011
                      - 2012
                      - 2013
                      - 2014
                      - 2015
                      - 2016
                      - 2017
                      - 2018
                      - 2100
                      - 2101
                      - 2102
                      - 2103
                      - 2104
                      - 2105
                      - 2106
                      - 2107
                      - 2108
                      - 2109
                      - 2110
                      - 2111
                      - 2112
                      - 2113
                      - 2114
                      - 2201
                      - 2202
                      - 2203
                      - 2204
                      - 3000
                      - 3001
                      - 3002
                      - 3003
                      - 3004
                      - 3005
                      - 3006
                      - 3007
                      - 3008
                      - 3009
                      - 3010
                      - 3011
                      - 3012
                      - 3013
                      - 3014
                      - 3015
                      - 3016
                      - 3017
                      - 3018
                      - 3019
                      - 3020
                      - 3021
                      - 3022
                      - 3023
                      - 3024
                      - 3025
                      - 3026
                      - 3027
                      - 3028
                      - 9000
                      - 9001
                      - 9002
                      - 9003
                      - 9004
                      - 9005
                      - 9006
                      - 9007
                      - 9008
                      - 9009
                      - 9010
                      - 9011
                      - 9012
                      - 9013
                      - 9014
                      - 9015
                      - 9016
                      - 9017
                      - 9018
                      - 9019
                      - 9020
                      - 9021
                      - 9022
                      - 9023
                      - 9024
                      - 9025
                      - 9026
                      - 9027
                      - 9028
                      - 9029
                      - 9030
                      - 9031
                      - 9032
                      - 9033
                      - 9034
                      - 9035
                      - 9036
                      - 9037
                      - 9038
                      - 9039
                      - 9040
                      - 9041
                      - 9042
                      - 9043
                      - 9044
                      - 9045
                      - 9046
                      - 9047
                      - 9048
                      - 9049
                      - 9050
                      - 9051
                      - 9052
                      - 9053
                      - 9054
                      - 9055
                      - 9056
                      - 9057
                      - 9058
                      - 9059
                    type: integer
                  group-name:
                    description: Name of a group involved in the event.
                    type: string
                  group_id:
                    description: ID of a group involved in the event.
                    type: integer
                  id:
                    description: Event's unique ID in OneLogin. Autogenerated by OneLogin.
                    type: integer
                  ipaddr:
                    description: IP address of the machine used to trigger the event.
                    type: string
                  mapping_id:
                    type: integer
                  notes:
                    description: More details about the event.
                    type: string
                  object_id:
                    type: integer
                  otp_device_id:
                    description: ID of a device involved in the event.
                    type: integer
                  otp_device_name:
                    description: Name of a device involved in the event.
                    type: string
                  param:
                    type: string
                  policy_id:
                    description: ID of the policy involved in the event.
                    type: integer
                  policy_name:
                    description: Name of the policy involved in the event.
                    type: string
                  policy_type:
                    type: string
                  privilege_id:
                    type: integer
                  proxy_ip:
                    type: string
                  radius_config_id:
                    type: integer
                  resolved_at:
                    type: string
                  resource_type_id:
                    description: >-
                      ID of the resource (user, role, group, and so forth)
                      associated with the event.
                    type: integer
                  risk_cookie_id:
                    description: Identifier for risk cookie
                    type: string
                  risk_reasons:
                    type: string
                  risk_score:
                    type: integer
                  role_id:
                    description: ID of a role involved in the event.
                    type: integer
                  role_name:
                    description: Name of a role involved in the event.
                    type: string
                  service_directory_id:
                    type: integer
                  solved:
                    type: boolean
                  trusted_idp_id:
                    type: integer
                  user_field_id:
                    type: integer
                  user_id:
                    description: ID of the user that was acted upon to trigger the event.
                    type: integer
                  user_name:
                    description: Name of the user that was acted upon to trigger the event.
                    type: string
                type: object
              status:
                example:
                  code: 200
                  error: false
                  message: success
                  type: success
                properties:
                  code:
                    example: 200
                    type: integer
                  error:
                    example: false
                    type: boolean
                  message:
                    example: Success
                    type: string
                  type:
                    example: Success
                    type: string
                required:
                  - code
                  - message
                type: object
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Read Users
            - Manage users
            - Manage All
            - Read All
      tags:
        - Events
      description: Get Event By ID
      operationId: getEventById
      summary: Get Event by ID
  /api/1/groups:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              data:
                items:
                  properties:
                    id:
                      description: Group's unique Onelogin ID
                      example: 425741
                      type: integer
                    name:
                      description: Group name
                      example: group.security.policy.default
                      type: string
                    reference:
                      description: Deprecated. Will always show the attribute nil="true".
                      example: 'null'
                      type: string
                  type: object
                type: array
              status:
                properties:
                  code:
                    example: 200
                    type: integer
                  error:
                    example: false
                    type: boolean
                  message:
                    example: Success
                    type: string
                  type:
                    example: Success
                    type: string
                required:
                  - code
                  - message
                type: object
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage users
            - Manage All
            - Read All
            - Read Users
      tags:
        - Groups
      description: Get Groups
      operationId: getGroups
      summary: Get Groups
  '/api/1/groups/{group_id}':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: group_id
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              data:
                items:
                  properties:
                    id:
                      description: Group's unique Onelogin ID
                      example: 425741
                      type: integer
                    name:
                      description: Group name
                      example: group.security.policy.default
                      type: string
                    reference:
                      description: Deprecated. Will always show the attribute nil="true".
                      example: 'null'
                      type: string
                  type: object
                type: array
              status:
                properties:
                  code:
                    example: 200
                    type: integer
                  error:
                    example: false
                    type: boolean
                  message:
                    example: Success
                    type: string
                  type:
                    example: Success
                    type: string
                required:
                  - code
                  - message
                type: object
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Read Users
            - Manage users
            - Manage All
            - Read All
      tags:
        - Groups
      description: Get Group By ID
      operationId: getGroupById
      summary: Get Group by ID
  /api/1/invites/get_invite_link:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: body
          name: body
          schema:
            properties:
              email:
                description: >-
                  Set to the user email address to generate an invite link. The
                  value is case sensitive.
                example: jennifer.hasenfus@mycompany.com
                type: string
            type: object
      responses:
        '200':
          description: Successful response
          examples:
            application/json:
              data:
                - >-
                  http://app.onelogin.com/password/reset?token=1111111cf892e56957e35c9c12f128483031dd11
              status:
                code: 200
                error: false
                message: success
                type: success
          schema:
            properties:
              data:
                description: Provides reset password link
                items:
                  type: string
                type: array
              status:
                properties:
                  code:
                    example: 200
                    type: integer
                  error:
                    example: false
                    type: boolean
                  message:
                    example: Success
                    type: string
                  type:
                    example: Success
                    type: string
                required:
                  - code
                  - message
                type: object
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Invite Links
      description: Generate Invite Link
      operationId: getInviteLink
      summary: Generate Invite Link
  /api/1/invites/send_invite_link:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: body
          name: body
          schema:
            properties:
              email:
                description: >-
                  Set to the user email address to generate an invite link. The
                  value is case sensitive.
                example: jennifer.hasenfus@mycompany.com
                type: string
              personal_email:
                description: >-
                  To send an invite email to a different address than the one
                  provided in email, provide it here. The invite link is sent to
                  this address instead.
                example: jennifer.hasenfus@mail.com
                type: string
            type: object
      responses:
        '200':
          description: Successful response
          examples:
            application/json:
              status:
                code: 200
                error: false
                message: Email sent successfully to jennifer.hasenfus@mail.com
                type: success
          schema:
            properties:
              status:
                properties:
                  code:
                    example: 200
                    type: integer
                  error:
                    example: false
                    type: boolean
                  message:
                    example: Success
                    type: string
                  type:
                    example: Success
                    type: string
                required:
                  - code
                  - message
                type: object
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Invite Links
      description: Send Invite Link
      operationId: sendInviteLink
      summary: Send  Invite Link
  /api/1/privileges:
    get:
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
      responses:
        '200':
          description: Successful response
          schema:
            items:
              properties:
                description:
                  example: Can administer users
                  type: string
                id:
                  example: 2c963197-bee2-4607-abc0-4786f1bfa55a
                  type: string
                name:
                  example: User Administrator
                  type: string
                privilege:
                  properties:
                    Statement:
                      items:
                        properties:
                          Action:
                            description: >-
                              An array of strings that represent actions within
                              OneLogin. Actions are prefixed with the class of
                              object they are related to and followed by a
                              specific action for the given class.

                              e.g. users:List, where the class is users and the
                              specific action is List. Don’t mix classes within
                              an Action array. To create a privilege that
                              includes multiple different classes, create
                              multiple statements. A wildcard * that includes
                              all actions is supported. Use wildcards to create
                              a Super User privilege.
                            example:
                              - 'Users:Delete'
                              - 'Users:ResetPassword'
                              - 'Users:Unlock'
                              - 'Users:Get'
                            items:
                              enum:
                                - 'Apps:Create'
                                - 'Apps:Delete'
                                - 'Apps:List'
                                - 'Apps:Get'
                                - 'Apps:Update'
                                - 'Apps:ManageConnectors'
                                - 'Apps:ManageRoles'
                                - 'Apps:ManageTabs'
                                - 'Apps:ManageUsers'
                                - 'Apps:ReapplyMappings'
                                - 'Users:Create'
                                - 'Users:Delete'
                                - 'Users:List'
                                - 'Users:Get'
                                - 'Users:Update'
                                - 'Users:AssumeUser'
                                - 'Users:ManageApps'
                                - 'Users:Unlock'
                                - 'Users:GenerateTempMfaToken'
                                - 'Users:ResetPassword'
                                - 'Users:ReapplyMappings'
                                - 'Users:ManageLicense'
                                - 'Users:Invite'
                                - 'Users:ManageRoles'
                                - 'Roles:Create'
                                - 'Roles:Get'
                                - 'Roles:List'
                                - 'Roles:Update'
                                - 'Roles:Delete'
                                - 'Roles:ManageUsers'
                                - 'Roles:ManageApps'
                                - 'Reports:Create'
                                - 'Reports:Get'
                                - 'Reports:List'
                                - 'Reports:Update'
                                - 'Reports:Delete'
                                - 'Reports:Clone'
                                - 'Events:Get'
                                - 'Events:List'
                                - 'Groups:Create'
                                - 'Groups:Get'
                                - 'Groups:List'
                                - 'Groups:Update'
                                - 'Groups:Delete'
                                - 'Policies:Create'
                                - 'Policies:Get'
                                - 'Policies:List'
                                - 'Policies:Update'
                                - 'Policies:Delete'
                                - 'Policies:SetDefault'
                              type: string
                            type: array
                          Effect:
                            description: >-
                              Set to “Allow.” By default, all actions are
                              denied, this Statement allows the listed actions
                              to be executed.
                            example: Allow
                            type: string
                          Scope:
                            description: >-
                              Target the privileged action against specific
                              resources with the scope.

                              The scope pattern is the class of object used by
                              the Action, followed by an ID that represents a
                              resource in OneLogin.

                              e.g. apps/1234, where apps is the class and 1234
                              is the ID of an app.

                              The wildcard * is supported and indicates that all
                              resources of the class type declared, in the
                              Action, are in scope.

                              The Action and Scope classes must match. However,
                              there is an exception, a scope of roles/{role_id}
                              can be combined with Actions on the user or app
                              class. The exception allows you to target groups
                              of users or apps with specific actions.
                            items:
                              example: '*'
                              type: string
                            type: array
                        required:
                          - Effect
                          - Action
                          - Scope
                        type: object
                      type: array
                    Version:
                      example: '2018-05-18'
                      type: string
                  type: object
              required:
                - name
                - privilege
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Privileges
      description: List Privileges
      operationId: listPriveleges
      summary: List Privileges
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: body
          name: body
          schema:
            properties:
              description:
                example: Can administer users
                type: string
              id:
                example: 2c963197-bee2-4607-abc0-4786f1bfa55a
                type: string
              name:
                example: User Administrator
                type: string
              privilege:
                properties:
                  Statement:
                    items:
                      properties:
                        Action:
                          description: >-
                            An array of strings that represent actions within
                            OneLogin. Actions are prefixed with the class of
                            object they are related to and followed by a
                            specific action for the given class.

                            e.g. users:List, where the class is users and the
                            specific action is List. Don’t mix classes within an
                            Action array. To create a privilege that includes
                            multiple different classes, create multiple
                            statements. A wildcard * that includes all actions
                            is supported. Use wildcards to create a Super User
                            privilege.
                          example:
                            - 'Users:Delete'
                            - 'Users:ResetPassword'
                            - 'Users:Unlock'
                            - 'Users:Get'
                          items:
                            enum:
                              - 'Apps:Create'
                              - 'Apps:Delete'
                              - 'Apps:List'
                              - 'Apps:Get'
                              - 'Apps:Update'
                              - 'Apps:ManageConnectors'
                              - 'Apps:ManageRoles'
                              - 'Apps:ManageTabs'
                              - 'Apps:ManageUsers'
                              - 'Apps:ReapplyMappings'
                              - 'Users:Create'
                              - 'Users:Delete'
                              - 'Users:List'
                              - 'Users:Get'
                              - 'Users:Update'
                              - 'Users:AssumeUser'
                              - 'Users:ManageApps'
                              - 'Users:Unlock'
                              - 'Users:GenerateTempMfaToken'
                              - 'Users:ResetPassword'
                              - 'Users:ReapplyMappings'
                              - 'Users:ManageLicense'
                              - 'Users:Invite'
                              - 'Users:ManageRoles'
                              - 'Roles:Create'
                              - 'Roles:Get'
                              - 'Roles:List'
                              - 'Roles:Update'
                              - 'Roles:Delete'
                              - 'Roles:ManageUsers'
                              - 'Roles:ManageApps'
                              - 'Reports:Create'
                              - 'Reports:Get'
                              - 'Reports:List'
                              - 'Reports:Update'
                              - 'Reports:Delete'
                              - 'Reports:Clone'
                              - 'Events:Get'
                              - 'Events:List'
                              - 'Groups:Create'
                              - 'Groups:Get'
                              - 'Groups:List'
                              - 'Groups:Update'
                              - 'Groups:Delete'
                              - 'Policies:Create'
                              - 'Policies:Get'
                              - 'Policies:List'
                              - 'Policies:Update'
                              - 'Policies:Delete'
                              - 'Policies:SetDefault'
                            type: string
                          type: array
                        Effect:
                          description: >-
                            Set to “Allow.” By default, all actions are denied,
                            this Statement allows the listed actions to be
                            executed.
                          example: Allow
                          type: string
                        Scope:
                          description: >-
                            Target the privileged action against specific
                            resources with the scope.

                            The scope pattern is the class of object used by the
                            Action, followed by an ID that represents a resource
                            in OneLogin.

                            e.g. apps/1234, where apps is the class and 1234 is
                            the ID of an app.

                            The wildcard * is supported and indicates that all
                            resources of the class type declared, in the Action,
                            are in scope.

                            The Action and Scope classes must match. However,
                            there is an exception, a scope of roles/{role_id}
                            can be combined with Actions on the user or app
                            class. The exception allows you to target groups of
                            users or apps with specific actions.
                          items:
                            example: '*'
                            type: string
                          type: array
                      required:
                        - Effect
                        - Action
                        - Scope
                      type: object
                    type: array
                  Version:
                    example: '2018-05-18'
                    type: string
                type: object
            required:
              - name
              - privilege
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              id:
                description: Privilege Id
                example: 5e43a548-e9c6-47be-9341-92160902f7a6
                type: string
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              message: >-
                The request could not be understood by the server due to
                malformed syntax: Statement required Action array
              name: BadRequestError
              statusCode: 400
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Privileges
      description: Create privilege
      operationId: createPrivilege
      summary: Create a Privilege
  '/api/1/privileges/{privilege_id}':
    delete:
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: privilege_id
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Privileges
      description: Delete
      operationId: deletePrivilege
      summary: Delete a Privilege
    get:
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: privilege_id
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              description:
                example: Can administer users
                type: string
              id:
                example: 2c963197-bee2-4607-abc0-4786f1bfa55a
                type: string
              name:
                example: User Administrator
                type: string
              privilege:
                properties:
                  Statement:
                    items:
                      properties:
                        Action:
                          description: >-
                            An array of strings that represent actions within
                            OneLogin. Actions are prefixed with the class of
                            object they are related to and followed by a
                            specific action for the given class.

                            e.g. users:List, where the class is users and the
                            specific action is List. Don’t mix classes within an
                            Action array. To create a privilege that includes
                            multiple different classes, create multiple
                            statements. A wildcard * that includes all actions
                            is supported. Use wildcards to create a Super User
                            privilege.
                          example:
                            - 'Users:Delete'
                            - 'Users:ResetPassword'
                            - 'Users:Unlock'
                            - 'Users:Get'
                          items:
                            enum:
                              - 'Apps:Create'
                              - 'Apps:Delete'
                              - 'Apps:List'
                              - 'Apps:Get'
                              - 'Apps:Update'
                              - 'Apps:ManageConnectors'
                              - 'Apps:ManageRoles'
                              - 'Apps:ManageTabs'
                              - 'Apps:ManageUsers'
                              - 'Apps:ReapplyMappings'
                              - 'Users:Create'
                              - 'Users:Delete'
                              - 'Users:List'
                              - 'Users:Get'
                              - 'Users:Update'
                              - 'Users:AssumeUser'
                              - 'Users:ManageApps'
                              - 'Users:Unlock'
                              - 'Users:GenerateTempMfaToken'
                              - 'Users:ResetPassword'
                              - 'Users:ReapplyMappings'
                              - 'Users:ManageLicense'
                              - 'Users:Invite'
                              - 'Users:ManageRoles'
                              - 'Roles:Create'
                              - 'Roles:Get'
                              - 'Roles:List'
                              - 'Roles:Update'
                              - 'Roles:Delete'
                              - 'Roles:ManageUsers'
                              - 'Roles:ManageApps'
                              - 'Reports:Create'
                              - 'Reports:Get'
                              - 'Reports:List'
                              - 'Reports:Update'
                              - 'Reports:Delete'
                              - 'Reports:Clone'
                              - 'Events:Get'
                              - 'Events:List'
                              - 'Groups:Create'
                              - 'Groups:Get'
                              - 'Groups:List'
                              - 'Groups:Update'
                              - 'Groups:Delete'
                              - 'Policies:Create'
                              - 'Policies:Get'
                              - 'Policies:List'
                              - 'Policies:Update'
                              - 'Policies:Delete'
                              - 'Policies:SetDefault'
                            type: string
                          type: array
                        Effect:
                          description: >-
                            Set to “Allow.” By default, all actions are denied,
                            this Statement allows the listed actions to be
                            executed.
                          example: Allow
                          type: string
                        Scope:
                          description: >-
                            Target the privileged action against specific
                            resources with the scope.

                            The scope pattern is the class of object used by the
                            Action, followed by an ID that represents a resource
                            in OneLogin.

                            e.g. apps/1234, where apps is the class and 1234 is
                            the ID of an app.

                            The wildcard * is supported and indicates that all
                            resources of the class type declared, in the Action,
                            are in scope.

                            The Action and Scope classes must match. However,
                            there is an exception, a scope of roles/{role_id}
                            can be combined with Actions on the user or app
                            class. The exception allows you to target groups of
                            users or apps with specific actions.
                          items:
                            example: '*'
                            type: string
                          type: array
                      required:
                        - Effect
                        - Action
                        - Scope
                      type: object
                    type: array
                  Version:
                    example: '2018-05-18'
                    type: string
                type: object
            required:
              - name
              - privilege
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Privileges
      description: Get a Privilige
      operationId: getPrivilege
      summary: Get a Privilege
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: privilege_id
          required: true
          type: string
        - in: body
          name: body
          schema:
            properties:
              description:
                example: Can administer users
                type: string
              id:
                example: 2c963197-bee2-4607-abc0-4786f1bfa55a
                type: string
              name:
                example: User Administrator
                type: string
              privilege:
                properties:
                  Statement:
                    items:
                      properties:
                        Action:
                          description: >-
                            An array of strings that represent actions within
                            OneLogin. Actions are prefixed with the class of
                            object they are related to and followed by a
                            specific action for the given class.

                            e.g. users:List, where the class is users and the
                            specific action is List. Don’t mix classes within an
                            Action array. To create a privilege that includes
                            multiple different classes, create multiple
                            statements. A wildcard * that includes all actions
                            is supported. Use wildcards to create a Super User
                            privilege.
                          example:
                            - 'Users:Delete'
                            - 'Users:ResetPassword'
                            - 'Users:Unlock'
                            - 'Users:Get'
                          items:
                            enum:
                              - 'Apps:Create'
                              - 'Apps:Delete'
                              - 'Apps:List'
                              - 'Apps:Get'
                              - 'Apps:Update'
                              - 'Apps:ManageConnectors'
                              - 'Apps:ManageRoles'
                              - 'Apps:ManageTabs'
                              - 'Apps:ManageUsers'
                              - 'Apps:ReapplyMappings'
                              - 'Users:Create'
                              - 'Users:Delete'
                              - 'Users:List'
                              - 'Users:Get'
                              - 'Users:Update'
                              - 'Users:AssumeUser'
                              - 'Users:ManageApps'
                              - 'Users:Unlock'
                              - 'Users:GenerateTempMfaToken'
                              - 'Users:ResetPassword'
                              - 'Users:ReapplyMappings'
                              - 'Users:ManageLicense'
                              - 'Users:Invite'
                              - 'Users:ManageRoles'
                              - 'Roles:Create'
                              - 'Roles:Get'
                              - 'Roles:List'
                              - 'Roles:Update'
                              - 'Roles:Delete'
                              - 'Roles:ManageUsers'
                              - 'Roles:ManageApps'
                              - 'Reports:Create'
                              - 'Reports:Get'
                              - 'Reports:List'
                              - 'Reports:Update'
                              - 'Reports:Delete'
                              - 'Reports:Clone'
                              - 'Events:Get'
                              - 'Events:List'
                              - 'Groups:Create'
                              - 'Groups:Get'
                              - 'Groups:List'
                              - 'Groups:Update'
                              - 'Groups:Delete'
                              - 'Policies:Create'
                              - 'Policies:Get'
                              - 'Policies:List'
                              - 'Policies:Update'
                              - 'Policies:Delete'
                              - 'Policies:SetDefault'
                            type: string
                          type: array
                        Effect:
                          description: >-
                            Set to “Allow.” By default, all actions are denied,
                            this Statement allows the listed actions to be
                            executed.
                          example: Allow
                          type: string
                        Scope:
                          description: >-
                            Target the privileged action against specific
                            resources with the scope.

                            The scope pattern is the class of object used by the
                            Action, followed by an ID that represents a resource
                            in OneLogin.

                            e.g. apps/1234, where apps is the class and 1234 is
                            the ID of an app.

                            The wildcard * is supported and indicates that all
                            resources of the class type declared, in the Action,
                            are in scope.

                            The Action and Scope classes must match. However,
                            there is an exception, a scope of roles/{role_id}
                            can be combined with Actions on the user or app
                            class. The exception allows you to target groups of
                            users or apps with specific actions.
                          items:
                            example: '*'
                            type: string
                          type: array
                      required:
                        - Effect
                        - Action
                        - Scope
                      type: object
                    type: array
                  Version:
                    example: '2018-05-18'
                    type: string
                type: object
            required:
              - name
              - privilege
            type: object
      responses:
        '200':
          description: Successful response
          examples:
            application/json:
              id: 5e43a548-e9c6-47be-9341-92160902f7a6
          schema:
            properties:
              id:
                description: Privilege ID
                type: string
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              message: >-
                The request could not be understood by the server due to
                malformed syntax: Statement required Action array
              name: BadRequestError
              statusCode: 400
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Privileges
      description: Update privilege
      operationId: updatePrivilege
      summary: Update a Privilege
  '/api/1/privileges/{privilege_id}/roles':
    get:
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: privilege_id
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              afterCursor:
                type: integer
                x-nullable: true
              beforeCursor:
                type: integer
                x-nullable: true
              nextLink:
                type: string
                x-nullable: true
              previousLink:
                type: string
                x-nullable: true
              roles:
                items:
                  type: integer
                type: array
              total:
                type: integer
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Privileges
      description: List roles for privilege
      operationId: listPrivelegeRoles
      summary: Get Roles assigned to Privilege
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: privilege_id
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              roles:
                - 123
                - 456
                - 789
            properties:
              roles:
                items:
                  type: integer
                type: array
            type: object
      responses:
        '201':
          description: Created
          schema:
            properties:
              success:
                example: true
                type: boolean
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              message: >-
                The request could not be understood by the server due to
                malformed syntax: Statement required Action array
              name: BadRequestError
              statusCode: 400
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Privileges
      description: 'Add roles to privilege '
      operationId: addPrivilegeToRole
      summary: Assign a Privilege to Roles
  '/api/1/privileges/{privilege_id}/roles/{role_id}':
    delete:
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: privilege_id
          required: true
          type: string
        - in: path
          name: role_id
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Privileges
      description: Add roles to privilege
      operationId: deleteRoleFromPrivilege
      summary: Remove a Privilege from a Role
  '/api/1/privileges/{privilege_id}/users':
    get:
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: privilege_id
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              afterCursor:
                type: integer
                x-nullable: true
              beforeCursor:
                type: integer
                x-nullable: true
              nextLink:
                type: string
                x-nullable: true
              previousLink:
                type: string
                x-nullable: true
              total:
                type: integer
              users:
                items:
                  type: integer
                type: array
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Privileges
      description: Get Assigned Users
      operationId: getAssignedUser
      summary: Get Users assigned to a Privilege
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: privilege_id
          required: true
          type: string
        - in: body
          name: body
          schema:
            properties:
              users:
                items:
                  type: integer
                type: array
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              success:
                example: true
                type: boolean
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              message: >-
                The request could not be understood by the server due to
                malformed syntax: Statement required Action array
              name: BadRequestError
              statusCode: 400
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Privileges
      description: Assign Users to Privilege
      operationId: assignUsersToPrivilege
      summary: Assign Users to a Privilege
  '/api/1/privileges/{privilege_id}/users/{user_id}':
    delete:
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: privilege_id
          required: true
          type: string
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Privileges
      description: Remove a Privilege from Users
      operationId: removeUserFromPrivilege
      summary: Remove a Privilege from Users
  /api/1/roles:
    get:
      produces:
        - application/json
      parameters:
        - in: query
          name: name
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              data:
                example:
                  - id: 1111
                    name: C-Executive
                  - id: 1112
                    name: Contractor
                  - id: 1113
                    name: Default
                  - id: 1114
                    name: Employee
                items:
                  properties:
                    id:
                      description: Role ID
                      type: integer
                    name:
                      description: Role Name
                      type: string
                  type: object
                type: array
              pagination:
                properties:
                  after_cursor:
                    example: xWNjb3VudF9pZDo6OjUzNDEzLS0jI2lkOjo6OTA0MjU3NTQ2
                    type: string
                  before_cursor:
                    example: '""'
                    type: string
                  next_link:
                    example: >-
                      https://{subdomain}.onelogin.com/api/1/events?after_cursor=xWNjb3VudF9pZDo6OjUzNDEzLS0jI2lkOjo6OTA0MjU3NTQ2
                    type: string
                  previous_link:
                    example: '""'
                    type: string
                type: object
              status:
                properties:
                  code:
                    example: 200
                    type: integer
                  error:
                    example: false
                    type: boolean
                  message:
                    example: Success
                    type: string
                  type:
                    example: Success
                    type: string
                required:
                  - code
                  - message
                type: object
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage users
            - Manage All
            - Read All
            - Read Users
      tags:
        - Roles
      description: Get Role by Name
      operationId: getRoleByName
      summary: Get Role by Name
  '/api/1/roles/{role_id}':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: role_id
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              data:
                items:
                  properties:
                    id:
                      description: role's unique ID in Onelogin
                      example: 123456
                      type: integer
                    name:
                      description: Role name
                      example: Employee
                      type: string
                  type: object
                type: array
              status:
                properties:
                  code:
                    example: 200
                    type: integer
                  error:
                    example: false
                    type: boolean
                  message:
                    example: Success
                    type: string
                  type:
                    example: Success
                    type: string
                required:
                  - code
                  - message
                type: object
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '403':
          description: Forbidden
          examples:
            application/json:
              code: 403
              error: true
              message: not allowed
              type: ForbiddenError
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage users
            - Manage All
            - Read All
            - Read Users
      tags:
        - Roles
      description: Get Role By ID
      operationId: getRoleById
      summary: Get Role by ID
  /api/1/saml_assertion:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: body
          name: body
          schema:
            example:
              app_id: '16819324'
              ip_address: 174.66.77.24
              password: P@ssw0rd
              subdomain: exampleOrganization
              username_or_email: hazel.zhang@onelogin.com
            properties:
              app_id:
                description: >-
                  App ID of the app for which you want to generate a SAML token.
                  This is the app ID in OneLogin.
                type: string
              ip_address:
                description: >-
                  If you are using this API in a scenario in which MFA is
                  required and you’ll need to be able to honor IP address
                  whitelisting defined in MFA policies, provide this parameter
                  and set its value to the whitelisted IP address that needs to
                  be bypassed.
                type: string
              password:
                description: >-
                  Password of the OneLogin user accessing the app for which you
                  want to generate a SAML token.
                type: string
              subdomain:
                description: >-
                  Set to the subdomain of the OneLogin user accessing the app
                  for which you want to generate a SAML token.
                type: string
              username_or_email:
                description: >-
                  Set this to the username or email of the OneLogin user
                  accessing the app for which you want to generate a SAML token.
                type: string
            required:
              - username_or_email
              - password
              - app_id
              - subdomain
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              data:
                items:
                  type: object
                type: array
              status:
                properties:
                  code:
                    example: 200
                    type: integer
                  error:
                    example: false
                    type: boolean
                  message:
                    example: Success
                    type: string
                  type:
                    example: Success
                    type: string
                required:
                  - code
                  - message
                type: object
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Authentication Only
            - Manage users
            - Manage All
      tags:
        - SAML Assertions
      description: Generate SAML Assertion
      operationId: generateSamlAssert
      summary: Generate SAML Assertion
  /api/1/saml_assertion/verify_factor:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: body
          name: body
          schema:
            properties:
              app_id:
                description: >-
                  App ID of the app for which you want to generate a SAML token.
                  This is the app ID in OneLogin.
                example: '1657651'
                type: string
              device_id:
                description: >-
                  Provide the MFA device_id you are submitting for verification.
                  The device_id is supplied by the Generate SAML Assertion API.
                example: '1657651'
                type: string
              do_not_notify:
                description: >-
                  When verifying MFA via Protect Push, set this to true to stop
                  additional push notifications being sent to the OneLogin
                  Protect device.
                example: false
                type: boolean
              otp_token:
                description: >-
                  Provide the OTP value for the MFA factor you are submitting
                  for verification. For some MFA factors; such as OneLogin OTP
                  SMS, which requires the user to request an OTP; the otp_token
                  value is not required, and if not included, returns a 200 OK -
                  Pending result. You’ll make a subsequent Verify Factor API
                  call to provide the otp_token value once it has been provided
                  to the user.
                example: '999999'
                type: string
              state_token:
                description: >-
                  Provide the state_token associated with the MFA device_id you
                  are submitting for verification. The state_token is supplied
                  by the Generate SAML Assertion API.
                example: 11x0x1x16x1x3259xxxx0x59xx6xxxx670x61x45xxxxx
                type: string
            required:
              - app_id
              - device_id
              - state_token
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              data:
                description: Provides the SAML assertion.
                example: >-
                  PHNhbWxwOlJlc3BvbnNlIHhtbG5zOnNhbWw9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iIHhtbG5zOnNhbWxwPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6cHJvdG9jb2wiIElEPSJSZjE5Y2EyMTI0ZGMxNzJmNzhmMjI3OTk3YzMwOTBkODVkNzFjYWMzOCIgVmVyc2lvbj0iMi4wIiBJc3N1ZUluc3RhbnQ9IjIwMjAtM
                type: string
              message:
                description: Plain text description describing the outcome of the response.
                example: SMS token sent to your mobile device. Authentication pending
                type: string
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Authentication Only
            - Manage users
            - Manage All
      tags:
        - SAML Assertions
      description: 'Verify Factor: SAML'
      operationId: verFactorSaml
      summary: Verify Factor SAML
  /api/1/users:
    get:
      produces:
        - application/json
      parameters:
        - description: How many items to return at one time (max 100)
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: The page number of results to return.
          in: query
          name: page
          type: integer
        - description: >-
            Set to the value extracted from Before-Cursor or After-Cursor
            headers to return the previous or next page.
          in: query
          name: cursor
          type: string
        - description: >-
            An ISO8601 timestamp value that returns all users created after a
            given date & time.
          in: query
          name: created_since
          type: string
        - description: >-
            An ISO8601 timestamp value that returns all users created before a
            given date & time.
          in: query
          name: created_until
          type: string
        - description: >-
            An ISO8601 timestamp value that returns all users updated after a
            given date & time.
          in: query
          name: updated_since
          type: string
        - description: >-
            An ISO8601 timestamp value that returns all users updated before a
            given date & time.
          in: query
          name: updated_until
          type: string
        - description: >-
            An ISO8601 timestamp value that returns all users that logged in
            after a given date & time.
          in: query
          name: last_login_since
          type: string
        - description: >-
            An ISO8601 timestamp value that returns all users that logged in
            before a given date & time.
          in: query
          name: last_login_until
          type: string
        - description: The first name of the user
          in: query
          name: firstname
          type: string
        - description: The last name of the user
          in: query
          name: lastname
          type: string
        - description: The email address of the user
          in: query
          name: email
          type: string
        - description: The username for the user
          in: query
          name: username
          type: string
        - description: The AD login name for the user
          in: query
          name: samaccountname
          type: string
        - in: query
          name: directory_id
          type: integer
        - description: An external identifier that has been set on the user
          in: query
          name: external_id
          type: string
        - description: A comma separated list of OneLogin User IDs
          in: query
          name: user_ids
          type: string
        - description: >-
            The short name of a custom attribute. Note that the attribute name
            is prefixed with custom_attributes.
          in: query
          name: 'custom_attributes.{attribute_name}'
          type: string
        - description: A comma separated list user attributes to return.
          in: query
          name: fields
          type: string
      responses:
        '200':
          description: OK
          headers:
            After-Cursor:
              description: >-
                A string that can be used to request the page of results that
                follows the current page using the same set of search filters
                and pagination options.
              type: string
            Before-Cursor:
              description: >-
                A string that can be used to request the page of results that
                preceed the current page using the same set of search filters
                and pagination options.
              type: string
            Current-Page:
              description: The index number of the current page being returned.
              type: integer
            Link:
              description: 'A set of urls which contains premade links for first, next'
              type: array
            Page-Items:
              description: The number of items returned in the response.
              type: integer
            Total-Count:
              description: The total number of items across all pages.
              type: integer
            Total-Pages:
              description: The total number of pages to return all results.
              type: integer
          schema:
            items:
              properties:
                activated_at:
                  type: string
                comment:
                  description: Free text related to the user.
                  type: string
                company:
                  description: The user's company.
                  type: string
                created_at:
                  type: string
                department:
                  description: The user's department.
                  type: string
                directory_id:
                  description: The ID of the OneLogin Directory of the user.
                  type: integer
                distinguished_name:
                  description: The distinguished name of the user.
                  type: string
                email:
                  description: A valid email for the user.
                  type: string
                external_id:
                  description: The ID of the user in an external directory.
                  type: string
                firstname:
                  description: The user's first name.
                  type: string
                group_id:
                  description: >-
                    The ID of the Group in OneLogin that the user is assigned
                    to.
                  type: integer
                id:
                  type: integer
                invalid_login_attempts:
                  type: integer
                invitation_sent_at:
                  type: string
                last_login:
                  type: string
                lastname:
                  description: The user's last name.
                  type: string
                locked_until:
                  type: string
                manager_ad_id:
                  description: The ID of the user's manager in Active Directory.
                  type: string
                manager_user_id:
                  description: The OneLogin User ID for the user's manager.
                  type: string
                member_of:
                  description: The user's directory membership.
                  type: string
                password:
                  description: The password to set for a user.
                  type: string
                password_algorithm:
                  description: >-
                    Use this when importing a password that's already hashed.
                    Prepend the salt value to the cleartext password value
                    before SHA-256-encoding it
                  type: string
                password_changed_at:
                  type: string
                password_confirmation:
                  description: Required if the password is being set.
                  type: string
                phone:
                  description: The E.164 format phone number for a user.
                  type: string
                preferred_locale_code:
                  type: string
                role_ids:
                  description: A list of OneLogin Role IDs of the user
                  items:
                    type: integer
                  minLength: 1
                  type: array
                salt:
                  description: The salt value used with the password_algorithm.
                  type: string
                samaccount_name:
                  description: The user's Active Directory username.
                  type: string
                state:
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                  type: integer
                status:
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 7
                    - 8
                  type: integer
                title:
                  description: The user's job title.
                  type: string
                trusted_idp_id:
                  description: The ID of the OneLogin Trusted IDP of the user.
                  type: integer
                updated_at:
                  type: string
                username:
                  description: A username for the user.
                  type: string
                userprincipalname:
                  description: The principle name of the user.
                  type: string
              type: object
            type: array
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '422':
          description: Unprocessable
          examples:
            application/json:
              code: 422
              error: true
              message: 'Validation failed: Value has already been taken'
              type: UnprocessableEntityError
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage users
            - Manage All
            - Read All
            - Read Users
      tags:
        - Users V1
      description: List Users
      operationId: listUsers
      summary: List Users
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: >-
            Controls how mappings will be applied to the user on creation.
            Defaults to async.
          enum:
            - async
            - sync
            - disabled
          in: query
          name: mappings
          type: string
        - description: Will passwords validate against the User Policy? Defaults to true.
          in: query
          name: validate_policy
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            properties:
              activated_at:
                type: string
              comment:
                description: Free text related to the user.
                type: string
              company:
                description: The user's company.
                type: string
              created_at:
                type: string
              department:
                description: The user's department.
                type: string
              directory_id:
                description: The ID of the OneLogin Directory of the user.
                type: integer
              distinguished_name:
                description: The distinguished name of the user.
                type: string
              email:
                description: A valid email for the user.
                type: string
              external_id:
                description: The ID of the user in an external directory.
                type: string
              firstname:
                description: The user's first name.
                type: string
              group_id:
                description: The ID of the Group in OneLogin that the user is assigned to.
                type: integer
              id:
                type: integer
              invalid_login_attempts:
                type: integer
              invitation_sent_at:
                type: string
              last_login:
                type: string
              lastname:
                description: The user's last name.
                type: string
              locked_until:
                type: string
              manager_ad_id:
                description: The ID of the user's manager in Active Directory.
                type: string
              manager_user_id:
                description: The OneLogin User ID for the user's manager.
                type: string
              member_of:
                description: The user's directory membership.
                type: string
              password:
                description: The password to set for a user.
                type: string
              password_algorithm:
                description: >-
                  Use this when importing a password that's already hashed.
                  Prepend the salt value to the cleartext password value before
                  SHA-256-encoding it
                type: string
              password_changed_at:
                type: string
              password_confirmation:
                description: Required if the password is being set.
                type: string
              phone:
                description: The E.164 format phone number for a user.
                type: string
              preferred_locale_code:
                type: string
              role_ids:
                description: A list of OneLogin Role IDs of the user
                items:
                  type: integer
                minLength: 1
                type: array
              salt:
                description: The salt value used with the password_algorithm.
                type: string
              samaccount_name:
                description: The user's Active Directory username.
                type: string
              state:
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                type: integer
              status:
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 7
                  - 8
                type: integer
              title:
                description: The user's job title.
                type: string
              trusted_idp_id:
                description: The ID of the OneLogin Trusted IDP of the user.
                type: integer
              updated_at:
                type: string
              username:
                description: A username for the user.
                type: string
              userprincipalname:
                description: The principle name of the user.
                type: string
            type: object
      responses:
        '201':
          description: The full user resource is returned
          schema:
            properties:
              activated_at:
                type: string
              comment:
                description: Free text related to the user.
                type: string
              company:
                description: The user's company.
                type: string
              created_at:
                type: string
              department:
                description: The user's department.
                type: string
              directory_id:
                description: The ID of the OneLogin Directory of the user.
                type: integer
              distinguished_name:
                description: The distinguished name of the user.
                type: string
              email:
                description: A valid email for the user.
                type: string
              external_id:
                description: The ID of the user in an external directory.
                type: string
              firstname:
                description: The user's first name.
                type: string
              group_id:
                description: The ID of the Group in OneLogin that the user is assigned to.
                type: integer
              id:
                type: integer
              invalid_login_attempts:
                type: integer
              invitation_sent_at:
                type: string
              last_login:
                type: string
              lastname:
                description: The user's last name.
                type: string
              locked_until:
                type: string
              manager_ad_id:
                description: The ID of the user's manager in Active Directory.
                type: string
              manager_user_id:
                description: The OneLogin User ID for the user's manager.
                type: string
              member_of:
                description: The user's directory membership.
                type: string
              password:
                description: The password to set for a user.
                type: string
              password_algorithm:
                description: >-
                  Use this when importing a password that's already hashed.
                  Prepend the salt value to the cleartext password value before
                  SHA-256-encoding it
                type: string
              password_changed_at:
                type: string
              password_confirmation:
                description: Required if the password is being set.
                type: string
              phone:
                description: The E.164 format phone number for a user.
                type: string
              preferred_locale_code:
                type: string
              role_ids:
                description: A list of OneLogin Role IDs of the user
                items:
                  type: integer
                minLength: 1
                type: array
              salt:
                description: The salt value used with the password_algorithm.
                type: string
              samaccount_name:
                description: The user's Active Directory username.
                type: string
              state:
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                type: integer
              status:
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 7
                  - 8
                type: integer
              title:
                description: The user's job title.
                type: string
              trusted_idp_id:
                description: The ID of the OneLogin Trusted IDP of the user.
                type: integer
              updated_at:
                type: string
              username:
                description: A username for the user.
                type: string
              userprincipalname:
                description: The principle name of the user.
                type: string
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '422':
          description: Unprocessable
          examples:
            application/json:
              code: 422
              error: true
              message: 'Validation failed: Value has already been taken'
              type: UnprocessableEntityError
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage users
            - Manage All
      tags:
        - Users V1
      description: Create a User
      operationId: createUser
      summary: Create a User
  /api/1/users/custom_attributes:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              data:
                description: >-
                  Provides a list of custom attribute fields (also known as
                  custom user fields) that are available for your account.

                  The values returned correspond to the values you provided in
                  the Shortname field when you defined the custom user field.

                  For details about defining custom user fields, see Custom User
                  Fields.
                example:
                  - - alias
                    - branch
                items:
                  items:
                    type: string
                  type: array
                type: array
              status:
                properties:
                  code:
                    example: 200
                    type: integer
                  error:
                    example: false
                    type: boolean
                  message:
                    example: Success
                    type: string
                  type:
                    example: Success
                    type: string
                required:
                  - code
                  - message
                type: object
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage users
            - Manage All
            - Read All
            - Read Users
      tags:
        - Users V1
      description: Get Custom Attributes
      operationId: getCustomAttributes
      summary: Get Custom Attributes
  '/api/1/users/set_password_clear_text/{user_id}':
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - in: body
          name: body
          schema:
            properties:
              password:
                description: >-
                  Set to the password value using cleartext.

                  Hashes are never stored as cleartext. They are stored securely
                  using cryptographic hash. OneLogin continuously upgrades the
                  strength of the hash. Ensure that the value meets the password
                  strength requirements set for the account.
                example: <password>
                type: string
              password_confirmation:
                description: Ensure that this value matches the password value exactly.
                example: <password_confirmation>
                type: string
              validate_policy:
                default: false
                description: >-
                  Will passwords validate against the User Policy. Defaults to
                  false.
                example: false
                type: boolean
            required:
              - password
              - password_confirmation
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '403':
          description: Forbidden
          examples:
            application/json:
              code: 403
              error: true
              message: not allowed
              type: ForbiddenError
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Users V1
      description: >-
        Update User password using their ID. This is done in cleartext and is
        insecure.
      operationId: updatePasswordInsecure
      summary: Set Password Using ID in Cleartext
  '/api/1/users/set_password_using_salt/{user_id}':
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - in: body
          name: body
          schema:
            properties:
              password:
                description: >-
                  Set to the password value using a SHA-256-encoded value. If
                  you are including your own password_salt value in your
                  request, prepend the salt value to the cleartext password
                  value before SHA-256-encoding it.

                  For example, if your salt value is hello and your cleartext
                  password value is password, the value you need to
                  SHA-256-encode is hellopassword. The resulting encoded value
                  would be
                  b1c788abac15390de987ad17b65ac73c9b475d428a51f245c645a442fddd078b.

                  Note that the alpha characters in this has must all be lower
                  case.
                example: xxxxx637aead4030a653f29dae62f1542d67484342c00627a65066e05c5f0
                type: string
              password_algorithm:
                description: Set to salt+sha256.
                example: salt+sha256
                type: string
              password_confirmation:
                description: This value must match the password value.
                example: xxxxx637aead4030a653f29dae62f1542d67484342c00627a65066e05c5f0
                type: string
              password_salt:
                description: >-
                  Optional. If your password hash has been salted then you can
                  provide the salt used in this param.

                  This assumes that the salt was prepended to the password
                  before doing the SHA256 hash.

                  The API supports a salt value that is up to 40 characters
                  long.
                example: 11xxxx1
                type: string
            required:
              - password
              - password_confirmation
              - password_algorithm
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '403':
          description: Forbidden
          examples:
            application/json:
              code: 403
              error: true
              message: not allowed
              type: ForbiddenError
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Users V1
      description: Update User Password Using ID and SHA-256 with salt.
      operationId: updatePasswordSecure
      summary: Set Password Using ID and SHA-256 and Salt
  '/api/1/users/{user_id}':
    delete:
      produces:
        - application/json
      parameters:
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
      responses:
        '204':
          description: 'On success, no content is returned in the response body.'
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage users
            - Manage All
      tags:
        - Users V1
      description: Delete A User
      operationId: deleteUser
      summary: Delete a User
    get:
      produces:
        - application/json
      parameters:
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            properties:
              activated_at:
                type: string
              comment:
                description: Free text related to the user.
                type: string
              company:
                description: The user's company.
                type: string
              created_at:
                type: string
              department:
                description: The user's department.
                type: string
              directory_id:
                description: The ID of the OneLogin Directory of the user.
                type: integer
              distinguished_name:
                description: The distinguished name of the user.
                type: string
              email:
                description: A valid email for the user.
                type: string
              external_id:
                description: The ID of the user in an external directory.
                type: string
              firstname:
                description: The user's first name.
                type: string
              group_id:
                description: The ID of the Group in OneLogin that the user is assigned to.
                type: integer
              id:
                type: integer
              invalid_login_attempts:
                type: integer
              invitation_sent_at:
                type: string
              last_login:
                type: string
              lastname:
                description: The user's last name.
                type: string
              locked_until:
                type: string
              manager_ad_id:
                description: The ID of the user's manager in Active Directory.
                type: string
              manager_user_id:
                description: The OneLogin User ID for the user's manager.
                type: string
              member_of:
                description: The user's directory membership.
                type: string
              password:
                description: The password to set for a user.
                type: string
              password_algorithm:
                description: >-
                  Use this when importing a password that's already hashed.
                  Prepend the salt value to the cleartext password value before
                  SHA-256-encoding it
                type: string
              password_changed_at:
                type: string
              password_confirmation:
                description: Required if the password is being set.
                type: string
              phone:
                description: The E.164 format phone number for a user.
                type: string
              preferred_locale_code:
                type: string
              role_ids:
                description: A list of OneLogin Role IDs of the user
                items:
                  type: integer
                minLength: 1
                type: array
              salt:
                description: The salt value used with the password_algorithm.
                type: string
              samaccount_name:
                description: The user's Active Directory username.
                type: string
              state:
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                type: integer
              status:
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 7
                  - 8
                type: integer
              title:
                description: The user's job title.
                type: string
              trusted_idp_id:
                description: The ID of the OneLogin Trusted IDP of the user.
                type: integer
              updated_at:
                type: string
              username:
                description: A username for the user.
                type: string
              userprincipalname:
                description: The principle name of the user.
                type: string
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage users
            - Manage All
            - Read All
            - Read Users
      tags:
        - Users V1
      description: Get User By ID
      operationId: getUserById
      summary: Get User by ID
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - description: >-
            Controls how mappings will be applied to the user on creation.
            Defaults to async.
          enum:
            - async
            - sync
            - disabled
          in: query
          name: mappings
          type: string
        - description: Will passwords validate against the User Policy? Defaults to true.
          in: query
          name: validate_policy
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            properties:
              activated_at:
                type: string
              comment:
                description: Free text related to the user.
                type: string
              company:
                description: The user's company.
                type: string
              created_at:
                type: string
              department:
                description: The user's department.
                type: string
              directory_id:
                description: The ID of the OneLogin Directory of the user.
                type: integer
              distinguished_name:
                description: The distinguished name of the user.
                type: string
              email:
                description: A valid email for the user.
                type: string
              external_id:
                description: The ID of the user in an external directory.
                type: string
              firstname:
                description: The user's first name.
                type: string
              group_id:
                description: The ID of the Group in OneLogin that the user is assigned to.
                type: integer
              id:
                type: integer
              invalid_login_attempts:
                type: integer
              invitation_sent_at:
                type: string
              last_login:
                type: string
              lastname:
                description: The user's last name.
                type: string
              locked_until:
                type: string
              manager_ad_id:
                description: The ID of the user's manager in Active Directory.
                type: string
              manager_user_id:
                description: The OneLogin User ID for the user's manager.
                type: string
              member_of:
                description: The user's directory membership.
                type: string
              password:
                description: The password to set for a user.
                type: string
              password_algorithm:
                description: >-
                  Use this when importing a password that's already hashed.
                  Prepend the salt value to the cleartext password value before
                  SHA-256-encoding it
                type: string
              password_changed_at:
                type: string
              password_confirmation:
                description: Required if the password is being set.
                type: string
              phone:
                description: The E.164 format phone number for a user.
                type: string
              preferred_locale_code:
                type: string
              role_ids:
                description: A list of OneLogin Role IDs of the user
                items:
                  type: integer
                minLength: 1
                type: array
              salt:
                description: The salt value used with the password_algorithm.
                type: string
              samaccount_name:
                description: The user's Active Directory username.
                type: string
              state:
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                type: integer
              status:
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 7
                  - 8
                type: integer
              title:
                description: The user's job title.
                type: string
              trusted_idp_id:
                description: The ID of the OneLogin Trusted IDP of the user.
                type: integer
              updated_at:
                type: string
              username:
                description: A username for the user.
                type: string
              userprincipalname:
                description: The principle name of the user.
                type: string
            type: object
      responses:
        '200':
          description: The full user resource is returned
          schema:
            properties:
              activated_at:
                type: string
              comment:
                description: Free text related to the user.
                type: string
              company:
                description: The user's company.
                type: string
              created_at:
                type: string
              department:
                description: The user's department.
                type: string
              directory_id:
                description: The ID of the OneLogin Directory of the user.
                type: integer
              distinguished_name:
                description: The distinguished name of the user.
                type: string
              email:
                description: A valid email for the user.
                type: string
              external_id:
                description: The ID of the user in an external directory.
                type: string
              firstname:
                description: The user's first name.
                type: string
              group_id:
                description: The ID of the Group in OneLogin that the user is assigned to.
                type: integer
              id:
                type: integer
              invalid_login_attempts:
                type: integer
              invitation_sent_at:
                type: string
              last_login:
                type: string
              lastname:
                description: The user's last name.
                type: string
              locked_until:
                type: string
              manager_ad_id:
                description: The ID of the user's manager in Active Directory.
                type: string
              manager_user_id:
                description: The OneLogin User ID for the user's manager.
                type: string
              member_of:
                description: The user's directory membership.
                type: string
              password:
                description: The password to set for a user.
                type: string
              password_algorithm:
                description: >-
                  Use this when importing a password that's already hashed.
                  Prepend the salt value to the cleartext password value before
                  SHA-256-encoding it
                type: string
              password_changed_at:
                type: string
              password_confirmation:
                description: Required if the password is being set.
                type: string
              phone:
                description: The E.164 format phone number for a user.
                type: string
              preferred_locale_code:
                type: string
              role_ids:
                description: A list of OneLogin Role IDs of the user
                items:
                  type: integer
                minLength: 1
                type: array
              salt:
                description: The salt value used with the password_algorithm.
                type: string
              samaccount_name:
                description: The user's Active Directory username.
                type: string
              state:
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                type: integer
              status:
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 7
                  - 8
                type: integer
              title:
                description: The user's job title.
                type: string
              trusted_idp_id:
                description: The ID of the OneLogin Trusted IDP of the user.
                type: integer
              updated_at:
                type: string
              username:
                description: A username for the user.
                type: string
              userprincipalname:
                description: The principle name of the user.
                type: string
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '422':
          description: Unprocessable
          examples:
            application/json:
              code: 422
              error: true
              message: 'Validation failed: Value has already been taken'
              type: UnprocessableEntityError
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage users
            - Manage All
      tags:
        - Users V1
      description: Update a User
      operationId: updateUser
      summary: Update a User
  '/api/1/users/{user_id}/add_roles':
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - in: body
          name: body
          schema:
            properties:
              role_id_array:
                description: >-
                  Set to an array of one or more role IDs. The IDs must be
                  positive integers.
                items:
                  type: integer
                type: array
            required:
              - role_id_array
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '403':
          description: Forbidden
          examples:
            application/json:
              code: 403
              error: true
              message: not allowed
              type: ForbiddenError
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage users
      tags:
        - Users V1
      description: Add Roles for a User
      operationId: addRolesToUser
      summary: Add Roles for a User
  '/api/1/users/{user_id}/apps':
    get:
      produces:
        - application/json
      parameters:
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - default: false
          description: >-
            Defaults to `false`. When `true` will show all apps that are
            assigned to a user regardless of their portal visibility setting.
          in: query
          name: ignore_visibility
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            items:
              properties:
                extension:
                  description: >-
                    Boolean that indicates if the OneLogin browser extension is
                    required to launch this app.
                  type: boolean
                icon_url:
                  description: >-
                    A url for the icon that represents the app in the OneLogin
                    portal
                  type: string
                id:
                  description: The App ID
                  type: integer
                login_id:
                  description: Unqiue identifier for this user and app combination.
                  type: integer
                name:
                  description: The name of the app.
                  type: string
                provisioning_enabled:
                  description: Indicates if provisioning is enabled for this app.
                  type: boolean
                provisioning_state:
                  description: >-
                    If provisioning is enabled this indicates the state of
                    provisioning for the given user.
                  enum:
                    - unknown
                    - provisioning
                    - modifying
                    - deleting
                    - provisioning_pending_approval
                    - deleting_pending_approval
                    - modifying_pending_approval
                    - linking
                    - provisioned
                    - deleted
                    - modifying_failed
                    - provisioning_failed
                    - deleting_failed
                    - linking_failed
                    - disabled
                    - nonexistent
                    - modifying_pending_approval_then_disabled
                  type: string
                provisioning_status:
                  enum:
                    - enabling
                    - disabling
                    - enabling_pending_approval
                    - disabling_pendding_approval
                    - enabled
                    - disabled
                    - disabling_failed
                    - enabling_failed
                  type: string
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage users
            - Manage All
            - Read All
            - Read Users
      tags:
        - Users V1
      description: Get Apps for User
      operationId: getUserApps
      summary: Get Apps for a User
  '/api/1/users/{user_id}/auth_factor':
    get:
      produces:
        - application/json
      parameters:
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              data:
                properties:
                  auth_factors:
                    items:
                      properties:
                        factor_id:
                          description: >-
                            Identifier for the factor which will be used for
                            user enrollment
                          example: 16282
                          type: integer
                        name:
                          description: >-
                            Official authentication factor name, as it appears
                            to administrators in OneLogin.
                          example: Onelogin SMS
                          type: string
                    type: array
                type: object
              status:
                properties:
                  code:
                    example: 200
                    type: integer
                  error:
                    example: false
                    type: boolean
                  message:
                    example: Success
                    type: string
                  type:
                    example: Success
                    type: string
                required:
                  - code
                  - message
                type: object
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage users
            - Manage All
            - Read All
            - Read Users
      tags:
        - Multi Factor Authentication V1
      description: Get MFA Factors
      operationId: getMFAFactors
      summary: Get Available Factors
  '/api/1/users/{user_id}/lock_user':
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - in: body
          name: body
          schema:
            properties:
              locked_until:
                description: >-
                  Set to the number of minutes for which you want to lock the
                  user account.

                  Set to 0 if you want to lock the user account based on the
                  Lock effective period set in the policy assigned to the user.

                  If no policy is assigned to the user, setting this value to 0
                  will lock the user’s account until you unlock it

                  Note that this value can not be less time that the Lock
                  Effective Period specified on a user policy.
                example: 15
                type: integer
            required:
              - locked_until
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '403':
          description: Forbidden
          examples:
            application/json:
              code: 403
              error: true
              message: not allowed
              type: ForbiddenError
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Users V1
      description: Lock User Account
      operationId: lockAccountUser
      summary: Lock User Account
  '/api/1/users/{user_id}/logout':
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - in: body
          name: body
          schema:
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '403':
          description: Forbidden
          examples:
            application/json:
              code: 403
              error: true
              message: not allowed
              type: ForbiddenError
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage users
            - Manage All
            - Authentication Only
      tags:
        - Users V1
      description: Log Out User
      operationId: logOutUser
      summary: Log User Out
  '/api/1/users/{user_id}/mfa_token':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - in: body
          name: body
          schema:
            properties:
              expires_in:
                description: >-
                  Set the duration of the token in seconds.

                  Token expiration defaults to 259200 seconds = 72 hours. 72
                  hours is the max value.
                example: 300
                type: integer
              reusable:
                default: false
                description: >-
                  Defines if the token is reusable multiple times within the
                  expiry window.

                  Value defaults to false. If set to true, token can be used
                  multiple times, until it expires.
                example: false
                type: boolean
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              expires_at:
                description: >-
                  Defines the expiration time and date for the token. Format is
                  UTC time.
                example: '2019-01-16T22:16:38.000Z'
                type: string
              mfa_token:
                description: >-
                  Token can function as a temporary MFA token. It can be used to
                  authenticate for any app when valid.
                example: '55647655'
                type: string
              resuable:
                description: >-
                  true indcates the token can be used multiple times, until it
                  expires. false indicates the token is invalid after a single
                  use or once it expires. Defaults to false.
                example: true
                type: boolean
            type: object
      security:
        - OAuth2:
            - Manage users
            - Manage All
      tags:
        - Multi Factor Authentication V1
      description: Generate MFA Token
      operationId: generateMFAtoken
      summary: Generate Temp MFA Token
  '/api/1/users/{user_id}/otp_devices':
    get:
      produces:
        - application/json
      parameters:
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              data:
                properties:
                  otp_devices:
                    items:
                      properties:
                        active:
                          description: >-
                            True = enabled (used successfully for authentication
                            at least once). False = pending (registered but
                            never used).
                          example: true
                          type: boolean
                        auth_factor_name:
                          description: >-
                            "Official" authentication factor name, as it appears
                            to administrators in OneLogin.
                          example: Onelogin SMS
                          type: string
                        default:
                          description: True = is user’s default MFA device for OneLogin.
                          example: false
                          type: boolean
                        id:
                          description: MFA device identifier.
                          example: 525509
                          type: integer
                        needs_trigger:
                          description: >-
                            true: You MUST Activate this Factor to trigger an
                            SMS or Push notification before Verifying the OTP
                            code. false: No Activation required. You can Verify
                            the OTP immediately.

                            MFA factors that provide both push notifications
                            (user accepts notification) and pull code submission
                            (user initiates code submission from device or
                            enters it manually) should appear twice; once with
                            needs_trigger: true and once with needs_trigger:
                            false.
                          example: true
                          type: boolean
                        phone_number:
                          description: >-
                            For OTP codes sent via SMS, the phone number
                            receiving the SMS message.
                          example: +1xxxxxxxxxx
                          type: string
                        state_token:
                          description: >-
                            A short lived token that is required to Verify the
                            Factor. This token expires in 120 seconds.
                          example: f2402de2b446abd86ea5aa1f79b3fa72b4befacd
                          type: string
                        type_display_name:
                          description: >-
                            Authentication factor display name as it appears to
                            users upon initial registration, as defined by
                            admins at Settings > Authentication Factors.
                          example: Onelogin SMS
                          type: string
                        user_display_name:
                          description: >-
                            Authentication factor display name assigned by users
                            when they enroll the device.
                          example: Rich's Phone
                          type: string
                    type: array
                type: object
              status:
                properties:
                  code:
                    example: 200
                    type: integer
                  error:
                    example: false
                    type: boolean
                  message:
                    example: Success
                    type: string
                  type:
                    example: Success
                    type: string
                required:
                  - code
                  - message
                type: object
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage users
            - Manage All
            - Read All
            - Read Users
      tags:
        - Multi Factor Authentication V1
      description: Get Enrolled Factors
      operationId: getEnrolledFactors
      summary: Get Enrolled Factors
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - in: body
          name: body
          schema:
            properties:
              display_name:
                description: A name for the users device
                example: Rich's Phone
                type: string
              factor_id:
                description: The identifier of the factor to enroll the user with.
                example: 16282
                type: integer
              number:
                description: The phone number of the user in E.164 format.
                example: +1xxxxxxxxxx
                type: string
              verified:
                description: >-
                  Defaults to false. Some factors like SMS or Voice require that
                  a user recieve a token and then that token is supplied to the
                  Verify endpoint before the device is considered active.

                  You can set verfied to `true` which indicates the the users
                  phone number is pre verified and the device can be immediately
                  activated.           
                type: boolean
            required:
              - factor_id
              - display_name
              - number
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              data:
                items:
                  properties:
                    active:
                      description: >-
                        True = enabled (used successfully for authentication at
                        least once). False = pending (registered but never
                        used).
                      example: true
                      type: boolean
                    auth_factor_name:
                      description: >-
                        "Official" authentication factor name, as it appears to
                        administrators in OneLogin.
                      example: Onelogin SMS
                      type: string
                    default:
                      description: True = is user’s default MFA device for OneLogin.
                      example: false
                      type: boolean
                    id:
                      description: MFA device identifier.
                      example: 525509
                      type: integer
                    needs_trigger:
                      description: >-
                        true: You MUST Activate this Factor to trigger an SMS or
                        Push notification before Verifying the OTP code. false:
                        No Activation required. You can Verify the OTP
                        immediately.

                        MFA factors that provide both push notifications (user
                        accepts notification) and pull code submission (user
                        initiates code submission from device or enters it
                        manually) should appear twice; once with needs_trigger:
                        true and once with needs_trigger: false.
                      example: true
                      type: boolean
                    phone_number:
                      description: >-
                        For OTP codes sent via SMS, the phone number receiving
                        the SMS message.
                      example: +1xxxxxxxxxx
                      type: string
                    state_token:
                      description: >-
                        A short lived token that is required to Verify the
                        Factor. This token expires in 120 seconds.
                      example: f2402de2b446abd86ea5aa1f79b3fa72b4befacd
                      type: string
                    type_display_name:
                      description: >-
                        Authentication factor display name as it appears to
                        users upon initial registration, as defined by admins at
                        Settings > Authentication Factors.
                      example: Onelogin SMS
                      type: string
                    user_display_name:
                      description: >-
                        Authentication factor display name assigned by users
                        when they enroll the device.
                      example: Rich's Phone
                      type: string
                type: array
              status:
                properties:
                  code:
                    example: 200
                    type: integer
                  error:
                    example: false
                    type: boolean
                  message:
                    example: Success
                    type: string
                  type:
                    example: Success
                    type: string
                required:
                  - code
                  - message
                type: object
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage users
            - Manage All
      tags:
        - Multi Factor Authentication V1
      description: ' Enroll an Authentication Factor'
      operationId: enrollMfaFactor
      summary: Enroll a Factor
  '/api/1/users/{user_id}/otp_devices/{device_id}':
    delete:
      produces:
        - application/json
      parameters:
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - in: path
          name: device_id
          required: true
          type: string
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage users
            - Manage All
      tags:
        - Multi Factor Authentication V1
      description: Remove an enrolled MFA device for a user
      operationId: removeMfaFactors
      summary: Remove an Enrolled Factor
  '/api/1/users/{user_id}/otp_devices/{device_id}/trigger':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - in: path
          name: device_id
          required: true
          type: string
        - in: body
          name: body
          schema:
            properties:
              numeric_sms_otp:
                description: >-
                  Optional. Defaults to false. Only applies to SMS factor.

                  When set to `true` a 6 digit numeric code will be sent to the
                  user instead of the standard code which is alphanumeric.
                example: true
                type: boolean
              sms_message:
                description: >-
                  Optional. Only applies to SMS factor.

                  A message template that will be sent via SMS. Max length of
                  the message after template items are inserted is 160
                  characters.

                  The following template variables can be included in the
                  message.

                  - {{otp_code}} - The security code. - {{expiration}} - The
                  number of minutes until the one time code expires.
                example: >-
                  This is a security code from ABC Co {{otp_code}}. It expires
                  in {{expiration}} minutes.
                type: string
              state_token_expires_in:
                description: >-
                  Optional. Sets the window of time in seconds that the factor
                  must be verified within.

                  Defaults to 120 seconds (2 minutes). Max 900 seconds (15
                  minutes).
                example: 300
                type: integer
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              data:
                properties:
                  otp_devices:
                    items:
                      properties:
                        active:
                          description: >-
                            True = enabled (used successfully for authentication
                            at least once). False = pending (registered but
                            never used).
                          example: true
                          type: boolean
                        auth_factor_name:
                          description: >-
                            "Official" authentication factor name, as it appears
                            to administrators in OneLogin.
                          example: Onelogin SMS
                          type: string
                        default:
                          description: True = is user’s default MFA device for OneLogin.
                          example: false
                          type: boolean
                        id:
                          description: MFA device identifier.
                          example: 525509
                          type: integer
                        needs_trigger:
                          description: >-
                            true: You MUST Activate this Factor to trigger an
                            SMS or Push notification before Verifying the OTP
                            code. false: No Activation required. You can Verify
                            the OTP immediately.

                            MFA factors that provide both push notifications
                            (user accepts notification) and pull code submission
                            (user initiates code submission from device or
                            enters it manually) should appear twice; once with
                            needs_trigger: true and once with needs_trigger:
                            false.
                          example: true
                          type: boolean
                        phone_number:
                          description: >-
                            For OTP codes sent via SMS, the phone number
                            receiving the SMS message.
                          example: +1xxxxxxxxxx
                          type: string
                        state_token:
                          description: >-
                            A short lived token that is required to Verify the
                            Factor. This token expires in 120 seconds.
                          example: f2402de2b446abd86ea5aa1f79b3fa72b4befacd
                          type: string
                        type_display_name:
                          description: >-
                            Authentication factor display name as it appears to
                            users upon initial registration, as defined by
                            admins at Settings > Authentication Factors.
                          example: Onelogin SMS
                          type: string
                        user_display_name:
                          description: >-
                            Authentication factor display name assigned by users
                            when they enroll the device.
                          example: Rich's Phone
                          type: string
                    type: array
                type: object
              status:
                properties:
                  code:
                    example: 200
                    type: integer
                  error:
                    example: false
                    type: boolean
                  message:
                    example: Success
                    type: string
                  type:
                    example: Success
                    type: string
                required:
                  - code
                  - message
                type: object
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage users
            - Manage All
      tags:
        - Multi Factor Authentication V1
      description: Activate a Factor
      operationId: activateMfaFactors
      summary: Activate a Factor
  '/api/1/users/{user_id}/otp_devices/{device_id}/verify':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - in: path
          name: device_id
          required: true
          type: string
        - in: body
          name: body
          schema:
            properties:
              otp_token:
                description: >-
                  OTP code provided by the device or SMS message sent to user.

                  When a device like OneLogin Protect that supports Push has
                  been used you do not need to provide the otp_token and can
                  keep polling this endpoint until the state_token expires.
                example: B41832
                type: string
              state_token:
                description: >-
                  The state_token is returned after a successful request to
                  Enroll a Factor or Activate a Factor. The state_token MUST be
                  provided if the needs_trigger attribute from the proceeding
                  calls is set to true.

                  Note that the state_token expires 120 seconds after creation.
                  If the token is expired you will need to Activate the Factor
                  again.
                example: 98e008497066bc2763c52342996e06358aab2e32
                type: string
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage users
            - Manage All
      tags:
        - Multi Factor Authentication V1
      description: Verify a Factor
      operationId: verifyMfaFactor
      summary: Verify a Factor
  '/api/1/users/{user_id}/remove_roles':
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - in: body
          name: body
          schema:
            properties:
              role_id_array:
                items:
                  properties:
                    role_id:
                      type: integer
                type: array
            required:
              - role_id_array
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '403':
          description: Forbidden
          examples:
            application/json:
              code: 403
              error: true
              message: not allowed
              type: ForbiddenError
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Users V1
      description: Remove Roles for a User
      operationId: removeUserRole
      summary: Remove Roles for a User
  '/api/1/users/{user_id}/roles':
    get:
      produces:
        - application/json
      parameters:
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              data:
                description: List of Role IDs that are assigned to the User
                items:
                  type: integer
                type: array
              status:
                properties:
                  code:
                    example: 200
                    type: integer
                  error:
                    example: false
                    type: boolean
                  message:
                    example: Success
                    type: string
                  type:
                    example: Success
                    type: string
                required:
                  - code
                  - message
                type: object
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '403':
          description: Forbidden
          examples:
            application/json:
              code: 403
              error: true
              message: not allowed
              type: ForbiddenError
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
            - Read All
      tags:
        - Users V1
      description: Get User Roles
      operationId: getUserRoles
      summary: Get Roles for a User
  '/api/1/users/{user_id}/set_state':
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - in: body
          name: body
          schema:
            properties:
              state:
                description: |-
                  Set to the state value. Valid values include:
                    - 0 : Unapproved
                    - 1 : Approved
                    - 2 : Rejected
                    - 3 : Unlicensed
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                example: 1
                type: integer
            required:
              - state
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '403':
          description: Forbidden
          examples:
            application/json:
              code: 403
              error: true
              message: not allowed
              type: ForbiddenError
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Users V1
      description: Set User State
      operationId: setUserState
      summary: Set User State
  /api/2/api_authorizations:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successful response
          schema:
            items:
              description: base resource for configuring api authorization in OneLogin
              properties:
                configuration:
                  description: Authorization server configuration
                  properties:
                    access_token_expiration_minutes:
                      description: >-
                        The number of minutes until access token expires. There
                        is no maximum expiry limit.
                      example: 20
                      type: integer
                    audiences:
                      description: >-
                        List of API endpoints that will be returned in Access
                        Tokens.
                      items:
                        type: string
                      type: array
                    refresh_token_expiration_minutes:
                      description: >-
                        The number of minutes until refresh token expires. There
                        is no maximum expiry limit.
                      example: 30
                      type: integer
                    resource_identifier:
                      description: >-
                        Unique identifier for the API that the Authorization
                        Server will issue Access Tokens for.
                      example: 'https://example.com/contacts'
                      type: string
                  required:
                    - resource_identifier
                    - audiences
                  type: object
                description:
                  description: Description of what the API does.
                  example: API manages contacts
                  type: string
                id:
                  description: Auth server unique ID in Onelogin
                  example: 1022697
                  type: integer
                name:
                  description: Name of the API.
                  example: Contacts API
                  type: string
              required:
                - name
                - description
                - configuration
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - API Authorization Server
      description: List Authorization Servers
      operationId: listAuthServers
      summary: List Api Auth Servers
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          required: true
          type: string
          x-example: application/json
        - in: body
          name: body
          schema:
            description: base resource for configuring api authorization in OneLogin
            properties:
              configuration:
                description: Authorization server configuration
                properties:
                  access_token_expiration_minutes:
                    description: >-
                      The number of minutes until access token expires. There is
                      no maximum expiry limit.
                    example: 20
                    type: integer
                  audiences:
                    description: >-
                      List of API endpoints that will be returned in Access
                      Tokens.
                    items:
                      type: string
                    type: array
                  refresh_token_expiration_minutes:
                    description: >-
                      The number of minutes until refresh token expires. There
                      is no maximum expiry limit.
                    example: 30
                    type: integer
                  resource_identifier:
                    description: >-
                      Unique identifier for the API that the Authorization
                      Server will issue Access Tokens for.
                    example: 'https://example.com/contacts'
                    type: string
                required:
                  - resource_identifier
                  - audiences
                type: object
              description:
                description: Description of what the API does.
                example: API manages contacts
                type: string
              id:
                description: Auth server unique ID in Onelogin
                example: 1022697
                type: integer
              name:
                description: Name of the API.
                example: Contacts API
                type: string
            required:
              - name
              - description
              - configuration
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            type: integer
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              message: invalid value in \"auth_method\"
              name: UnprocessableEntityError
              statusCode: 422
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - API Authorization Server
      description: Create Auth Server
      operationId: createAuthServer
      summary: Create Api Auth Server
  '/api/2/api_authorizations/{api_auth_id}':
    delete:
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: api_auth_id
          required: true
          type: string
      responses:
        '204':
          description: Success. The auth server is deleted. No content is returned.
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
            - Read All
      tags:
        - API Authorization Server
      description: Delete Authentication Server
      operationId: deleteAuthServer
      summary: Delete Api Auth Server
    get:
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: api_auth_id
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            description: base resource for configuring api authorization in OneLogin
            properties:
              configuration:
                description: Authorization server configuration
                properties:
                  access_token_expiration_minutes:
                    description: >-
                      The number of minutes until access token expires. There is
                      no maximum expiry limit.
                    example: 20
                    type: integer
                  audiences:
                    description: >-
                      List of API endpoints that will be returned in Access
                      Tokens.
                    items:
                      type: string
                    type: array
                  refresh_token_expiration_minutes:
                    description: >-
                      The number of minutes until refresh token expires. There
                      is no maximum expiry limit.
                    example: 30
                    type: integer
                  resource_identifier:
                    description: >-
                      Unique identifier for the API that the Authorization
                      Server will issue Access Tokens for.
                    example: 'https://example.com/contacts'
                    type: string
                required:
                  - resource_identifier
                  - audiences
                type: object
              description:
                description: Description of what the API does.
                example: API manages contacts
                type: string
              id:
                description: Auth server unique ID in Onelogin
                example: 1022697
                type: integer
              name:
                description: Name of the API.
                example: Contacts API
                type: string
            required:
              - name
              - description
              - configuration
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - API Authorization Server
      description: Get Authorization Server
      operationId: getAuthServer
      summary: Get Api Auth Server
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          required: true
          type: string
          x-example: application/json
        - in: path
          name: api_auth_id
          required: true
          type: string
        - in: body
          name: body
          schema:
            description: base resource for configuring api authorization in OneLogin
            properties:
              configuration:
                description: Authorization server configuration
                properties:
                  access_token_expiration_minutes:
                    description: >-
                      The number of minutes until access token expires. There is
                      no maximum expiry limit.
                    example: 20
                    type: integer
                  audiences:
                    description: >-
                      List of API endpoints that will be returned in Access
                      Tokens.
                    items:
                      type: string
                    type: array
                  refresh_token_expiration_minutes:
                    description: >-
                      The number of minutes until refresh token expires. There
                      is no maximum expiry limit.
                    example: 30
                    type: integer
                  resource_identifier:
                    description: >-
                      Unique identifier for the API that the Authorization
                      Server will issue Access Tokens for.
                    example: 'https://example.com/contacts'
                    type: string
                required:
                  - resource_identifier
                  - audiences
                type: object
              description:
                description: Description of what the API does.
                example: API manages contacts
                type: string
              id:
                description: Auth server unique ID in Onelogin
                example: 1022697
                type: integer
              name:
                description: Name of the API.
                example: Contacts API
                type: string
            required:
              - name
              - description
              - configuration
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            type: integer
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              message: invalid value in \"auth_method\"
              name: UnprocessableEntityError
              statusCode: 422
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - API Authorization Server
      description: Update Authorization Server
      operationId: updateAuthServer
      summary: Update Api Auth Server
  '/api/2/api_authorizations/{api_auth_id}/claims':
    get:
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: api_auth_id
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            items:
              properties:
                attribute_transformations:
                  description: >-
                    The type of transformation to perform on multi valued
                    attributes.
                  type: string
                default_values:
                  description: Relates to Rules/Entitlements. Not supported yet.
                  type: string
                id:
                  description: The unique ID of the claim.
                  example: 320780
                  type: integer
                label:
                  description: The UI label for the claims.
                  example: email_address
                  type: string
                provisioned_entitlements:
                  description: Relates to Rules/Entitlements. Not supported yet.
                  type: boolean
                skip_if_blank:
                  description: not used
                  type: boolean
                user_attribute_macros:
                  description: >-
                    When `user_attribute_mappings` is set to `_macro_` this
                    macro will be used to assign the claims value.
                  type: string
                user_attribute_mappings:
                  description: A user attribute to map values from.
                  example: email
                  type: string
                values:
                  description: Relates to Rules/Entitlements. Not supported yet.
                  example: []
                  items:
                    type: string
                  type: array
              type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - 'API Auth: Claims'
      description: Get Authorization claims
      operationId: getAuthclaims
      summary: Get Api Auth Server claims
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          required: true
          type: string
          x-example: application/json
        - in: path
          name: api_auth_id
          required: true
          type: string
        - in: body
          name: body
          schema:
            properties:
              name:
                description: >-
                  The attribute name for the claim when its returned in an
                  Access Token
                example: email_address
                type: string
              user_attribute_macros:
                description: >-
                  When `user_attribute_mappings` is set to `_macro_` this macro
                  will be used to assign the parameter value.
                type: string
              user_attribute_mappings:
                description: >-
                  A user attribute to map values from For custom attributes
                  prefix the name of the attribute with `custom_attribute_`.
                  e.g. To get the value for custom attribute `employee_id` use
                  `custom_attribute_employee_id`.
                example: email
                type: string
            required:
              - name
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            type: integer
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              message: invalid value in \"auth_method\"
              name: UnprocessableEntityError
              statusCode: 422
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - 'API Auth: Claims'
      description: Create Authorization Claim
      operationId: createAuthClaim
      summary: Create Api Auth Server Claim
  '/api/2/api_authorizations/{api_auth_id}/claims/{claim_id}':
    delete:
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: api_auth_id
          required: true
          type: string
        - in: path
          name: claim_id
          required: true
          type: integer
      responses:
        '204':
          description: Success. The claim is deleted. No content is returned.
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - 'API Auth: Claims'
      description: Delete Authorization Claim
      operationId: deleteAuthClaim
      summary: Delete Api Auth Server Claim
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          required: true
          type: string
          x-example: application/json
        - in: path
          name: api_auth_id
          required: true
          type: string
        - in: path
          name: claim_id
          required: true
          type: integer
        - in: body
          name: body
          schema:
            properties:
              name:
                description: >-
                  The attribute name for the claim when its returned in an
                  Access Token
                example: email_address
                type: string
              user_attribute_macros:
                description: >-
                  When `user_attribute_mappings` is set to `_macro_` this macro
                  will be used to assign the parameter value.
                type: string
              user_attribute_mappings:
                description: >-
                  A user attribute to map values from For custom attributes
                  prefix the name of the attribute with `custom_attribute_`.
                  e.g. To get the value for custom attribute `employee_id` use
                  `custom_attribute_employee_id`.
                example: email
                type: string
            required:
              - name
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              id:
                description: Unique ID for the Scope
                example: 323005
                type: integer
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              message: invalid value in \"auth_method\"
              name: UnprocessableEntityError
              statusCode: 422
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - 'API Auth: Claims'
      description: Update Authorization Server Claim
      operationId: updateClaim
      summary: Update Api Auth Server Claim
  '/api/2/api_authorizations/{api_auth_id}/clients':
    get:
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: api_auth_id
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              api_auth_id:
                example: 1033034
                type: integer
              app_id:
                description: Unique Client App ID
                example: 1026152
                type: integer
              name:
                description: Name of client app
                example: An oidc app
                type: string
              scopes:
                description: List of All Scopes assigned to a client app
                items:
                  properties:
                    description:
                      description: Description of the scope
                      example: Read some contacts
                      type: string
                    id:
                      description: Unique Scope ID value
                      example: 25
                      type: integer
                    value:
                      description: Scope Value
                      example: 'read:contacts'
                      type: string
                  type: object
                type: array
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - 'API Auth: Client Apps'
      description: List Client Apps
      operationId: listClientApps
      summary: List Clients Apps
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          description: Set to `application/json`
          in: header
          name: Content-Type
          required: true
          type: string
          x-example: application/json
        - in: path
          name: api_auth_id
          required: true
          type: string
        - in: body
          name: body
          schema:
            properties:
              app_id:
                description: The ID of the OpenId Connect app to allow access through.
                example: 1026152
                type: integer
              scopes:
                description: >-
                  An array of Scope IDs that represent scopes the app can
                  request
                example:
                  - 31
                  - 24
                items:
                  type: integer
                type: array
            type: object
      responses:
        '201':
          description: Created
          schema:
            properties:
              api_auth_id:
                example: 1022697
                type: integer
              app_id:
                example: 909021
                type: integer
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              message: invalid value in \"auth_method\"
              name: UnprocessableEntityError
              statusCode: 422
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - 'API Auth: Client Apps'
      description: Add Client App
      operationId: addClientApp
      summary: Add Client App
  '/api/2/api_authorizations/{api_auth_id}/clients/{client_app_id}':
    delete:
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: api_auth_id
          required: true
          type: string
        - in: path
          name: client_app_id
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              api_auth_id:
                example: 1022697
                type: integer
              app_id:
                example: 909021
                type: integer
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              message: invalid value in \"auth_method\"
              name: UnprocessableEntityError
              statusCode: 422
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - 'API Auth: Client Apps'
      description: Delete Client App
      operationId: deleteClientApp
      summary: Remove Client App
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          description: Set to `application/json`
          in: header
          name: Content-Type
          required: true
          type: string
          x-example: application/json
        - in: path
          name: api_auth_id
          required: true
          type: string
        - in: path
          name: client_app_id
          required: true
          type: integer
        - in: body
          name: body
          schema:
            properties:
              scopes:
                description: An array of Scope IDs the scopes the app can request
                example:
                  - 123
                  - 456
                items:
                  type: integer
                type: array
            type: object
      responses:
        '200':
          description: Successful Response
          schema:
            properties:
              api_auth_id:
                example: 1022697
                type: integer
              app_id:
                example: 909021
                type: integer
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              message: invalid value in \"auth_method\"
              name: UnprocessableEntityError
              statusCode: 422
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - 'API Auth: Client Apps'
      description: Update Client App
      operationId: updateClientApp
      summary: Update Client App
  '/api/2/api_authorizations/{api_auth_id}/scopes':
    get:
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: api_auth_id
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            items:
              description: base resource for configuring api authorization in OneLogin
              properties:
                configuration:
                  description: Authorization server configuration
                  properties:
                    access_token_expiration_minutes:
                      description: >-
                        The number of minutes until access token expires. There
                        is no maximum expiry limit.
                      example: 20
                      type: integer
                    audiences:
                      description: >-
                        List of API endpoints that will be returned in Access
                        Tokens.
                      items:
                        type: string
                      type: array
                    refresh_token_expiration_minutes:
                      description: >-
                        The number of minutes until refresh token expires. There
                        is no maximum expiry limit.
                      example: 30
                      type: integer
                    resource_identifier:
                      description: >-
                        Unique identifier for the API that the Authorization
                        Server will issue Access Tokens for.
                      example: 'https://example.com/contacts'
                      type: string
                  required:
                    - resource_identifier
                    - audiences
                  type: object
                description:
                  description: Description of what the API does.
                  example: API manages contacts
                  type: string
                id:
                  description: Auth server unique ID in Onelogin
                  example: 1022697
                  type: integer
                name:
                  description: Name of the API.
                  example: Contacts API
                  type: string
              required:
                - name
                - description
                - configuration
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - 'API Auth: Scopes'
      description: List Authorization Scopes
      operationId: getScopes
      summary: Get Api Auth Server Scopes
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: api_auth_id
          required: true
          type: string
        - in: body
          name: body
          schema:
            properties:
              description:
                description: A description of what access the scope enables
                example: A custom scope
                type: string
              value:
                description: A value representing the api scope that with be authorized
                example: 'custom:scope'
                type: string
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              id:
                description: Unique ID for the Scope
                example: 323005
                type: integer
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              message: invalid value in \"auth_method\"
              name: UnprocessableEntityError
              statusCode: 422
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - 'API Auth: Scopes'
      description: Create API Auth Server Scope
      operationId: createScope
      summary: Create Api Auth Server Scope
  '/api/2/api_authorizations/{api_auth_id}/scopes/{scope_id}':
    delete:
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: api_auth_id
          required: true
          type: string
        - in: path
          name: scope_id
          required: true
          type: integer
      responses:
        '204':
          description: Success. The scope is deleted. No content is returned.
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - 'API Auth: Scopes'
      description: Delete Scope
      operationId: deleteScope
      summary: Delete Api Auth Server Scope
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: api_auth_id
          required: true
          type: string
        - in: path
          name: scope_id
          required: true
          type: integer
        - in: body
          name: body
          schema:
            properties:
              description:
                description: A description of what access the scope enables
                example: A custom scope
                type: string
              value:
                description: A value representing the api scope that with be authorized
                example: 'custom:scope'
                type: string
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              id:
                description: Unique ID for the Scope
                example: 323005
                type: integer
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              message: invalid value in \"auth_method\"
              name: UnprocessableEntityError
              statusCode: 422
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - 'API Auth: Scopes'
      description: Update Scope
      operationId: updateScope
      summary: Update Api Auth Server Scope
  /api/2/apps:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              allow_assumed_signin:
                description: >-
                  Indicates whether or not administrators can access the app as
                  a user that they have assumed control over.
                type: boolean
              auth_method:
                description: An ID indicating the type of app.
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                  - 4
                  - 6
                  - 7
                  - 8
                example: 2
                type: integer
              brand_id:
                description: >-
                  The custom login page branding to use for this app. Applies to
                  app initiated logins via OIDC or SAML.
                type: integer
              connector_id:
                description: ID of the apps underlying connector.
                example: 50534
                type: integer
              created_at:
                description: The date the app was created.
                example: '2020-01-14T21:21:06.000Z'
                type: string
              description:
                description: Freeform description of the app.
                example: Whatever you  like
                type: string
              icon_url:
                description: A link to the apps icon url.
                type: string
              id:
                description: Apps unique ID in OneLogin.
                example: 1061937
                type: integer
              name:
                description: App name.
                example: Amazon Web Services Multi-Role
                type: string
              notes:
                description: Freeform notes about the app.
                type: string
              policy_id:
                description: The security policy assigned to the app.
                type: integer
              provisioning:
                properties:
                  enabled:
                    description: Indicates if provisioning is enabled for this app.
                    type: boolean
                type: object
              role_ids:
                description: A list of OneLogin Role IDs of the user
                items:
                  type: integer
                minLength: 1
                type: array
              tab_id:
                description: ID of the OneLogin portal tab that the app is assigned to.
                type: integer
              updated_at:
                description: The date the app was last updated.
                example: '2020-01-14T21:21:06.000Z'
                type: string
              visible:
                description: Indicates if the app is visible in the OneLogin portal.
                type: boolean
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              message: invalid value in \"auth_method\"
              name: UnprocessableEntityError
              statusCode: 422
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
            - Read All
      tags:
        - Apps
      description: List Apps
      operationId: listApps
      summary: List Apps
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: body
          name: body
          schema: {}
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              allow_assumed_signin:
                description: >-
                  Indicates whether or not administrators can access the app as
                  a user that they have assumed control over.
                type: boolean
              auth_method:
                description: An ID indicating the type of app.
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                  - 4
                  - 6
                  - 7
                  - 8
                example: 2
                type: integer
              brand_id:
                description: >-
                  The custom login page branding to use for this app. Applies to
                  app initiated logins via OIDC or SAML.
                type: integer
              connector_id:
                description: ID of the apps underlying connector.
                example: 50534
                type: integer
              created_at:
                description: The date the app was created.
                example: '2020-01-14T21:21:06.000Z'
                type: string
              description:
                description: Freeform description of the app.
                example: Whatever you  like
                type: string
              icon_url:
                description: A link to the apps icon url.
                type: string
              id:
                description: Apps unique ID in OneLogin.
                example: 1061937
                type: integer
              name:
                description: App name.
                example: Amazon Web Services Multi-Role
                type: string
              notes:
                description: Freeform notes about the app.
                type: string
              policy_id:
                description: The security policy assigned to the app.
                type: integer
              provisioning:
                properties:
                  enabled:
                    description: Indicates if provisioning is enabled for this app.
                    type: boolean
                type: object
              role_ids:
                description: A list of OneLogin Role IDs of the user
                items:
                  type: integer
                minLength: 1
                type: array
              tab_id:
                description: ID of the OneLogin portal tab that the app is assigned to.
                type: integer
              updated_at:
                description: The date the app was last updated.
                example: '2020-01-14T21:21:06.000Z'
                type: string
              visible:
                description: Indicates if the app is visible in the OneLogin portal.
                type: boolean
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '422':
          description: Unprocessable
          examples:
            application/json:
              code: 422
              error: true
              message: 'Validation failed: Value has already been taken'
              type: UnprocessableEntityError
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Apps
      description: Create App
      operationId: createApp
      summary: Create App
  '/api/2/apps/{app_id}':
    delete:
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: app_id
          required: true
          type: integer
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
            - Read All
      tags:
        - Apps
      description: Delete App
      operationId: deleteApp
      summary: Delete App
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: app_id
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              allow_assumed_signin:
                description: >-
                  Indicates whether or not administrators can access the app as
                  a user that they have assumed control over.
                type: boolean
              auth_method:
                description: An ID indicating the type of app.
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                  - 4
                  - 6
                  - 7
                  - 8
                example: 2
                type: integer
              brand_id:
                description: >-
                  The custom login page branding to use for this app. Applies to
                  app initiated logins via OIDC or SAML.
                type: integer
              connector_id:
                description: ID of the apps underlying connector.
                example: 50534
                type: integer
              created_at:
                description: The date the app was created.
                example: '2020-01-14T21:21:06.000Z'
                type: string
              description:
                description: Freeform description of the app.
                example: Whatever you  like
                type: string
              icon_url:
                description: A link to the apps icon url.
                type: string
              id:
                description: Apps unique ID in OneLogin.
                example: 1061937
                type: integer
              name:
                description: App name.
                example: Amazon Web Services Multi-Role
                type: string
              notes:
                description: Freeform notes about the app.
                type: string
              policy_id:
                description: The security policy assigned to the app.
                type: integer
              provisioning:
                properties:
                  enabled:
                    description: Indicates if provisioning is enabled for this app.
                    type: boolean
                type: object
              role_ids:
                description: A list of OneLogin Role IDs of the user
                items:
                  type: integer
                minLength: 1
                type: array
              tab_id:
                description: ID of the OneLogin portal tab that the app is assigned to.
                type: integer
              updated_at:
                description: The date the app was last updated.
                example: '2020-01-14T21:21:06.000Z'
                type: string
              visible:
                description: Indicates if the app is visible in the OneLogin portal.
                type: boolean
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
            - Read All
      tags:
        - Apps
      description: Get App
      operationId: getApp
      summary: Get App
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: app_id
          required: true
          type: integer
        - in: body
          name: body
          schema:
            properties:
              allow_assumed_signin:
                description: >-
                  Indicates whether or not administrators can access the app as
                  a user that they have assumed control over.
                type: boolean
              auth_method:
                description: An ID indicating the type of app.
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                  - 4
                  - 6
                  - 7
                  - 8
                example: 2
                type: integer
              brand_id:
                description: >-
                  The custom login page branding to use for this app. Applies to
                  app initiated logins via OIDC or SAML.
                type: integer
              connector_id:
                description: ID of the apps underlying connector.
                example: 50534
                type: integer
              created_at:
                description: The date the app was created.
                example: '2020-01-14T21:21:06.000Z'
                type: string
              description:
                description: Freeform description of the app.
                example: Whatever you  like
                type: string
              icon_url:
                description: A link to the apps icon url.
                type: string
              id:
                description: Apps unique ID in OneLogin.
                example: 1061937
                type: integer
              name:
                description: App name.
                example: Amazon Web Services Multi-Role
                type: string
              notes:
                description: Freeform notes about the app.
                type: string
              policy_id:
                description: The security policy assigned to the app.
                type: integer
              provisioning:
                properties:
                  enabled:
                    description: Indicates if provisioning is enabled for this app.
                    type: boolean
                type: object
              role_ids:
                description: A list of OneLogin Role IDs of the user
                items:
                  type: integer
                minLength: 1
                type: array
              tab_id:
                description: ID of the OneLogin portal tab that the app is assigned to.
                type: integer
              updated_at:
                description: The date the app was last updated.
                example: '2020-01-14T21:21:06.000Z'
                type: string
              visible:
                description: Indicates if the app is visible in the OneLogin portal.
                type: boolean
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              allow_assumed_signin:
                description: >-
                  Indicates whether or not administrators can access the app as
                  a user that they have assumed control over.
                type: boolean
              auth_method:
                description: An ID indicating the type of app.
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                  - 4
                  - 6
                  - 7
                  - 8
                example: 2
                type: integer
              brand_id:
                description: >-
                  The custom login page branding to use for this app. Applies to
                  app initiated logins via OIDC or SAML.
                type: integer
              connector_id:
                description: ID of the apps underlying connector.
                example: 50534
                type: integer
              created_at:
                description: The date the app was created.
                example: '2020-01-14T21:21:06.000Z'
                type: string
              description:
                description: Freeform description of the app.
                example: Whatever you  like
                type: string
              icon_url:
                description: A link to the apps icon url.
                type: string
              id:
                description: Apps unique ID in OneLogin.
                example: 1061937
                type: integer
              name:
                description: App name.
                example: Amazon Web Services Multi-Role
                type: string
              notes:
                description: Freeform notes about the app.
                type: string
              policy_id:
                description: The security policy assigned to the app.
                type: integer
              provisioning:
                properties:
                  enabled:
                    description: Indicates if provisioning is enabled for this app.
                    type: boolean
                type: object
              role_ids:
                description: A list of OneLogin Role IDs of the user
                items:
                  type: integer
                minLength: 1
                type: array
              tab_id:
                description: ID of the OneLogin portal tab that the app is assigned to.
                type: integer
              updated_at:
                description: The date the app was last updated.
                example: '2020-01-14T21:21:06.000Z'
                type: string
              visible:
                description: Indicates if the app is visible in the OneLogin portal.
                type: boolean
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Apps
      description: Update App
      operationId: updateApp
      summary: Update App
  '/api/2/apps/{app_id}/parameters/{parameter_id}':
    delete:
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: app_id
          required: true
          type: integer
        - in: path
          name: parameter_id
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '403':
          description: Forbidden
          examples:
            application/json:
              message: Not allowed to destroy specified resource
              name: ForbiddenError
              statusCode: 403
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
            - Read All
      tags:
        - Apps
      description: Delete Parameter from App
      operationId: deleteAppParameter
      summary: Delete Parameter from App
  '/api/2/apps/{app_id}/rules':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: app_id
          required: true
          type: integer
        - description: >-
            Filters Rules based on their Conditions. Values formatted as :,
            where name is the Condition to look for, and value is the value to
            find. Multiple filters can be declared by using a comma delimited
            list. Wildcards are supported in both the name and value fields.

            For example:

            Single filter. has_condition=has_role:123456

            Multiple filters. has_condition=has_role:123456,status:1

            Wildcard for conditions. has_condition=*:123456

            Wildcard for condition values. has_condition=has_role:*
          in: query
          name: has_condition
          required: false
          type: string
          x-example: 'has_condition=has_role:123456'
        - description: >-
            Filters Rules based on their Conditions. Values formatted as :,
            where name is the Condition to look for, and value is the value to
            find. Multiple filters can be declared by using a comma delimited
            list. Wildcards are supported in both the name and value fields.

            For example:

            Single filter. has_condition=has_role:123456

            Multiple filters. has_condition=has_role:123456,status:1

            Wildcard for conditions. has_condition=*:123456

            Wildcard for condition values. has_condition=has_role:*
          enum:
            - builtin
            - custom
            - none
          in: query
          name: has_condition_type
          required: false
          type: string
        - description: >-
            Filters Rules based on their Actions. Values formatted as :, where
            name is the Action to look for, and value is the value to find.
            Multiple filters can be declared by using a comma delimited list.
            Wildcards are supported in both the name and value fields.

            For example:

            Single filter. has_action=set_licenses:123456

            Multiple filters. has_action=set_groups:123456,set_usertype:*

            Wildcard for actions. has_action=*:123456

            Wildcard for action values. has_action=set_userprincipalname:*
          in: query
          name: has_action
          required: false
          type: string
          x-example: 'has_action=set_groups:123456,set_usertype:*'
        - description: >-
            Filters Rules based on their action types.

            Allowed values are:

            builtin - actions that involve standard attributes custom - actions
            that involve custom attributes none - no actions are defined For
            example:

            Find Rules with no actions has_action_type=none
          enum:
            - builtin
            - custom
            - none
          in: query
          name: has_action_type
          required: false
          type: string
        - default: true
          description: >-
            Defaults to true. When set to `false` will return all disabled
            mappings.
          in: query
          name: enabled
          type: boolean
      responses:
        '200':
          description: Successful response
          schema:
            items:
              properties:
                actions:
                  items:
                    properties:
                      action:
                        description: The action to apply
                        type: string
                      value:
                        description: >-
                          Only applicable to provisioned and set_* actions.
                          Items in the array will be a plain text string or
                          valid value for the selected action.
                        items:
                          example: '2'
                          type: string
                        type: array
                    type: object
                  type: array
                conditions:
                  description: >-
                    An array of conditions that the user must meet in order for
                    the rule to be applied.
                  items:
                    description: Conditions in which mappings are applied
                    properties:
                      operator:
                        description: A valid operator for the selected condition source
                        example: '>'
                        type: string
                      source:
                        description: source field to check.
                        example: last_login
                        type: string
                      value:
                        description: >-
                          A plain text string or valid value for the selected 
                          condition source
                        example: '90'
                        type: string
                    type: object
                  type: array
                enabled:
                  description: Indicates if the rule is enabled or not.
                  type: boolean
                id:
                  description: App Rule ID
                  example: 196670
                  type: integer
                match:
                  description: Indicates how conditions should be matched.
                  enum:
                    - all
                    - any
                  type: string
                name:
                  description: Rule Name
                  example: My first app rule
                  type: string
                position:
                  description: >-
                    Indicates the order of the rule. When `null` this will
                    default to last position.
                  example: 1
                  type: integer
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - App Rules
      description: List App Rules
      operationId: listAppRules
      summary: List Rules
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: app_id
          required: true
          type: integer
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: body
          name: body
          required: true
          schema:
            properties:
              actions:
                items:
                  properties:
                    action:
                      description: The action to apply
                      type: string
                    value:
                      description: >-
                        Only applicable to provisioned and set_* actions. Items
                        in the array will be a plain text string or valid value
                        for the selected action.
                      items:
                        example: '2'
                        type: string
                      type: array
                  type: object
                type: array
              conditions:
                description: >-
                  An array of conditions that the user must meet in order for
                  the rule to be applied.
                items:
                  description: Conditions in which mappings are applied
                  properties:
                    operator:
                      description: A valid operator for the selected condition source
                      example: '>'
                      type: string
                    source:
                      description: source field to check.
                      example: last_login
                      type: string
                    value:
                      description: >-
                        A plain text string or valid value for the selected 
                        condition source
                      example: '90'
                      type: string
                  type: object
                type: array
              enabled:
                description: Indicates if the rule is enabled or not.
                type: boolean
              id:
                description: App Rule ID
                example: 196670
                type: integer
              match:
                description: Indicates how conditions should be matched.
                enum:
                  - all
                  - any
                type: string
              name:
                description: Rule Name
                example: My first app rule
                type: string
              position:
                description: >-
                  Indicates the order of the rule. When `null` this will default
                  to last position.
                example: 1
                type: integer
            type: object
      responses:
        '201':
          description: CREATED
          schema:
            type: integer
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              message: invalid value in \"auth_method\"
              name: UnprocessableEntityError
              statusCode: 422
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - App Rules
      description: Create App Rule
      operationId: createAppRule
  '/api/2/apps/{app_id}/rules/actions':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: app_id
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            items:
              properties:
                name:
                  description: Name of the Action
                  example: Set Role
                  type: string
                value:
                  description: >-
                    The unique identifier of the action. This should be used
                    when defining actions for a User Mapping.
                  example: add_role
                  type: string
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - App Rules
      description: List Actions
      operationId: listActions
      summary: List Actions
  '/api/2/apps/{app_id}/rules/actions/{rule_action_value}/values':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: app_id
          required: true
          type: integer
        - in: path
          name: rule_action_value
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            items:
              properties:
                name:
                  description: Name of the Action
                  example: Set Role
                  type: string
                value:
                  description: >-
                    The unique identifier of the action. This should be used
                    when defining actions for a User Mapping.
                  example: add_role
                  type: string
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - App Rules
      description: Sort App rules
      operationId: listActionValies
      summary: List Actions Values
  '/api/2/apps/{app_id}/rules/conditions':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: app_id
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            items:
              properties:
                name:
                  description: Name of the rule condition
                  example: MemberOf
                  type: string
                value:
                  description: >-
                    The unique identifier of the condition. This should be used
                    when defining conditions for a rule.
                  example: member_of
                  type: string
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - App Rules
      description: List App Conditions
      operationId: listConditions
      summary: List Conditions
  '/api/2/apps/{app_id}/rules/conditions/{rule_condition_value}/operators':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: app_id
          required: true
          type: integer
        - in: path
          name: rule_condition_value
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            items:
              properties:
                name:
                  description: Name of the operator
                  example: Administrators
                  type: string
                value:
                  description: >-
                    The condition operator value to use when creating or
                    updating rules.
                  example: '272445'
                  type: string
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - App Rules
      description: List Condition Operators
      operationId: listConditionOperators
      summary: List Conditions Operators
  '/api/2/apps/{app_id}/rules/conditions/{rule_condition_value}/values':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: app_id
          required: true
          type: integer
        - in: path
          name: rule_condition_value
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            items:
              properties:
                name:
                  description: Name of the rule condition
                  example: MemberOf
                  type: string
                value:
                  description: >-
                    The unique identifier of the condition. This should be used
                    when defining conditions for a rule.
                  example: member_of
                  type: string
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - App Rules
      description: List Condition Values
      operationId: listConditionValues
      summary: List Conditions Values
  '/api/2/apps/{app_id}/rules/sort':
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: app_id
          required: true
          type: integer
        - in: body
          name: body
          schema:
            example:
              - 196671
              - 196670
              - 196672
              - 196676
              - 197758
            items:
              type: integer
            type: array
      responses:
        '200':
          description: Successful response
          schema:
            example:
              - 196671
              - 196670
              - 196672
              - 196676
              - 197758
            items:
              type: integer
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              message: invalid value in \"auth_method\"
              name: UnprocessableEntityError
              statusCode: 422
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - App Rules
      description: Sort App rules
      operationId: sortAppRules
      summary: Bulk Sort
  '/api/2/apps/{app_id}/rules/{rule_id}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: app_id
          required: true
          type: integer
        - in: path
          name: rule_id
          required: true
          type: string
      responses:
        '204':
          description: Success. The rule is deleted. No content is returned.
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - App Rules
      description: Delete App Rule
      operationId: deleteRule
      summary: Delete Rule
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: app_id
          required: true
          type: integer
        - in: path
          name: rule_id
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              actions:
                items:
                  properties:
                    action:
                      description: The action to apply
                      type: string
                    value:
                      description: >-
                        Only applicable to provisioned and set_* actions. Items
                        in the array will be a plain text string or valid value
                        for the selected action.
                      items:
                        example: '2'
                        type: string
                      type: array
                  type: object
                type: array
              conditions:
                description: >-
                  An array of conditions that the user must meet in order for
                  the rule to be applied.
                items:
                  description: Conditions in which mappings are applied
                  properties:
                    operator:
                      description: A valid operator for the selected condition source
                      example: '>'
                      type: string
                    source:
                      description: source field to check.
                      example: last_login
                      type: string
                    value:
                      description: >-
                        A plain text string or valid value for the selected 
                        condition source
                      example: '90'
                      type: string
                  type: object
                type: array
              enabled:
                description: Indicates if the rule is enabled or not.
                type: boolean
              id:
                description: App Rule ID
                example: 196670
                type: integer
              match:
                description: Indicates how conditions should be matched.
                enum:
                  - all
                  - any
                type: string
              name:
                description: Rule Name
                example: My first app rule
                type: string
              position:
                description: >-
                  Indicates the order of the rule. When `null` this will default
                  to last position.
                example: 1
                type: integer
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - App Rules
      description: Get App Rule
      operationId: getAppRule
      summary: Get Rule
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: path
          name: app_id
          required: true
          type: integer
        - in: path
          name: rule_id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              actions:
                items:
                  properties:
                    action:
                      description: The action to apply
                      type: string
                    value:
                      description: >-
                        Only applicable to provisioned and set_* actions. Items
                        in the array will be a plain text string or valid value
                        for the selected action.
                      items:
                        example: '2'
                        type: string
                      type: array
                  type: object
                type: array
              conditions:
                description: >-
                  An array of conditions that the user must meet in order for
                  the rule to be applied.
                items:
                  description: Conditions in which mappings are applied
                  properties:
                    operator:
                      description: A valid operator for the selected condition source
                      example: '>'
                      type: string
                    source:
                      description: source field to check.
                      example: last_login
                      type: string
                    value:
                      description: >-
                        A plain text string or valid value for the selected 
                        condition source
                      example: '90'
                      type: string
                  type: object
                type: array
              enabled:
                description: Indicates if the rule is enabled or not.
                type: boolean
              id:
                description: App Rule ID
                example: 196670
                type: integer
              match:
                description: Indicates how conditions should be matched.
                enum:
                  - all
                  - any
                type: string
              name:
                description: Rule Name
                example: My first app rule
                type: string
              position:
                description: >-
                  Indicates the order of the rule. When `null` this will default
                  to last position.
                example: 1
                type: integer
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            type: integer
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              message: invalid value in \"auth_method\"
              name: UnprocessableEntityError
              statusCode: 422
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - App Rules
      description: Update App Rule.
      operationId: updateAppRule
      summary: Update Rule
  '/api/2/apps/{app_id}/users':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: app_id
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            items:
              properties:
                activated_at:
                  type: string
                comment:
                  description: Free text related to the user.
                  type: string
                company:
                  description: The user's company.
                  type: string
                created_at:
                  type: string
                department:
                  description: The user's department.
                  type: string
                directory_id:
                  description: The ID of the OneLogin Directory of the user.
                  type: integer
                distinguished_name:
                  description: The distinguished name of the user.
                  type: string
                email:
                  description: A valid email for the user.
                  type: string
                external_id:
                  description: The ID of the user in an external directory.
                  type: string
                firstname:
                  description: The user's first name.
                  type: string
                group_id:
                  description: >-
                    The ID of the Group in OneLogin that the user is assigned
                    to.
                  type: integer
                id:
                  type: integer
                invalid_login_attempts:
                  type: integer
                invitation_sent_at:
                  type: string
                last_login:
                  type: string
                lastname:
                  description: The user's last name.
                  type: string
                locked_until:
                  type: string
                manager_ad_id:
                  description: The ID of the user's manager in Active Directory.
                  type: string
                manager_user_id:
                  description: The OneLogin User ID for the user's manager.
                  type: string
                member_of:
                  description: The user's directory membership.
                  type: string
                password:
                  description: The password to set for a user.
                  type: string
                password_algorithm:
                  description: >-
                    Use this when importing a password that's already hashed.
                    Prepend the salt value to the cleartext password value
                    before SHA-256-encoding it
                  type: string
                password_changed_at:
                  type: string
                password_confirmation:
                  description: Required if the password is being set.
                  type: string
                phone:
                  description: The E.164 format phone number for a user.
                  type: string
                preferred_locale_code:
                  type: string
                role_ids:
                  description: A list of OneLogin Role IDs of the user
                  items:
                    type: integer
                  minLength: 1
                  type: array
                salt:
                  description: The salt value used with the password_algorithm.
                  type: string
                samaccount_name:
                  description: The user's Active Directory username.
                  type: string
                state:
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                  type: integer
                status:
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 7
                    - 8
                  type: integer
                title:
                  description: The user's job title.
                  type: string
                trusted_idp_id:
                  description: The ID of the OneLogin Trusted IDP of the user.
                  type: integer
                updated_at:
                  type: string
                username:
                  description: A username for the user.
                  type: string
                userprincipalname:
                  description: The principle name of the user.
                  type: string
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
            - Read All
      tags:
        - Apps
      description: Get App Users
      operationId: getAppUsers
      summary: Get App Users
  /api/2/branding/brands:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successful response
          schema:
            items:
              properties:
                enabled:
                  description: Indicates if the brand is enabled or not.
                  example: true
                  type: boolean
                id:
                  description: Brand’s unique ID in OneLogin.
                  example: 912
                  type: integer
                name:
                  description: Brand name for humans. This isn’t related to subdomains.
                  example: ACME
                  type: string
              type: object
            type: array
      security:
        - OAuth2:
            - Manage All
      tags:
        - Branding Service
      description: List Account Brands
      operationId: listBrands
      summary: List Account Brands
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            properties:
              background:
                description: 'Base64 encoded image data (JPG/PNG, <5MB)'
                example: /9j/4AAQSkZJRgAB...J3a+IvMu7D8T/9k=
                type: string
              custom_accent_color:
                description: Secondary brand color
                example: '#b60012'
                type: string
              custom_color:
                description: Primary brand color
                example: '#1298b4'
                type: string
              custom_label_text_for_login_screen:
                description: >-
                  Custom label for the Username/Email field on the login screen.
                  See example here.
                example: ACME Username or Email
                type: string
              custom_masking_color:
                description: >-
                  Color for the masking layer above the background image of the
                  branded login screen.
                example: '#beefed'
                type: string
              custom_masking_opacity:
                description: Opacity for the custom_masking_color.
                example: 40
                type: integer
              custom_support_enabled:
                description: >-
                  Indicates if the custom support is enabled. If enabled, the
                  login page includes the ability to submit a support request.
                example: false
                type: boolean
              enable_custom_label_for_login_screen:
                description: >-
                  Indicates if the custom Username/Email field label is enabled
                  or not
                example: true
                type: boolean
              enabled:
                default: false
                description: Indicates if the brand is enabled or not
                example: true
                type: boolean
              hide_onelogin_footer:
                description: >-
                  Indicates if the OneLogin footer will appear at the bottom of
                  the login page.
                example: true
                type: boolean
              login_instruction:
                description: 'Text for the login instruction screen, styled in Markdown.'
                example: >-
                  To login, enter your ACME Username or Email. Reach out to
                  help.desk@acme.org if you have trouble logging in.
                type: string
              login_instruction_title:
                description: Link text to show login instruction screen.
                example: ACME Login Instructions
                type: string
              logo:
                description: 'Base64 encoded image data (PNG, <1MB)'
                example: iVBORw0KGgoAAAAN...AABJRU5ErkJggg==
                type: string
              mfa_enrollment_message:
                description: >-
                  Text that replaces the default text displayed on the initial
                  screen of the MFA Registration.
                example: >-
                  You must register with the OneLogin Protect app in order to
                  login
                type: string
              name:
                description: Brand’s name for humans. This isn’t related to subdomains.
                example: Acme Branding
                type: string
            required:
              - name
            type: object
      responses:
        '201':
          description: Created
          schema:
            example:
              background:
                content_type: image/jpeg
                file_size: 30338
                updated_at: '2020-09-03T20:31:54.146Z'
                urls:
                  branding: >-
                    https://cdn.onelogin.com/images/account_branding/account_background/branding/8547d161732776facb3d9127146c06a09aa63362.jpg?1599165114
                  login: >-
                    https://cdn.onelogin.com/images/account_branding/account_background/login/a2011597bad264455796281b94471284c6919857.jpg?1599165114
                  original: >-
                    https://cdn.onelogin.com/images/account_branding/account_background/original/9ada91a5d34b497f6f0b93934165f0c713ed3c2d.?1599165114
              custom_accent_color: '#b60012'
              custom_color: '#1298b4'
              custom_label_text_for_login_screen: ACME Username or Email
              custom_masking_color: '#beefed'
              custom_masking_opacity: 40
              custom_support_enabled: false
              enable_custom_label_for_login_screen: true
              enabled: true
              hide_onelogin_footer: false
              id: 9
              login_instruction: >-
                To login, enter your ACME Username or Email. Reach out to
                help.desk@acme.org if you have trouble logging in.
              login_instruction_title: ACME Login Instructions
              logo:
                content_type: image/png
                file_size: 4408
                updated_at: '2020-09-03T20:31:54.373Z'
                urls:
                  login: >-
                    https://cdn.onelogin.com/images/account_branding/account_logo/login/103d08ec5efb4ab204421f3dd15eddc973c8d0c5.png?1599165114
                  navigation: >-
                    https://cdn.onelogin.com/images/account_branding/account_logo/navigation/08fef613402a898832d215a3359b56e6d69ac232.png?1599165114
                  original: >-
                    https://cdn.onelogin.com/images/account_branding/account_logo/original/25506f4f5b795b39f8ab6ea8a6c85f78094941bf.?1599165114
              mfa_enrollment_message: >-
                You must register with the OneLogin Protect app in order to
                login
            properties:
              background:
                properties:
                  content_type:
                    type: string
                  file_size:
                    type: integer
                  updated_at:
                    type: string
                  urls:
                    properties:
                      branding:
                        type: string
                      login:
                        type: string
                      original:
                        type: string
                    required:
                      - original
                      - login
                      - branding
                    type: object
                required:
                  - urls
                  - file_size
                  - updated_at
                  - content_type
                type: object
              custom_accent_color:
                description: Secondary brand color
                example: '#b60012'
                type: string
              custom_color:
                description: Primary brand color
                example: '#1298b4'
                type: string
              custom_label_text_for_login_screen:
                description: >-
                  Custom label for the Username/Email field on the login screen.
                  See example here.
                example: ACME Username or Email
                type: string
              custom_masking_color:
                description: >-
                  Color for the masking layer above the background image of the
                  branded login screen.
                example: '#beefed'
                type: string
              custom_masking_opacity:
                description: Opacity for the custom_masking_color.
                example: 40
                type: integer
              custom_support_enabled:
                description: >-
                  Indicates if the custom support is enabled. If enabled, the
                  login page includes the ability to submit a support request.
                example: false
                type: boolean
              enable_custom_label_for_login_screen:
                description: >-
                  Indicates if the custom Username/Email field label is enabled
                  or not
                example: true
                type: boolean
              enabled:
                default: false
                description: Indicates if the brand is enabled or not
                example: true
                type: boolean
              hide_onelogin_footer:
                description: >-
                  Indicates if the OneLogin footer will appear at the bottom of
                  the login page.
                example: true
                type: boolean
              id:
                type: integer
              login_instruction:
                description: 'Text for the login instruction screen, styled in Markdown.'
                example: >-
                  To login, enter your ACME Username or Email. Reach out to
                  help.desk@acme.org if you have trouble logging in.
                type: string
              login_instruction_title:
                description: Link text to show login instruction screen.
                example: ACME Login Instructions
                type: string
              logo:
                properties:
                  content_type:
                    type: string
                  file_size:
                    type: integer
                  updated_at:
                    type: string
                  urls:
                    properties:
                      login:
                        type: string
                      navigation:
                        type: string
                      original:
                        type: string
                    required:
                      - original
                      - login
                      - navigation
                    type: object
                required:
                  - urls
                  - file_size
                  - updated_at
                  - content_type
                type: object
              mfa_enrollment_message:
                description: >-
                  Text that replaces the default text displayed on the initial
                  screen of the MFA Registration.
                example: >-
                  You must register with the OneLogin Protect app in order to
                  login
                type: string
            required:
              - id
              - enabled
              - custom_support_enabled
              - custom_color
              - custom_accent_color
              - custom_masking_color
              - custom_masking_opacity
              - mfa_enrollment_message
              - enable_custom_label_for_login_screen
              - custom_label_text_for_login_screen
              - login_instruction
              - login_instruction_title
              - hide_onelogin_footer
              - background
              - logo
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              message: invalid value in \"auth_method\"
              name: UnprocessableEntityError
              statusCode: 422
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Branding Service
      description: Create a new Account Brand
      operationId: createBrand
      summary: Create Brand
  '/api/2/branding/brands/master/templates/{template_type}':
    get:
      produces:
        - application/json
      parameters:
        - description: The message template type to return.
          in: path
          name: template_type
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              brand_id:
                description: brand id number
                example: 5
                type: integer
              locale:
                description: >-
                  The 2 character language locale for the template. e.g. en =
                  English, es = Spanish
                example: en
                pattern: '^[a-z]{2}$'
                type: string
              template: {}
              type:
                description: >-
                  Template type that describes the source (sms, voice, email)
                  and purpose (registration, invite, etc)
                enum:
                  - email_forgot_password
                  - email_code_registration
                  - email_code_login_verification
                  - email_code_app_verification
                  - email_code_pw_reset_verification
                  - email_magiclink_registration
                  - email_magiclink_login_verification
                  - email_magiclink_app_verification
                  - email_magiclink_pw_reset_verification
                  - sms_registration
                  - sms_login_verification
                  - sms_app_verification
                  - sms_pw_reset_verification
                type: string
              updated_at:
                description: Last time template was updated
                example: '2021-11-24T21:25:29.480Z'
                type: string
            required:
              - type
              - locale
              - template
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - 'Branding Service: Templates'
      description: Get Master Template by Type
      operationId: getMasterByType
      summary: Get Master Template by Type
  '/api/2/branding/brands/{brand_id}':
    delete:
      produces:
        - application/json
      parameters:
        - description: Unique identifier for the branding object.
          in: path
          name: brand_id
          required: true
          type: integer
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Branding Service
      description: Delete Brand
      operationId: deleteBrand
      summary: Delete Brand
    get:
      produces:
        - application/json
      parameters:
        - description: Unique identifier for the branding object.
          in: path
          name: brand_id
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            example:
              background:
                content_type: image/jpeg
                file_size: 30338
                updated_at: '2020-09-03T20:31:54.146Z'
                urls:
                  branding: >-
                    https://cdn.onelogin.com/images/account_branding/account_background/branding/8547d161732776facb3d9127146c06a09aa63362.jpg?1599165114
                  login: >-
                    https://cdn.onelogin.com/images/account_branding/account_background/login/a2011597bad264455796281b94471284c6919857.jpg?1599165114
                  original: >-
                    https://cdn.onelogin.com/images/account_branding/account_background/original/9ada91a5d34b497f6f0b93934165f0c713ed3c2d.?1599165114
              custom_accent_color: '#b60012'
              custom_color: '#1298b4'
              custom_label_text_for_login_screen: ACME Username or Email
              custom_masking_color: '#beefed'
              custom_masking_opacity: 40
              custom_support_enabled: false
              enable_custom_label_for_login_screen: true
              enabled: true
              hide_onelogin_footer: false
              id: 9
              login_instruction: >-
                To login, enter your ACME Username or Email. Reach out to
                help.desk@acme.org if you have trouble logging in.
              login_instruction_title: ACME Login Instructions
              logo:
                content_type: image/png
                file_size: 4408
                updated_at: '2020-09-03T20:31:54.373Z'
                urls:
                  login: >-
                    https://cdn.onelogin.com/images/account_branding/account_logo/login/103d08ec5efb4ab204421f3dd15eddc973c8d0c5.png?1599165114
                  navigation: >-
                    https://cdn.onelogin.com/images/account_branding/account_logo/navigation/08fef613402a898832d215a3359b56e6d69ac232.png?1599165114
                  original: >-
                    https://cdn.onelogin.com/images/account_branding/account_logo/original/25506f4f5b795b39f8ab6ea8a6c85f78094941bf.?1599165114
              mfa_enrollment_message: >-
                You must register with the OneLogin Protect app in order to
                login
            properties:
              background:
                properties:
                  content_type:
                    type: string
                  file_size:
                    type: integer
                  updated_at:
                    type: string
                  urls:
                    properties:
                      branding:
                        type: string
                      login:
                        type: string
                      original:
                        type: string
                    required:
                      - original
                      - login
                      - branding
                    type: object
                required:
                  - urls
                  - file_size
                  - updated_at
                  - content_type
                type: object
              custom_accent_color:
                description: Secondary brand color
                example: '#b60012'
                type: string
              custom_color:
                description: Primary brand color
                example: '#1298b4'
                type: string
              custom_label_text_for_login_screen:
                description: >-
                  Custom label for the Username/Email field on the login screen.
                  See example here.
                example: ACME Username or Email
                type: string
              custom_masking_color:
                description: >-
                  Color for the masking layer above the background image of the
                  branded login screen.
                example: '#beefed'
                type: string
              custom_masking_opacity:
                description: Opacity for the custom_masking_color.
                example: 40
                type: integer
              custom_support_enabled:
                description: >-
                  Indicates if the custom support is enabled. If enabled, the
                  login page includes the ability to submit a support request.
                example: false
                type: boolean
              enable_custom_label_for_login_screen:
                description: >-
                  Indicates if the custom Username/Email field label is enabled
                  or not
                example: true
                type: boolean
              enabled:
                default: false
                description: Indicates if the brand is enabled or not
                example: true
                type: boolean
              hide_onelogin_footer:
                description: >-
                  Indicates if the OneLogin footer will appear at the bottom of
                  the login page.
                example: true
                type: boolean
              id:
                type: integer
              login_instruction:
                description: 'Text for the login instruction screen, styled in Markdown.'
                example: >-
                  To login, enter your ACME Username or Email. Reach out to
                  help.desk@acme.org if you have trouble logging in.
                type: string
              login_instruction_title:
                description: Link text to show login instruction screen.
                example: ACME Login Instructions
                type: string
              logo:
                properties:
                  content_type:
                    type: string
                  file_size:
                    type: integer
                  updated_at:
                    type: string
                  urls:
                    properties:
                      login:
                        type: string
                      navigation:
                        type: string
                      original:
                        type: string
                    required:
                      - original
                      - login
                      - navigation
                    type: object
                required:
                  - urls
                  - file_size
                  - updated_at
                  - content_type
                type: object
              mfa_enrollment_message:
                description: >-
                  Text that replaces the default text displayed on the initial
                  screen of the MFA Registration.
                example: >-
                  You must register with the OneLogin Protect app in order to
                  login
                type: string
            required:
              - id
              - enabled
              - custom_support_enabled
              - custom_color
              - custom_accent_color
              - custom_masking_color
              - custom_masking_opacity
              - mfa_enrollment_message
              - enable_custom_label_for_login_screen
              - custom_label_text_for_login_screen
              - login_instruction
              - login_instruction_title
              - hide_onelogin_footer
              - background
              - logo
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Branding Service
      description: Retrieve a single brand via ID
      operationId: getBrand
      summary: Get Brand
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Unique identifier for the branding object.
          in: path
          name: brand_id
          required: true
          type: integer
        - in: body
          name: body
          schema:
            properties:
              background:
                description: 'Base64 encoded image data (JPG/PNG, <5MB)'
                example: /9j/4AAQSkZJRgAB...J3a+IvMu7D8T/9k=
                type: string
              custom_accent_color:
                description: Secondary brand color
                example: '#b60012'
                type: string
              custom_color:
                description: Primary brand color
                example: '#1298b4'
                type: string
              custom_label_text_for_login_screen:
                description: >-
                  Custom label for the Username/Email field on the login screen.
                  See example here.
                example: ACME Username or Email
                type: string
              custom_masking_color:
                description: >-
                  Color for the masking layer above the background image of the
                  branded login screen.
                example: '#beefed'
                type: string
              custom_masking_opacity:
                description: Opacity for the custom_masking_color.
                example: 40
                type: integer
              custom_support_enabled:
                description: >-
                  Indicates if the custom support is enabled. If enabled, the
                  login page includes the ability to submit a support request.
                example: false
                type: boolean
              enable_custom_label_for_login_screen:
                description: >-
                  Indicates if the custom Username/Email field label is enabled
                  or not
                example: true
                type: boolean
              enabled:
                default: false
                description: Indicates if the brand is enabled or not
                example: true
                type: boolean
              hide_onelogin_footer:
                description: >-
                  Indicates if the OneLogin footer will appear at the bottom of
                  the login page.
                example: true
                type: boolean
              login_instruction:
                description: 'Text for the login instruction screen, styled in Markdown.'
                example: >-
                  To login, enter your ACME Username or Email. Reach out to
                  help.desk@acme.org if you have trouble logging in.
                type: string
              login_instruction_title:
                description: Link text to show login instruction screen.
                example: ACME Login Instructions
                type: string
              logo:
                description: 'Base64 encoded image data (PNG, <1MB)'
                example: iVBORw0KGgoAAAAN...AABJRU5ErkJggg==
                type: string
              mfa_enrollment_message:
                description: >-
                  Text that replaces the default text displayed on the initial
                  screen of the MFA Registration.
                example: >-
                  You must register with the OneLogin Protect app in order to
                  login
                type: string
              name:
                description: Brand’s name for humans. This isn’t related to subdomains.
                example: Acme Branding
                type: string
            required:
              - name
            type: object
      responses:
        '201':
          description: Created
          schema:
            example:
              background:
                content_type: image/jpeg
                file_size: 30338
                updated_at: '2020-09-03T20:31:54.146Z'
                urls:
                  branding: >-
                    https://cdn.onelogin.com/images/account_branding/account_background/branding/8547d161732776facb3d9127146c06a09aa63362.jpg?1599165114
                  login: >-
                    https://cdn.onelogin.com/images/account_branding/account_background/login/a2011597bad264455796281b94471284c6919857.jpg?1599165114
                  original: >-
                    https://cdn.onelogin.com/images/account_branding/account_background/original/9ada91a5d34b497f6f0b93934165f0c713ed3c2d.?1599165114
              custom_accent_color: '#b60012'
              custom_color: '#1298b4'
              custom_label_text_for_login_screen: ACME Username or Email
              custom_masking_color: '#beefed'
              custom_masking_opacity: 40
              custom_support_enabled: false
              enable_custom_label_for_login_screen: true
              enabled: true
              hide_onelogin_footer: false
              id: 9
              login_instruction: >-
                To login, enter your ACME Username or Email. Reach out to
                help.desk@acme.org if you have trouble logging in.
              login_instruction_title: ACME Login Instructions
              logo:
                content_type: image/png
                file_size: 4408
                updated_at: '2020-09-03T20:31:54.373Z'
                urls:
                  login: >-
                    https://cdn.onelogin.com/images/account_branding/account_logo/login/103d08ec5efb4ab204421f3dd15eddc973c8d0c5.png?1599165114
                  navigation: >-
                    https://cdn.onelogin.com/images/account_branding/account_logo/navigation/08fef613402a898832d215a3359b56e6d69ac232.png?1599165114
                  original: >-
                    https://cdn.onelogin.com/images/account_branding/account_logo/original/25506f4f5b795b39f8ab6ea8a6c85f78094941bf.?1599165114
              mfa_enrollment_message: >-
                You must register with the OneLogin Protect app in order to
                login
            properties:
              background:
                properties:
                  content_type:
                    type: string
                  file_size:
                    type: integer
                  updated_at:
                    type: string
                  urls:
                    properties:
                      branding:
                        type: string
                      login:
                        type: string
                      original:
                        type: string
                    required:
                      - original
                      - login
                      - branding
                    type: object
                required:
                  - urls
                  - file_size
                  - updated_at
                  - content_type
                type: object
              custom_accent_color:
                description: Secondary brand color
                example: '#b60012'
                type: string
              custom_color:
                description: Primary brand color
                example: '#1298b4'
                type: string
              custom_label_text_for_login_screen:
                description: >-
                  Custom label for the Username/Email field on the login screen.
                  See example here.
                example: ACME Username or Email
                type: string
              custom_masking_color:
                description: >-
                  Color for the masking layer above the background image of the
                  branded login screen.
                example: '#beefed'
                type: string
              custom_masking_opacity:
                description: Opacity for the custom_masking_color.
                example: 40
                type: integer
              custom_support_enabled:
                description: >-
                  Indicates if the custom support is enabled. If enabled, the
                  login page includes the ability to submit a support request.
                example: false
                type: boolean
              enable_custom_label_for_login_screen:
                description: >-
                  Indicates if the custom Username/Email field label is enabled
                  or not
                example: true
                type: boolean
              enabled:
                default: false
                description: Indicates if the brand is enabled or not
                example: true
                type: boolean
              hide_onelogin_footer:
                description: >-
                  Indicates if the OneLogin footer will appear at the bottom of
                  the login page.
                example: true
                type: boolean
              id:
                type: integer
              login_instruction:
                description: 'Text for the login instruction screen, styled in Markdown.'
                example: >-
                  To login, enter your ACME Username or Email. Reach out to
                  help.desk@acme.org if you have trouble logging in.
                type: string
              login_instruction_title:
                description: Link text to show login instruction screen.
                example: ACME Login Instructions
                type: string
              logo:
                properties:
                  content_type:
                    type: string
                  file_size:
                    type: integer
                  updated_at:
                    type: string
                  urls:
                    properties:
                      login:
                        type: string
                      navigation:
                        type: string
                      original:
                        type: string
                    required:
                      - original
                      - login
                      - navigation
                    type: object
                required:
                  - urls
                  - file_size
                  - updated_at
                  - content_type
                type: object
              mfa_enrollment_message:
                description: >-
                  Text that replaces the default text displayed on the initial
                  screen of the MFA Registration.
                example: >-
                  You must register with the OneLogin Protect app in order to
                  login
                type: string
            required:
              - id
              - enabled
              - custom_support_enabled
              - custom_color
              - custom_accent_color
              - custom_masking_color
              - custom_masking_opacity
              - mfa_enrollment_message
              - enable_custom_label_for_login_screen
              - custom_label_text_for_login_screen
              - login_instruction
              - login_instruction_title
              - hide_onelogin_footer
              - background
              - logo
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              message: invalid value in \"auth_method\"
              name: UnprocessableEntityError
              statusCode: 422
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Branding Service
      description: Update Account Brand
      operationId: updateBrand
      summary: Update Brand
  '/api/2/branding/brands/{brand_id}/apps':
    get:
      produces:
        - application/json
      parameters:
        - description: Unique identifier for the branding object.
          in: path
          name: brand_id
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            items:
              properties:
                auth_method:
                  example: 2
                  type: integer
                auth_method_description:
                  example: SAML2.0
                  type: string
                connector_id:
                  example: 3001
                  type: integer
                created_at:
                  example: '2020-09-08T22:24:19.551Z'
                  type: string
                description:
                  example: Mom’s Friendly Robot Company
                  type: string
                id:
                  example: 1455
                  type: integer
                name:
                  example: Mom Corp
                  type: string
                updated_at:
                  example: '2020-09-11T19:35:08.288Z'
                  type: string
                visible:
                  example: true
                  type: boolean
              required:
                - id
                - updated_at
                - name
                - connector_id
                - auth_method_description
                - description
                - auth_method
                - created_at
                - visible
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Branding Service
      description: Get Apps Associated with Account Brand
      operationId: getBrandApps
      summary: Get Brand Apps
  '/api/2/branding/brands/{brand_id}/templates':
    get:
      produces:
        - application/json
      parameters:
        - description: Unique identifier for the branding object.
          in: path
          name: brand_id
          required: true
          type: integer
        - description: >-
            The 2 character language locale for the template. e.g. en = English,
            es = Spanish
          in: query
          name: locale
          pattern: '^[a-z]{2}$'
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            items:
              properties:
                enabled:
                  description: indicator if template is enabled
                  example: true
                  type: boolean
                id:
                  description: template ID
                  example: 912
                  type: integer
                name:
                  description: name of message template
                  example: ACME
                  type: string
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              message: invalid value in \"auth_method\"
              name: UnprocessableEntityError
              statusCode: 422
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - 'Branding Service: Templates'
      description: List Message Templates
      operationId: listMessageTemplates
      summary: List Message Templates
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Unique identifier for the branding object.
          in: path
          name: brand_id
          required: true
          type: integer
        - description: >-
            The 2 character language locale for the template. e.g. en = English,
            es = Spanish
          in: query
          name: locale
          pattern: '^[a-z]{2}$'
          required: true
          type: string
        - in: body
          name: body
          schema:
            properties:
              brand_id:
                description: brand id number
                example: 5
                type: integer
              locale:
                description: >-
                  The 2 character language locale for the template. e.g. en =
                  English, es = Spanish
                example: en
                pattern: '^[a-z]{2}$'
                type: string
              template: {}
              type:
                description: >-
                  Template type that describes the source (sms, voice, email)
                  and purpose (registration, invite, etc)
                enum:
                  - email_forgot_password
                  - email_code_registration
                  - email_code_login_verification
                  - email_code_app_verification
                  - email_code_pw_reset_verification
                  - email_magiclink_registration
                  - email_magiclink_login_verification
                  - email_magiclink_app_verification
                  - email_magiclink_pw_reset_verification
                  - sms_registration
                  - sms_login_verification
                  - sms_app_verification
                  - sms_pw_reset_verification
                type: string
              updated_at:
                description: Last time template was updated
                example: '2021-11-24T21:25:29.480Z'
                type: string
            required:
              - type
              - locale
              - template
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              brand_id:
                description: brand id number
                example: 5
                type: integer
              locale:
                description: >-
                  The 2 character language locale for the template. e.g. en =
                  English, es = Spanish
                example: en
                pattern: '^[a-z]{2}$'
                type: string
              template: {}
              type:
                description: >-
                  Template type that describes the source (sms, voice, email)
                  and purpose (registration, invite, etc)
                enum:
                  - email_forgot_password
                  - email_code_registration
                  - email_code_login_verification
                  - email_code_app_verification
                  - email_code_pw_reset_verification
                  - email_magiclink_registration
                  - email_magiclink_login_verification
                  - email_magiclink_app_verification
                  - email_magiclink_pw_reset_verification
                  - sms_registration
                  - sms_login_verification
                  - sms_app_verification
                  - sms_pw_reset_verification
                type: string
              updated_at:
                description: Last time template was updated
                example: '2021-11-24T21:25:29.480Z'
                type: string
            required:
              - type
              - locale
              - template
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              message: invalid value in \"auth_method\"
              name: UnprocessableEntityError
              statusCode: 422
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - 'Branding Service: Templates'
      description: Create Message Template
      operationId: createMessageTemplate
      summary: Create Message Template
  '/api/2/branding/brands/{brand_id}/templates/{template_id}':
    delete:
      produces:
        - application/json
      parameters:
        - description: Unique identifier for the branding object.
          in: path
          name: brand_id
          required: true
          type: integer
        - description: Unique identifier for the template to return.
          in: path
          name: template_id
          required: true
          type: integer
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - 'Branding Service: Templates'
      description: Delete Message Template
      operationId: deleteMessageTemplate
      summary: Delete Message Template
    get:
      produces:
        - application/json
      parameters:
        - description: Unique identifier for the branding object.
          in: path
          name: brand_id
          required: true
          type: integer
        - description: Unique identifier for the template to return.
          in: path
          name: template_id
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              brand_id:
                description: brand id number
                example: 5
                type: integer
              locale:
                description: >-
                  The 2 character language locale for the template. e.g. en =
                  English, es = Spanish
                example: en
                pattern: '^[a-z]{2}$'
                type: string
              template: {}
              type:
                description: >-
                  Template type that describes the source (sms, voice, email)
                  and purpose (registration, invite, etc)
                enum:
                  - email_forgot_password
                  - email_code_registration
                  - email_code_login_verification
                  - email_code_app_verification
                  - email_code_pw_reset_verification
                  - email_magiclink_registration
                  - email_magiclink_login_verification
                  - email_magiclink_app_verification
                  - email_magiclink_pw_reset_verification
                  - sms_registration
                  - sms_login_verification
                  - sms_app_verification
                  - sms_pw_reset_verification
                type: string
              updated_at:
                description: Last time template was updated
                example: '2021-11-24T21:25:29.480Z'
                type: string
            required:
              - type
              - locale
              - template
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - 'Branding Service: Templates'
      description: Get Message Template by ID
      operationId: getMessageTemplateById
      summary: Get Message Template
    put:
      produces:
        - application/json
      parameters:
        - description: Unique identifier for the branding object.
          in: path
          name: brand_id
          required: true
          type: integer
        - description: Unique identifier for the template to return.
          in: path
          name: template_id
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              brand_id:
                description: brand id number
                example: 5
                type: integer
              locale:
                description: >-
                  The 2 character language locale for the template. e.g. en =
                  English, es = Spanish
                example: en
                pattern: '^[a-z]{2}$'
                type: string
              template: {}
              type:
                description: >-
                  Template type that describes the source (sms, voice, email)
                  and purpose (registration, invite, etc)
                enum:
                  - email_forgot_password
                  - email_code_registration
                  - email_code_login_verification
                  - email_code_app_verification
                  - email_code_pw_reset_verification
                  - email_magiclink_registration
                  - email_magiclink_login_verification
                  - email_magiclink_app_verification
                  - email_magiclink_pw_reset_verification
                  - sms_registration
                  - sms_login_verification
                  - sms_app_verification
                  - sms_pw_reset_verification
                type: string
              updated_at:
                description: Last time template was updated
                example: '2021-11-24T21:25:29.480Z'
                type: string
            required:
              - type
              - locale
              - template
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              message: invalid value in \"auth_method\"
              name: UnprocessableEntityError
              statusCode: 422
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - 'Branding Service: Templates'
      description: Update Message Template by ID
      operationId: updateMessageTemplateById
      summary: Update Message Template
  '/api/2/branding/brands/{brand_id}/templates/{template_type}/{locale}':
    get:
      produces:
        - application/json
      parameters:
        - description: Unique identifier for the branding object.
          in: path
          name: brand_id
          required: true
          type: integer
        - description: The message template type to return.
          in: path
          name: template_type
          required: true
          type: string
        - description: >-
            The 2 character language locale for the template. e.g. en = English,
            es = Spanish
          in: path
          name: locale
          pattern: '^[a-z]{2}$'
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              brand_id:
                description: brand id number
                example: 5
                type: integer
              locale:
                description: >-
                  The 2 character language locale for the template. e.g. en =
                  English, es = Spanish
                example: en
                pattern: '^[a-z]{2}$'
                type: string
              template: {}
              type:
                description: >-
                  Template type that describes the source (sms, voice, email)
                  and purpose (registration, invite, etc)
                enum:
                  - email_forgot_password
                  - email_code_registration
                  - email_code_login_verification
                  - email_code_app_verification
                  - email_code_pw_reset_verification
                  - email_magiclink_registration
                  - email_magiclink_login_verification
                  - email_magiclink_app_verification
                  - email_magiclink_pw_reset_verification
                  - sms_registration
                  - sms_login_verification
                  - sms_app_verification
                  - sms_pw_reset_verification
                type: string
              updated_at:
                description: Last time template was updated
                example: '2021-11-24T21:25:29.480Z'
                type: string
            required:
              - type
              - locale
              - template
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - 'Branding Service: Templates'
      description: Get Template by Type and Locale
      operationId: getTemplateByLocale
      summary: Get Template by Type & Locale
    put:
      produces:
        - application/json
      parameters:
        - description: Unique identifier for the branding object.
          in: path
          name: brand_id
          required: true
          type: integer
        - description: The message template type to return.
          in: path
          name: template_type
          required: true
          type: string
        - description: >-
            The 2 character language locale for the template. e.g. en = English,
            es = Spanish
          in: path
          name: locale
          pattern: '^[a-z]{2}$'
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              brand_id:
                description: brand id number
                example: 5
                type: integer
              locale:
                description: >-
                  The 2 character language locale for the template. e.g. en =
                  English, es = Spanish
                example: en
                pattern: '^[a-z]{2}$'
                type: string
              template: {}
              type:
                description: >-
                  Template type that describes the source (sms, voice, email)
                  and purpose (registration, invite, etc)
                enum:
                  - email_forgot_password
                  - email_code_registration
                  - email_code_login_verification
                  - email_code_app_verification
                  - email_code_pw_reset_verification
                  - email_magiclink_registration
                  - email_magiclink_login_verification
                  - email_magiclink_app_verification
                  - email_magiclink_pw_reset_verification
                  - sms_registration
                  - sms_login_verification
                  - sms_app_verification
                  - sms_pw_reset_verification
                type: string
              updated_at:
                description: Last time template was updated
                example: '2021-11-24T21:25:29.480Z'
                type: string
            required:
              - type
              - locale
              - template
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - 'Branding Service: Templates'
      description: Update Template by Type and Locale
      operationId: updateTemplateByLocale
      summary: Update Template by Type & Locale
  /api/2/branding/email_settings:
    delete:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - 'Branding Service: SMTP'
      description: Reset Email Setting config
      operationId: deleteEmailSettings
      summary: Delete Custom Email Settings
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successful response
          schema: {}
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
            - Read All
      tags:
        - 'Branding Service: SMTP'
      description: Get Email Settings Config
      operationId: getEmailSettings
      summary: Get Email Settings
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            properties:
              address:
                description: Email Settings server address
                example: smtp.sendgrid.net
                type: string
              domain:
                description: Domain of the From address.
                example: example.com
                type: string
              from:
                description: The From email address in the message.
                example: email@example.com
                type: string
              password:
                description: >-
                  The password of the account to authenticate with the Email
                  Settings server.
                example: password
                format: password
                type: string
              port:
                default: 25
                description: Defaults to 25.
                example: 587
                type: integer
              use_tls:
                default: true
                description: Use TLS
                example: true
                type: boolean
              user_name:
                description: >-
                  The user name of the account to authenticate with the Email
                  Settings server.
                example: user-name
                type: string
            required:
              - address
              - from
              - domain
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              message: invalid value in \"auth_method\"
              name: UnprocessableEntityError
              statusCode: 422
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - 'Branding Service: SMTP'
      description: Update Email Settings Config
      operationId: updateEmailSettings
      summary: Update Email Settings
  /api/2/connectors:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              allows_new_parameters:
                description: >-
                  Indicates if apps created using this connector will be allowed
                  to create custom parameters.
                type: boolean
              auth_method:
                description: >-
                  An ID indicating the type of app. See above for possible
                  values.
                example: 2
                type: integer
              icon_url:
                description: A link to the icon's url.
                example: >-
                  https://cdn-shadow.onlgn.net/images/icons/square/amazonwebservices3multirole/old_original.png?1421095823
                type: string
              id:
                description: Connectors unique ID in OneLogin.
                example: 1061937
                type: integer
              name:
                description: Name of Connector
                example: Amazon Web Services Multi-Role
                type: string
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              message: invalid value in \"auth_method\"
              name: UnprocessableEntityError
              statusCode: 422
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Apps
      description: List Connectors
      operationId: listConnectors
      summary: List Connectors
  /api/2/mappings:
    get:
      produces:
        - application/json
      parameters:
        - default: true
          description: >-
            Defaults to true. When set to `false` will return all disabled
            mappings.
          in: query
          name: enabled
          type: boolean
        - description: >-
            Filters Rules based on their Conditions. Values formatted as :,
            where name is the Condition to look for, and value is the value to
            find. Multiple filters can be declared by using a comma delimited
            list. Wildcards are supported in both the name and value fields.

            For example:

            Single filter. has_condition=has_role:123456

            Multiple filters. has_condition=has_role:123456,status:1

            Wildcard for conditions. has_condition=*:123456

            Wildcard for condition values. has_condition=has_role:*
          in: query
          name: has_condition
          required: false
          type: string
          x-example: 'has_condition=has_role:123456'
        - description: >-
            Filters Rules based on their Conditions. Values formatted as :,
            where name is the Condition to look for, and value is the value to
            find. Multiple filters can be declared by using a comma delimited
            list. Wildcards are supported in both the name and value fields.

            For example:

            Single filter. has_condition=has_role:123456

            Multiple filters. has_condition=has_role:123456,status:1

            Wildcard for conditions. has_condition=*:123456

            Wildcard for condition values. has_condition=has_role:*
          enum:
            - builtin
            - custom
            - none
          in: query
          name: has_condition_type
          required: false
          type: string
        - description: >-
            Filters Rules based on their Actions. Values formatted as :, where
            name is the Action to look for, and value is the value to find.
            Multiple filters can be declared by using a comma delimited list.
            Wildcards are supported in both the name and value fields.

            For example:

            Single filter. has_action=set_licenses:123456

            Multiple filters. has_action=set_groups:123456,set_usertype:*

            Wildcard for actions. has_action=*:123456

            Wildcard for action values. has_action=set_userprincipalname:*
          in: query
          name: has_action
          type: string
          x-example: 'has_action=set_groups:123456,set_usertype:*'
        - description: >-
            Filters Rules based on their action types.

            Allowed values are:

            builtin - actions that involve standard attributes custom - actions
            that involve custom attributes none - no actions are defined For
            example:

            Find Rules with no actions has_action_type=none
          enum:
            - builtin
            - custom
            - none
          in: query
          name: has_action_type
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            items:
              properties:
                actions:
                  description: >-
                    An array of actions that will be applied to the users that
                    are matched by the conditions.
                  items:
                    properties:
                      action:
                        description: The action to apply
                        type: string
                      value:
                        description: >-
                          Only applicable to provisioned and set_* actions.
                          Items in the array will be a plain text string or
                          valid value for the selected action.
                        items:
                          example: '2'
                          type: string
                        type: array
                    type: object
                  type: array
                conditions:
                  description: >-
                    An array of conditions that the user must meet in order for
                    the mapping to be applied.
                  items:
                    description: Conditions in which mappings are applied
                    properties:
                      operator:
                        description: A valid operator for the selected condition source
                        example: '>'
                        type: string
                      source:
                        description: source field to check.
                        example: last_login
                        type: string
                      value:
                        description: >-
                          A plain text string or valid value for the selected 
                          condition source
                        example: '90'
                        type: string
                    type: object
                  type: array
                enabled:
                  description: Indicates if the mapping is enabled or not.
                  type: boolean
                id:
                  type: integer
                match:
                  description: Indicates how conditions should be matched.
                  enum:
                    - all
                    - any
                  type: string
                name:
                  description: The name of the mapping.
                  type: string
                position:
                  description: >-
                    Indicates the order of the mapping. When `null` this will
                    default to last position.
                  type: integer
              required:
                - name
                - enabled
                - match
                - position
                - conditions
                - actions
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - User Mappings
      description: List Mappings
      operationId: listMappings
      summary: List Mappings
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: body
          name: body
          schema:
            properties:
              actions:
                description: >-
                  An array of actions that will be applied to the users that are
                  matched by the conditions.
                items:
                  properties:
                    action:
                      description: The action to apply
                      type: string
                    value:
                      description: >-
                        Only applicable to provisioned and set_* actions. Items
                        in the array will be a plain text string or valid value
                        for the selected action.
                      items:
                        example: '2'
                        type: string
                      type: array
                  type: object
                type: array
              conditions:
                description: >-
                  An array of conditions that the user must meet in order for
                  the mapping to be applied.
                items:
                  description: Conditions in which mappings are applied
                  properties:
                    operator:
                      description: A valid operator for the selected condition source
                      example: '>'
                      type: string
                    source:
                      description: source field to check.
                      example: last_login
                      type: string
                    value:
                      description: >-
                        A plain text string or valid value for the selected 
                        condition source
                      example: '90'
                      type: string
                  type: object
                type: array
              enabled:
                description: Indicates if the mapping is enabled or not.
                type: boolean
              id:
                type: integer
              match:
                description: Indicates how conditions should be matched.
                enum:
                  - all
                  - any
                type: string
              name:
                description: The name of the mapping.
                type: string
              position:
                description: >-
                  Indicates the order of the mapping. When `null` this will
                  default to last position.
                type: integer
            required:
              - name
              - enabled
              - match
              - position
              - conditions
              - actions
            type: object
      responses:
        '201':
          description: Successful response
          schema:
            items:
              properties:
                actions:
                  description: >-
                    An array of actions that will be applied to the users that
                    are matched by the conditions.
                  items:
                    properties:
                      action:
                        description: The action to apply
                        type: string
                      value:
                        description: >-
                          Only applicable to provisioned and set_* actions.
                          Items in the array will be a plain text string or
                          valid value for the selected action.
                        items:
                          example: '2'
                          type: string
                        type: array
                    type: object
                  type: array
                conditions:
                  description: >-
                    An array of conditions that the user must meet in order for
                    the mapping to be applied.
                  items:
                    description: Conditions in which mappings are applied
                    properties:
                      operator:
                        description: A valid operator for the selected condition source
                        example: '>'
                        type: string
                      source:
                        description: source field to check.
                        example: last_login
                        type: string
                      value:
                        description: >-
                          A plain text string or valid value for the selected 
                          condition source
                        example: '90'
                        type: string
                    type: object
                  type: array
                enabled:
                  description: Indicates if the mapping is enabled or not.
                  type: boolean
                id:
                  type: integer
                match:
                  description: Indicates how conditions should be matched.
                  enum:
                    - all
                    - any
                  type: string
                name:
                  description: The name of the mapping.
                  type: string
                position:
                  description: >-
                    Indicates the order of the mapping. When `null` this will
                    default to last position.
                  type: integer
              required:
                - name
                - enabled
                - match
                - position
                - conditions
                - actions
              type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '422':
          description: Unprocessable
          examples:
            application/json:
              code: 422
              error: true
              message: 'Validation failed: Value has already been taken'
              type: UnprocessableEntityError
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - User Mappings
      description: Create User Mapping
      operationId: createMapping
      summary: Create Mapping
  /api/2/mappings/actions:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successful response
          schema:
            items:
              properties:
                name:
                  description: Name of the action
                  example: set Role
                  type: string
                value:
                  description: >-
                    The unique identifier of the action. This should be used
                    when defining actions for a User Mapping.
                  example: add_role
                  type: string
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - User Mappings
      description: List User Mappings' Actions
      operationId: listMappingsActions
      summary: List Actions
  '/api/2/mappings/actions/{mapping_action_value}/values':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: mapping_action_value
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            items:
              properties:
                name:
                  description: Name or description of operator
                  example: default
                  type: string
                value:
                  description: >-
                    The action operator value to use when creating or updating
                    User Mappings.
                  example: 199848
                  type: integer
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - User Mappings
      description: List User Mappings' Actions' Values
      operationId: listMappingActionValues
      summary: List Actions Values
  /api/2/mappings/conditions:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              name:
                description: Name of Condition
                example: MemberOf
                type: string
              value:
                description: >-
                  The unique identifier of the condition. This should be used
                  when defining conditions for a User Mapping
                example: member_of
                type: string
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - User Mappings
      description: List User Mappings' Conditions
      operationId: listMappingConditions
      summary: List Conditions
  '/api/2/mappings/conditions/{mapping_condition_value}/operators':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: mapping_condition_value
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            items:
              properties:
                name:
                  description: Name or description of operator
                  example: equals
                  type: string
                value:
                  description: >-
                    The condition operator value to use when creating or
                    updating User Mappings.
                  example: '='
                  type: string
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - User Mappings
      description: List User Mappings' Conditions' Operators
      operationId: listMappingConditionsOperators
      summary: List Conditions Operators
  '/api/2/mappings/conditions/{mapping_condition_value}/values':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: mapping_condition_value
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            items:
              properties:
                name:
                  description: Name or description of operator
                  example: default
                  type: string
                value:
                  description: >-
                    The condition operator value to use when creating or
                    updating User Mappings.
                  example: 199848
                  type: integer
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - User Mappings
      description: List User Mappings'  Conditions' Values
      operationId: listMappingContionValues
      summary: List Conditions Values
  /api/2/mappings/sort:
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: body
          name: body
          schema:
            example:
              - 196671
              - 196670
              - 196672
              - 196676
              - 197758
            items:
              type: integer
            type: array
      responses:
        '200':
          description: Successful response
          examples:
            application/json:
              - 197758
              - 196670
              - 196671
              - 196672
              - 196676
          schema:
            items:
              type: integer
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '422':
          description: Unprocessable
          examples:
            application/json:
              code: 422
              error: true
              message: 'Validation failed: Value has already been taken'
              type: UnprocessableEntityError
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - User Mappings
      description: Bulk Sort User Mappings
      operationId: sortMappings
      summary: Bulk Sort
  '/api/2/mappings/{mapping_id}':
    delete:
      produces:
        - application/json
      parameters:
        - description: The id of the user mapping to locate.
          in: path
          name: mapping_id
          required: true
          type: integer
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - User Mappings
      description: Delete User Mapping
      operationId: deleteMapping
      summary: Delete Mapping
    get:
      produces:
        - application/json
      parameters:
        - description: The id of the user mapping to locate.
          in: path
          name: mapping_id
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              actions:
                description: >-
                  An array of actions that will be applied to the users that are
                  matched by the conditions.
                items:
                  properties:
                    action:
                      description: The action to apply
                      type: string
                    value:
                      description: >-
                        Only applicable to provisioned and set_* actions. Items
                        in the array will be a plain text string or valid value
                        for the selected action.
                      items:
                        example: '2'
                        type: string
                      type: array
                  type: object
                type: array
              conditions:
                description: >-
                  An array of conditions that the user must meet in order for
                  the mapping to be applied.
                items:
                  description: Conditions in which mappings are applied
                  properties:
                    operator:
                      description: A valid operator for the selected condition source
                      example: '>'
                      type: string
                    source:
                      description: source field to check.
                      example: last_login
                      type: string
                    value:
                      description: >-
                        A plain text string or valid value for the selected 
                        condition source
                      example: '90'
                      type: string
                  type: object
                type: array
              enabled:
                description: Indicates if the mapping is enabled or not.
                type: boolean
              id:
                type: integer
              match:
                description: Indicates how conditions should be matched.
                enum:
                  - all
                  - any
                type: string
              name:
                description: The name of the mapping.
                type: string
              position:
                description: >-
                  Indicates the order of the mapping. When `null` this will
                  default to last position.
                type: integer
            required:
              - name
              - enabled
              - match
              - position
              - conditions
              - actions
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - User Mappings
      description: Get User Mapping
      operationId: getMapping
      summary: Get Mapping
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - description: The id of the user mapping to locate.
          in: path
          name: mapping_id
          required: true
          type: integer
        - in: body
          name: body
          schema:
            example:
              properties:
                actions:
                  description: >-
                    An array of actions that will be applied to the users that
                    are matched by the conditions.
                  items:
                    properties:
                      action:
                        description: The action to apply
                        type: string
                      value:
                        description: >-
                          Only applicable to provisioned and set_* actions.
                          Items in the array will be a plain text string or
                          valid value for the selected action.
                        items:
                          example: '2'
                          type: string
                        type: array
                    type: object
                  type: array
                conditions:
                  description: >-
                    An array of conditions that the user must meet in order for
                    the mapping to be applied.
                  items:
                    description: Conditions in which mappings are applied
                    properties:
                      operator:
                        description: A valid operator for the selected condition source
                        example: '>'
                        type: string
                      source:
                        description: source field to check.
                        example: last_login
                        type: string
                      value:
                        description: >-
                          A plain text string or valid value for the selected 
                          condition source
                        example: '90'
                        type: string
                    type: object
                  type: array
                enabled:
                  description: Indicates if the mapping is enabled or not.
                  type: boolean
                id:
                  type: integer
                match:
                  description: Indicates how conditions should be matched.
                  enum:
                    - all
                    - any
                  type: string
                name:
                  description: The name of the mapping.
                  type: string
                position:
                  description: >-
                    Indicates the order of the mapping. When `null` this will
                    default to last position.
                  type: integer
              required:
                - name
                - enabled
                - match
                - position
                - conditions
                - actions
              type: object
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            type: integer
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '422':
          description: Unprocessable
          examples:
            application/json:
              code: 422
              error: true
              message: 'Validation failed: Value has already been taken'
              type: UnprocessableEntityError
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - User Mappings
      description: Update User Mapping
      operationId: updateMapping
      summary: Update Mapping
  '/api/2/mfa/users/{user_id}/devices':
    get:
      produces:
        - application/json
      parameters:
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              properties:
                auth_factor_name:
                  description: >-
                    Authentication factor name, as it appears to administrators
                    in OneLogin.
                  example: OneLogin Voice
                  type: string
                default:
                  default: false
                  description: true = is user’s default MFA device for OneLogin.
                  type: boolean
                device_id:
                  description: MFA device identifier.
                  example: '3920373'
                  type: string
                type_display_name:
                  description: >-
                    Authentication factor display name as it appears to users
                    upon initial registration, as defined by admins at Settings
                    > Authentication Factors.
                  example: OneLogin Voice
                  type: string
                user_display_name:
                  description: >-
                    Authentication factor display name assigned by users when
                    they register the device.
                  example: OneLogin Voice
                  type: string
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Multi Factor Authentication
      description: Get a user authentication devices
      operationId: getAuthenticationDevices
      summary: Get User Devices
  '/api/2/mfa/users/{user_id}/devices/{device_id}':
    delete:
      parameters:
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - in: path
          name: device_id
          required: true
          type: string
      responses:
        '204':
          description: No Content
      security:
        - OAuth2:
            - Manage All
      tags:
        - Multi Factor Authentication
      description: Delete a user\'s authentication device
      operationId: deleteEnrolledFactor
      summary: Delete Enrolled Factor
  '/api/2/mfa/users/{user_id}/factors':
    get:
      produces:
        - application/json
      parameters:
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              type: string
          schema:
            properties:
              auth_factor_name:
                description: Internal use only
                example: Onelogin
                type: string
              factor_id:
                description: >-
                  Identifier for the factor which will be used for user
                  enrollment
                example: 598524
                type: integer
              name:
                description: >-
                  Authentication factor name, as it appears to administrators in
                  OneLogin.
                example: Onelogin Protect
                type: string
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Multi Factor Authentication
      description: Get a user\'s available authentication factors
      operationId: getAuthFactors
      summary: Get User Factors
  '/api/2/mfa/users/{user_id}/mfa_token':
    post:
      consumes: []
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - in: body
          name: body
          schema:
            properties:
              expires_in:
                description: >-
                  Set the duration of the token in seconds. Token expiration
                  defaults to 259200 seconds = 72 hours. 72 hours is the max
                  value.
                example: 300
                type: integer
              reusable:
                default: false
                description: >-
                  Defines if the token is reusable multiple times within the
                  expiry window. Value defaults to false. If set to true, token
                  can be used multiple times, until it expires.
                type: boolean
            type: object
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              type: string
          schema:
            properties:
              device_id:
                description: >-
                  A unique identifier for the temp otp device that has been
                  created for this token.
                example: user_temp_otp_36216766
                type: string
              expires_at:
                description: >-
                  Defines the expiration time and date for the token. Format is
                  UTC time.
                example: '2020-06-26T21:52:56Z'
                type: string
              mfa_token:
                description: >-
                  Token can function as a temporary MFA token. It can be used to
                  authenticate for any app when valid.
                example: UIOWE787979
                type: string
              reusable:
                default: false
                description: >-
                  true indcates the token can be used multiple times, until it
                  expires. false indicates the token is invalid after a single
                  use or once it expires. Defaults to false.
                type: boolean
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              message: invalid value in \"auth_method\"
              name: UnprocessableEntityError
              statusCode: 422
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Multi Factor Authentication
      description: Create new MFA token on the user's account
      operationId: generateOTP
      summary: Generate MFA token
  '/api/2/mfa/users/{user_id}/registrations':
    post:
      consumes: []
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - in: body
          name: body
          schema:
            properties:
              custom_message:
                description: >-
                  Only applies to SMS factor.

                  A message template that will be sent via SMS. Max length of
                  the message after template items are inserted is 160
                  characters including the OTP code. SMS must already be
                  configured by the user.

                  The following template variables can be included in the
                  message. - {{otp_code}} - The security code. - {{otp_expiry}}
                  - The number of minutes until the one time code expires.
                type: string
              display_name:
                description: A name for the users device
                example: OneLogin SMS
                type: string
              expires_in:
                description: 'Defaults to 120. Valid values are: 120-900 seconds.'
                type: string
              factor_id:
                description: >-
                  The identifier of the factor to enroll the user with. See Get
                  Available Factors for a list of possible id values.
                example: 58959
                type: integer
              redirect_to:
                description: >-
                  Only applies to Email MagicLink factor. Redirects MagicLink
                  success page to specified URL after 2 seconds. Email must
                  already be configured by the user.
                type: string
              verified:
                description: >-
                  Defaults to false. The following factors support verified =
                  true as part of the initial registration request: OneLogin
                  SMS, OneLogin Voice, OneLogin Email. When using verified =
                  true it is critical that the supported factors have
                  pre-verified values, most likely imported from an existing
                  directory or by the users themselvdes.

                  Factors such as Authenticator and OneLogin Protect do not
                  support verification = true as the user interaction is
                  required to verify the factor.
                type: boolean
            required:
              - factor_id
              - display_name
            type: object
      responses:
        '201':
          description: Created
          headers:
            Accept-Language:
              type: string
            Cache-Control:
              type: string
            Content-Length:
              type: integer
            Content-Type:
              type: string
            Date:
              type: string
            X-Content-Type-Options:
              type: string
            X-Request-Id:
              type: string
          schema:
            properties:
              auth_factor_name:
                description: >-
                  Authentication factor name, as it appears to administrators in
                  OneLogin.
                example: OneLogin Voice
                type: string
              device_id:
                description: MFA device identifier.
                example: '3920373'
                type: string
              id:
                description: Verification identifier used in subsequent verification step.
                example: 5a0ba80a-39a1-4627-9a8b-1273278b34ee
                type: string
              type_display_name:
                description: >-
                  Authentication factor display name as it appears to users upon
                  initial registration, as defined by admins at Settings >
                  Authentication Factors.
                example: OneLogin Voice
                type: string
              user_display_name:
                description: >-
                  Authentication factor display name assigned by users when they
                  register the device.
                example: OneLogin Voice
                type: string
              user_id:
                description: User identifier
                example: 5a0ba80a-39a1-4627-9a8b-1273278b34ee
                type: string
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Multi Factor Authentication
      description: Create a new registration process
      operationId: createFactorRegistration
      summary: Create Factor Registration
  '/api/2/mfa/users/{user_id}/registrations/{registration_id}':
    get:
      produces:
        - application/json
      parameters:
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - description: The id of a registration
          in: path
          name: registration_id
          required: true
          type: string
          x-example: <UUID>
      responses:
        '200':
          description: OK
          examples:
            application/json:
              id: ca332b26-0d83-444f-956b-0dbf004a3f03
              status: pending
          headers:
            Accept-Language:
              type: string
            Cache-Control:
              type: string
            Content-Length:
              type: integer
            Content-Type:
              type: string
            Date:
              type: string
            X-Content-Type-Options:
              type: string
            X-Request-Id:
              type: string
          schema:
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Multi Factor Authentication
      description: Get registration state by id
      operationId: getUserRegistration
      summary: Get User Registration
    put:
      consumes: []
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - description: The id of a registration
          in: path
          name: registration_id
          required: true
          type: string
          x-example: <UUID>
        - in: body
          name: body
          schema:
            example:
              otp: 58959
            properties:
              otp:
                description: >-
                  One-Time-Password (OTP) that was sent to the user based on the
                  chosen factor. OneLogin SMS and OneLogin Email support this
                  OTP code.
                type: integer
            type: object
      responses:
        '200':
          description: OK
          headers:
            Accept-Language:
              type: string
            Cache-Control:
              type: string
            Content-Length:
              type: integer
            Content-Type:
              type: string
            Date:
              type: string
            X-Content-Type-Options:
              type: string
            X-Request-Id:
              type: string
          schema:
            properties:
              device_id:
                description: Device id to be used with Verify the Factor.
                example: '3926157'
                type: string
              id:
                description: Registration identifier.
                example: 44aa6883-5048-4cd5-8cb2-64d47784230c
                type: string
              status:
                description: >-
                  pending registration has not been completed successfully.
                  accepted registration has successfully completed.
                example: accepted
                type: string
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Multi Factor Authentication
      description: Submit an otp for verification.
      operationId: verifyUserRegistration
      summary: Verify User Registration
  '/api/2/mfa/users/{user_id}/verifications':
    post:
      consumes: []
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - in: body
          name: body
          schema:
            properties:
              custom_message:
                description: >-
                  Only applies to SMS factor.

                  A message template that will be sent via SMS. Max length of
                  the message after template items are inserted is 160
                  characters including the OTP code. SMS must already be
                  configured by the user.

                  The following template variables can be included in the
                  message. - {{otp_code}} - The security code. - {{otp_expiry}}
                  - The number of minutes until the one time code expires.
                type: string
              device_id:
                description: Specifies the factor to be verified.
                example: 58959
                type: integer
              display_name:
                description: A name for the users device
                example: OneLogin SMS
                type: string
              expires_in:
                description: 'Defaults to 120. Valid values are: 120-900 seconds.'
                type: string
              redirect_to:
                description: >-
                  Only applies to Email MagicLink factor. Redirects MagicLink
                  success page to specified URL after 2 seconds. Email must
                  already be configured by the user.
                type: string
            required:
              - device_id
            type: object
      responses:
        '201':
          description: Created
          examples:
            application/json:
              device_id: 489339
              factor_data:
                totp_url: <string>
                verification_token: <string>
              id: 5a0ba80a-39a1-4627-9a8b-1273278b34ee
              status: pending
              user_id: 2323
          headers:
            Content-Type:
              type: string
          schema:
            properties:
              auth_factor_name:
                description: >-
                  Authentication factor name, as it appears to administrators in
                  OneLogin.
                example: OneLogin Voice
                type: string
              device_id:
                description: Specifies the factor to be verified.
                example: 58959
                type: integer
              display_name:
                description: A name for the users device
                example: OneLogin SMS
                type: string
              expires_at:
                description: >-
                  A short lived token that is required to Verify the Factor.
                  This token expires based on the expires_in parameter passed
                  in.
                example: '2020-07-11T22:24:50Z'
                type: string
              id:
                description: Registration identifier.
                example: 44aa6883-5048-4cd5-8cb2-64d47784230c
                type: string
              redirect_to:
                description: >-
                  Only applies to Email MagicLink factor. Redirects MagicLink
                  success page to specified URL after 2 seconds. Email must
                  already be configured by the user.
                type: string
              type_display_name:
                description: >-
                  Authentication factor display name as it appears to users upon
                  initial registration, as defined by admins at Settings >
                  Authentication Factors.
                example: OneLogin Voice
                type: string
              user_display_name:
                description: >-
                  Authentication factor display name assigned by users when they
                  register the device.
                example: OneLogin Voice
                type: string
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Multi Factor Authentication
      description: Create a new verification process
      operationId: createDeviceVerification
      summary: Create Device Verification
  '/api/2/mfa/users/{user_id}/verifications/{verification_id}':
    get:
      produces:
        - application/json
      parameters:
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - description: >-
            The verification_id is returned on activation of the factor or you
            can get the device_id using the Activate Factor API call.
          in: path
          name: verification_id
          required: true
          type: string
          x-example: <UUID>
      responses:
        '200':
          description: OK
          schema:
            properties:
              device_id:
                description: Device Id to be used with verify factor
                example: '331991'
                type: string
              id:
                description: registration identifier
                example: 5a0ba80a-39a1-4627-9a8b-1273278b34ee
                type: string
              status:
                description: >-
                  pending = has not been completed. accepted registration has
                  successfully completed, rejected user has denied the MFA
                  attempt or incorrectly provided the OneLogin Voice OTP code.
                example: pending
                type: string
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Multi Factor Authentication
      description: Get verification state by id
      operationId: getUserVerification
      summary: Get User Verification
    put:
      consumes: []
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - description: >-
            The verification_id is returned on activation of the factor or you
            can get the device_id using the Activate Factor API call.
          in: path
          name: verification_id
          required: true
          type: string
          x-example: <UUID>
        - in: body
          name: body
          schema:
            properties:
              device_id:
                description: >-
                  ID of the specified device which has been registerd for the
                  given user. Available on Get Devices API call.
                example: 98765
                type: integer
              otp:
                description: OTP code provided by the device or SMS message sent to user.
                example: '123456'
                type: string
            type: object
      responses:
        '200':
          description: OK
          examples:
            application/json:
              code: 200
              error: false
              message: success
              type: success
          headers:
            Content-Type:
              type: string
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '403':
          description: Forbidden
          examples:
            application/json:
              message: Not allowed to destroy specified resource
              name: ForbiddenError
              statusCode: 403
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Multi Factor Authentication
      description: Submit an otp for verification.
      operationId: verifyUserVerification
      summary: Verify User Verification
  /api/2/risk/events:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: body
          name: body
          required: true
          schema:
            properties:
              device:
                description: Information about the device being used.
                properties:
                  id:
                    description: This device's unique identifier
                    type: string
                type: object
              fp:
                description: Set to the value of the __tdli_fp cookie.
                type: string
              ip:
                description: The IP address of the User's request.
                type: string
              published:
                description: >-
                  Date and time of the event in IS08601 format. Useful for
                  preloading old events. Defaults to date time this API request
                  is received.
                type: string
              session:
                description: >-
                  A dictionary of extra information that provides useful context
                  about the session, for example the session ID, or some cookie
                  information.
                properties:
                  id:
                    description: >-
                      If you use a database to track sessions, you can send us
                      the session ID.
                    type: string
                type: object
              source:
                description: >-
                  Used for targeting custom rules based on a group of people,
                  customers, accounts, or even a single user.
                properties:
                  id:
                    description: A unique id that represents the source of the event.
                    type: string
                  name:
                    description: The name of the source
                    type: string
                type: object
              user:
                description: An Object containing User details.
                properties:
                  authenticated:
                    default: false
                    description: >-
                      Indicates if the metadata supplied in this event should be
                      considered as trusted for the user.
                    type: boolean
                  id:
                    description: A unique identifier for the user.
                    type: string
                  name:
                    description: A name for the user.
                    type: string
                required:
                  - id
                type: object
              user_agent:
                description: The user agent of the User's request.
                type: string
              verb:
                description: >-
                  Verbs are used to distinguish between different types of
                  events.
                type: string
            required:
              - verb
              - ip
              - user_agent
              - user
            type: object
      responses:
        '200':
          description: No content is returned. This API is fire and forget.
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Authentication Only
            - Read Users
            - Manage users
            - Manage All
            - Read All
      tags:
        - Vigilance AI
      description: Track Vigilance AI (Risk Service) Event
      operationId: trackRiskEvent
      summary: Track an Event
  /api/2/risk/rules:
    get:
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              properties:
                description:
                  type: string
                filters:
                  description: >-
                    A list of IP addresses or country codes or names to evaluate
                    against each event.
                  items:
                    type: string
                  type: array
                id:
                  type: string
                name:
                  description: The name of this rule
                  type: string
                source:
                  description: >-
                    Used for targeting custom rules based on a group of people,
                    customers, accounts, or even a single user.
                  properties:
                    id:
                      description: A unique id that represents the source of the event.
                      type: string
                    name:
                      description: The name of the source
                      type: string
                  type: object
                target:
                  description: >-
                    The target parameter that will be used when evaluating the
                    rule against an incoming event.
                  enum:
                    - location.ip
                    - location.address.country_iso_code
                  type: string
                type:
                  description: >-
                    The type parameter specifies the type of rule that will be
                    created.
                  enum:
                    - blacklist
                    - whitelist
                  type: string
              type: object
            type: array
        '401':
          description: Invalid API Key
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
            - Read All
      tags:
        - Vigilance AI
      description: List Vigilance AI (Risk Service) Rules
      operationId: listRiskRules
      summary: List Rules
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: body
          name: body
          required: true
          schema:
            properties:
              description:
                type: string
              filters:
                description: >-
                  A list of IP addresses or country codes or names to evaluate
                  against each event.
                items:
                  type: string
                type: array
              id:
                type: string
              name:
                description: The name of this rule
                type: string
              source:
                description: >-
                  Used for targeting custom rules based on a group of people,
                  customers, accounts, or even a single user.
                properties:
                  id:
                    description: A unique id that represents the source of the event.
                    type: string
                  name:
                    description: The name of the source
                    type: string
                type: object
              target:
                description: >-
                  The target parameter that will be used when evaluating the
                  rule against an incoming event.
                enum:
                  - location.ip
                  - location.address.country_iso_code
                type: string
              type:
                description: >-
                  The type parameter specifies the type of rule that will be
                  created.
                enum:
                  - blacklist
                  - whitelist
                type: string
            type: object
      responses:
        '201':
          description: CREATED
          schema:
            properties:
              description:
                type: string
              filters:
                description: >-
                  A list of IP addresses or country codes or names to evaluate
                  against each event.
                items:
                  type: string
                type: array
              id:
                type: string
              name:
                description: The name of this rule
                type: string
              source:
                description: >-
                  Used for targeting custom rules based on a group of people,
                  customers, accounts, or even a single user.
                properties:
                  id:
                    description: A unique id that represents the source of the event.
                    type: string
                  name:
                    description: The name of the source
                    type: string
                type: object
              target:
                description: >-
                  The target parameter that will be used when evaluating the
                  rule against an incoming event.
                enum:
                  - location.ip
                  - location.address.country_iso_code
                type: string
              type:
                description: >-
                  The type parameter specifies the type of rule that will be
                  created.
                enum:
                  - blacklist
                  - whitelist
                type: string
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Vigilance AI
      description: Create Vigilance AI (Risk Service) Rule
      operationId: createRiskRule
      summary: Create Rule
  '/api/2/risk/rules/{rule_id}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: rule_id
          required: true
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
            - Read All
      tags:
        - Vigilance AI
      description: Delete Vigilance AI (Risk Service)
      operationId: deleteRiskRule
      summary: Delete Rule
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: rule_id
          required: true
          type: string
      responses:
        '200':
          description: Successful Response
          schema:
            properties:
              description:
                type: string
              filters:
                description: >-
                  A list of IP addresses or country codes or names to evaluate
                  against each event.
                items:
                  type: string
                type: array
              id:
                type: string
              name:
                description: The name of this rule
                type: string
              source:
                description: >-
                  Used for targeting custom rules based on a group of people,
                  customers, accounts, or even a single user.
                properties:
                  id:
                    description: A unique id that represents the source of the event.
                    type: string
                  name:
                    description: The name of the source
                    type: string
                type: object
              target:
                description: >-
                  The target parameter that will be used when evaluating the
                  rule against an incoming event.
                enum:
                  - location.ip
                  - location.address.country_iso_code
                type: string
              type:
                description: >-
                  The type parameter specifies the type of rule that will be
                  created.
                enum:
                  - blacklist
                  - whitelist
                type: string
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
            - Read All
      tags:
        - Vigilance AI
      description: >-
        Use this API to return a single rule that has been created in the Risk
        Sevice.
      operationId: getRiskRule
      summary: get Risk Rule
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: rule_id
          required: true
          type: string
        - in: body
          name: body
          schema:
            properties:
              id:
                description: The ID of the Rule to Update
                type: string
            type: object
      responses:
        '200':
          description: Successful Response
          schema:
            properties:
              description:
                type: string
              filters:
                description: >-
                  A list of IP addresses or country codes or names to evaluate
                  against each event.
                items:
                  type: string
                type: array
              id:
                type: string
              name:
                description: The name of this rule
                type: string
              source:
                description: >-
                  Used for targeting custom rules based on a group of people,
                  customers, accounts, or even a single user.
                properties:
                  id:
                    description: A unique id that represents the source of the event.
                    type: string
                  name:
                    description: The name of the source
                    type: string
                type: object
              target:
                description: >-
                  The target parameter that will be used when evaluating the
                  rule against an incoming event.
                enum:
                  - location.ip
                  - location.address.country_iso_code
                type: string
              type:
                description: >-
                  The type parameter specifies the type of rule that will be
                  created.
                enum:
                  - blacklist
                  - whitelist
                type: string
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
            - Read All
      tags:
        - Vigilance AI
      description: Update Vigilance AI (Risk Service) Rule
      operationId: updateRiskRule
      summary: Update Rule
  /api/2/risk/scores:
    get:
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              scores:
                properties:
                  high:
                    type: integer
                  low:
                    type: integer
                  medium:
                    type: integer
                  minimal:
                    type: integer
                  very_high:
                    type: integer
                type: object
              total:
                type: integer
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage All
            - Read All
      tags:
        - Vigilance AI
      description: Get Vigilance AI (Risk Service) Score Summary
      operationId: getRiskScores
      summary: Get Score Summary
  /api/2/risk/verify:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - description: >-
            Optional ISO8601 formatted date string. Defaults to current date.
            Maximum date is 90 days ago.
          in: query
          name: before
          type: string
        - description: >-
            Optional ISO8601 formatted date string. Defaults to 30 days ago.
            Maximum date is 90 days ago.
          in: query
          name: after
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              device:
                description: Information about the device being used.
                properties:
                  id:
                    description: This device's unique identifier
                    type: string
                type: object
              fp:
                description: Set to the value of the __tdli_fp cookie.
                type: string
              ip:
                description: The IP address of the User's request.
                type: string
              session:
                description: >-
                  A dictionary of extra information that provides useful context
                  about the session, for example the session ID, or some cookie
                  information.
                properties:
                  id:
                    description: >-
                      If you use a database to track sessions, you can send us
                      the session ID.
                    type: string
                type: object
              source:
                description: >-
                  Used for targeting custom rules based on a group of people,
                  customers, accounts, or even a single user.
                properties:
                  id:
                    description: A unique id that represents the source of the event.
                    type: string
                  name:
                    description: The name of the source
                    type: string
                type: object
              user:
                description: An Object containing User details.
                properties:
                  authenticated:
                    default: false
                    description: >-
                      Indicates if the metadata supplied in this event should be
                      considered as trusted for the user.
                    type: boolean
                  id:
                    description: A unique identifier for the user.
                    type: string
                  name:
                    description: A name for the user.
                    type: string
                required:
                  - id
                type: object
              user_agent:
                description: The user agent of the User's request.
                type: string
            required:
              - ip
              - user_agent
              - user
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              score:
                description: >-
                  A risk score 0 is low risk and 100 is the highest risk level
                  possible.
                maximum: 100
                minimum: 0
                type: number
              triggers:
                description: >-
                  Triggers are indicators of some of the key items that
                  influenced the risk score.
                items:
                  type: string
                type: array
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Authentication Only
            - Read Users
            - Manage users
            - Manage All
            - Read All
      tags:
        - Vigilance AI
      description: Get Vigilance AI (Risk Service) Score
      operationId: getRiskScore
      summary: Get a Risk Score
  /api/2/roles:
    get:
      produces:
        - application/json
      parameters:
        - description: How many items to return at one time (max 100)
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: The page number of results to return.
          in: query
          name: page
          type: integer
        - description: >-
            Set to the value extracted from Before-Cursor or After-Cursor
            headers to return the previous or next page.
          in: query
          name: cursor
          type: string
        - description: Optional. Filters by role name.
          in: query
          name: name
          type: string
        - description: Optional. Returns roles that contain this app ID.
          in: query
          name: app_id
          type: integer
        - description: Optional. Returns roles that contain this app name.
          in: query
          name: app_name
          type: string
        - description: Optional. Comma delimited list of fields to return.
          enum:
            - apps
            - users
            - admins
          in: query
          name: fields
          type: string
      responses:
        '200':
          description: OK
          headers:
            After-Cursor:
              description: >-
                A string that can be used to request the page of results that
                follows the current page using the same set of search filters
                and pagination options.
              type: string
            Before-Cursor:
              description: >-
                A string that can be used to request the page of results that
                preceed the current page using the same set of search filters
                and pagination options.
              type: string
            Current-Page:
              description: The index number of the current page being returned.
              type: integer
            Link:
              description: 'A set of urls which contains premade links for first, next'
              type: array
            Page-Items:
              description: The number of items returned in the response.
              type: integer
            Total-Count:
              description: The total number of items across all pages.
              type: integer
            Total-Pages:
              description: The total number of pages to return all results.
              type: integer
          schema:
            items:
              properties:
                admins:
                  items:
                    type: integer
                  type: array
                apps:
                  items:
                    type: integer
                  type: array
                id:
                  type: integer
                name:
                  type: string
                users:
                  items:
                    type: integer
                  type: array
              required:
                - name
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
            - Read All
            - Read Users
      tags:
        - Roles
      description: List Roles
      operationId: listRoles
      summary: List Roles
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              admins:
                items:
                  type: integer
                type: array
              apps:
                items:
                  type: integer
                type: array
              id:
                type: integer
              name:
                type: string
              users:
                items:
                  type: integer
                type: array
            required:
              - name
            type: object
      responses:
        '201':
          description: CREATED
          schema:
            items:
              properties:
                id:
                  type: integer
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Roles
      description: Create Role
      operationId: createRoles
      summary: Create Role
  '/api/2/roles/{role_id}':
    delete:
      produces:
        - application/json
      parameters:
        - description: Set to the id of the role you want to return.
          in: path
          name: role_id
          required: true
          type: integer
      responses:
        '204':
          description: NO CONTENT
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '403':
          description: Forbidden
          examples:
            application/json:
              message: Not allowed to destroy specified resource
              name: ForbiddenError
              statusCode: 403
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Roles
      description: Delete Role
      operationId: deleteRole
      summary: Delete Role by ID
    get:
      produces:
        - application/json
      parameters:
        - description: Set to the id of the role you want to return.
          in: path
          name: role_id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            properties:
              admins:
                items:
                  type: integer
                type: array
              apps:
                items:
                  type: integer
                type: array
              id:
                type: integer
              name:
                type: string
              users:
                items:
                  type: integer
                type: array
            required:
              - name
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
            - Read All
            - Read Users
      tags:
        - Roles
      description: Get Role
      operationId: getRole
      summary: Get Role by ID
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Set to the id of the role you want to return.
          in: path
          name: role_id
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            properties:
              admins:
                items:
                  type: integer
                type: array
              apps:
                items:
                  type: integer
                type: array
              id:
                type: integer
              name:
                type: string
              users:
                items:
                  type: integer
                type: array
            required:
              - name
            type: object
      responses:
        '200':
          description: OK
          schema:
            properties:
              id:
                type: integer
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              message: invalid value in \"auth_method\"
              name: UnprocessableEntityError
              statusCode: 422
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Roles
      description: Update Role
      operationId: updateRole
      summary: Update Role
  '/api/2/roles/{role_id}/admins':
    delete:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Set to the id of the role you want to return.
          in: path
          name: role_id
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            properties:
              user_id:
                items:
                  type: integer
                type: array
            type: object
      responses:
        '204':
          description: NO CONTENT
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Roles
      description: Remove Role Admins
      operationId: removeRoleAdmins
      summary: Remove Role Admins
    get:
      produces:
        - applcation/json
        - application/json
      parameters:
        - description: Set to the id of the role you want to return.
          in: path
          name: role_id
          required: true
          type: integer
        - description: How many items to return at one time (max 100)
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: The page number of results to return.
          in: query
          name: page
          type: integer
        - description: >-
            Set to the value extracted from Before-Cursor or After-Cursor
            headers to return the previous or next page.
          in: query
          name: cursor
          type: string
        - description: >-
            Allows you to filter on first name, last name, username, and email
            address.
          in: query
          name: name
          type: string
        - description: >-
            Optional. Defaults to false. Include users that aren’t assigned to
            the role.
          in: query
          name: include_unassigned
          type: boolean
      responses:
        '200':
          description: OK
          headers:
            After-Cursor:
              description: >-
                A string that can be used to request the page of results that
                follows the current page using the same set of search filters
                and pagination options.
              type: string
            Before-Cursor:
              description: >-
                A string that can be used to request the page of results that
                preceed the current page using the same set of search filters
                and pagination options.
              type: string
            Current-Page:
              description: The index number of the current page being returned.
              type: integer
            Link:
              description: 'A set of urls which contains premade links for first, next'
              type: array
            Page-Items:
              description: The number of items returned in the response.
              type: integer
            Total-Count:
              description: The total number of items across all pages.
              type: integer
            Total-Pages:
              description: The total number of pages to return all results.
              type: integer
          schema:
            items:
              properties:
                activated_at:
                  type: string
                comment:
                  description: Free text related to the user.
                  type: string
                company:
                  description: The user's company.
                  type: string
                created_at:
                  type: string
                department:
                  description: The user's department.
                  type: string
                directory_id:
                  description: The ID of the OneLogin Directory of the user.
                  type: integer
                distinguished_name:
                  description: The distinguished name of the user.
                  type: string
                email:
                  description: A valid email for the user.
                  type: string
                external_id:
                  description: The ID of the user in an external directory.
                  type: string
                firstname:
                  description: The user's first name.
                  type: string
                group_id:
                  description: >-
                    The ID of the Group in OneLogin that the user is assigned
                    to.
                  type: integer
                id:
                  type: integer
                invalid_login_attempts:
                  type: integer
                invitation_sent_at:
                  type: string
                last_login:
                  type: string
                lastname:
                  description: The user's last name.
                  type: string
                locked_until:
                  type: string
                manager_ad_id:
                  description: The ID of the user's manager in Active Directory.
                  type: string
                manager_user_id:
                  description: The OneLogin User ID for the user's manager.
                  type: string
                member_of:
                  description: The user's directory membership.
                  type: string
                password:
                  description: The password to set for a user.
                  type: string
                password_algorithm:
                  description: >-
                    Use this when importing a password that's already hashed.
                    Prepend the salt value to the cleartext password value
                    before SHA-256-encoding it
                  type: string
                password_changed_at:
                  type: string
                password_confirmation:
                  description: Required if the password is being set.
                  type: string
                phone:
                  description: The E.164 format phone number for a user.
                  type: string
                preferred_locale_code:
                  type: string
                role_ids:
                  description: A list of OneLogin Role IDs of the user
                  items:
                    type: integer
                  minLength: 1
                  type: array
                salt:
                  description: The salt value used with the password_algorithm.
                  type: string
                samaccount_name:
                  description: The user's Active Directory username.
                  type: string
                state:
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                  type: integer
                status:
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 7
                    - 8
                  type: integer
                title:
                  description: The user's job title.
                  type: string
                trusted_idp_id:
                  description: The ID of the OneLogin Trusted IDP of the user.
                  type: integer
                updated_at:
                  type: string
                username:
                  description: A username for the user.
                  type: string
                userprincipalname:
                  description: The principle name of the user.
                  type: string
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
            - Read All
            - Read Users
      tags:
        - Roles
      description: Get Role Admins
      operationId: getRoleAdmins
      summary: Get Role Admins
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Set to the id of the role you want to return.
          in: path
          name: role_id
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            description: 'Set user_id values in array,'
            items:
              type: integer
            type: array
      responses:
        '200':
          description: OK
          schema:
            items:
              properties:
                id:
                  type: integer
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Roles
      description: Add Role Admins
      operationId: addRoleAdmins
      summary: Add Role Admins
  '/api/2/roles/{role_id}/apps':
    get:
      produces:
        - applcation/json
        - application/json
      parameters:
        - description: Set to the id of the role you want to return.
          in: path
          name: role_id
          required: true
          type: integer
        - description: How many items to return at one time (max 100)
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: The page number of results to return.
          in: query
          name: page
          type: integer
        - description: >-
            Set to the value extracted from Before-Cursor or After-Cursor
            headers to return the previous or next page.
          in: query
          name: cursor
          type: string
        - description: >-
            Optional. Defaults to true. Returns all apps not yet assigned to the
            role.
          in: query
          name: assigned
          type: boolean
      responses:
        '200':
          description: OK
          headers:
            After-Cursor:
              description: >-
                A string that can be used to request the page of results that
                follows the current page using the same set of search filters
                and pagination options.
              type: string
            Before-Cursor:
              description: >-
                A string that can be used to request the page of results that
                preceed the current page using the same set of search filters
                and pagination options.
              type: string
            Current-Page:
              description: The index number of the current page being returned.
              type: integer
            Link:
              description: 'A set of urls which contains premade links for first, next'
              type: array
            Page-Items:
              description: The number of items returned in the response.
              type: integer
            Total-Count:
              description: The total number of items across all pages.
              type: integer
            Total-Pages:
              description: The total number of pages to return all results.
              type: integer
          schema:
            items:
              example:
                icon_url: 'https://testurl.com'
                id: 345
                name: Dropbox
              properties:
                icon_url:
                  description: url of Icon
                  format: url
                  type: string
                id:
                  description: app id
                  type: integer
                name:
                  description: app name
                  type: string
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
            - Read All
            - Read Users
      tags:
        - Roles
      description: Get Role Apps
      operationId: getRoleApps
      summary: Get all Apps assigned to Role
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Set to the id of the role you want to return.
          in: path
          name: role_id
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            description: >-
              The complete list of app_id values to assign to the role. Don't
              submit a partial list of app IDs.
            items:
              type: integer
            type: array
      responses:
        '200':
          description: The response returns an array of app IDs sent in the request.
          schema:
            items:
              properties:
                id:
                  type: integer
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Roles
      description: Set Role Apps
      operationId: setRoleApps
      summary: Set Role Apps
  '/api/2/roles/{role_id}/users':
    delete:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Set to the id of the role you want to return.
          in: path
          name: role_id
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            properties:
              user_id:
                items:
                  type: integer
                type: array
            type: object
      responses:
        '204':
          description: NO CONTENT
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Roles
      description: Remove Role Users
      operationId: removeRoleUsers
      summary: Remove Role Users
    get:
      produces:
        - applcation/json
        - application/json
      parameters:
        - description: Set to the id of the role you want to return.
          in: path
          name: role_id
          required: true
          type: integer
        - description: How many items to return at one time (max 100)
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: The page number of results to return.
          in: query
          name: page
          type: integer
        - description: >-
            Set to the value extracted from Before-Cursor or After-Cursor
            headers to return the previous or next page.
          in: query
          name: cursor
          type: string
        - description: >-
            Allows you to filter on first name, last name, username, and email
            address.
          in: query
          name: name
          type: string
        - description: >-
            Optional. Defaults to false. Include users that aren’t assigned to
            the role.
          in: query
          name: include_unassigned
          type: boolean
      responses:
        '200':
          description: OK
          headers:
            After-Cursor:
              description: >-
                A string that can be used to request the page of results that
                follows the current page using the same set of search filters
                and pagination options.
              type: string
            Before-Cursor:
              description: >-
                A string that can be used to request the page of results that
                preceed the current page using the same set of search filters
                and pagination options.
              type: string
            Current-Page:
              description: The index number of the current page being returned.
              type: integer
            Link:
              description: 'A set of urls which contains premade links for first, next'
              type: array
            Page-Items:
              description: The number of items returned in the response.
              type: integer
            Total-Count:
              description: The total number of items across all pages.
              type: integer
            Total-Pages:
              description: The total number of pages to return all results.
              type: integer
          schema:
            example:
              - added_at: '2019-12-27T00:00:00Z'
                added_by:
                  id: 678
                  name: Susan Boss
                assigned: true
                id: 345
                name: Joe User
                username: joe.user@example.com
            items:
              properties:
                activated_at:
                  type: string
                comment:
                  description: Free text related to the user.
                  type: string
                company:
                  description: The user's company.
                  type: string
                created_at:
                  type: string
                department:
                  description: The user's department.
                  type: string
                directory_id:
                  description: The ID of the OneLogin Directory of the user.
                  type: integer
                distinguished_name:
                  description: The distinguished name of the user.
                  type: string
                email:
                  description: A valid email for the user.
                  type: string
                external_id:
                  description: The ID of the user in an external directory.
                  type: string
                firstname:
                  description: The user's first name.
                  type: string
                group_id:
                  description: >-
                    The ID of the Group in OneLogin that the user is assigned
                    to.
                  type: integer
                id:
                  type: integer
                invalid_login_attempts:
                  type: integer
                invitation_sent_at:
                  type: string
                last_login:
                  type: string
                lastname:
                  description: The user's last name.
                  type: string
                locked_until:
                  type: string
                manager_ad_id:
                  description: The ID of the user's manager in Active Directory.
                  type: string
                manager_user_id:
                  description: The OneLogin User ID for the user's manager.
                  type: string
                member_of:
                  description: The user's directory membership.
                  type: string
                password:
                  description: The password to set for a user.
                  type: string
                password_algorithm:
                  description: >-
                    Use this when importing a password that's already hashed.
                    Prepend the salt value to the cleartext password value
                    before SHA-256-encoding it
                  type: string
                password_changed_at:
                  type: string
                password_confirmation:
                  description: Required if the password is being set.
                  type: string
                phone:
                  description: The E.164 format phone number for a user.
                  type: string
                preferred_locale_code:
                  type: string
                role_ids:
                  description: A list of OneLogin Role IDs of the user
                  items:
                    type: integer
                  minLength: 1
                  type: array
                salt:
                  description: The salt value used with the password_algorithm.
                  type: string
                samaccount_name:
                  description: The user's Active Directory username.
                  type: string
                state:
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                  type: integer
                status:
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 7
                    - 8
                  type: integer
                title:
                  description: The user's job title.
                  type: string
                trusted_idp_id:
                  description: The ID of the OneLogin Trusted IDP of the user.
                  type: integer
                updated_at:
                  type: string
                username:
                  description: A username for the user.
                  type: string
                userprincipalname:
                  description: The principle name of the user.
                  type: string
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              message: >-
                The resource can't be found or the server has not found anything
                matching the Request-URI
              name: NotFoundError
              statusCode: 404
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Roles
      description: Get Role Users
      operationId: getRoleUsers
      summary: Get Role Users
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Set to the id of the role you want to return.
          in: path
          name: role_id
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            description: 'Set user_id values in array,'
            items:
              type: integer
            type: array
      responses:
        '200':
          description: OK
          schema:
            items:
              properties:
                id:
                  type: integer
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              message: This request requires Authentication
              name: UnauthorizedError
              statusCode: 401
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
        '422':
          description: Unprocessable Entity
          examples:
            application/json:
              message: invalid value in \"auth_method\"
              name: UnprocessableEntityError
              statusCode: 422
          schema:
            properties:
              message:
                description: Description of Error
                example: Settings Updated
                type: string
              name:
                description: Error Code Name
                example: Success
                type: string
              statusCode:
                description: >-
                  HTTP error code
                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
                example: 200
                type: integer
            type: object
      security:
        - OAuth2:
            - Manage All
      tags:
        - Roles
      description: Add Role Users
      operationId: addRoleUsers
      summary: Add Role Users
  /api/2/saml_assertion:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: body
          name: body
          schema:
            example:
              app_id: '16819324'
              ip_address: 174.66.77.24
              password: P@ssw0rd
              subdomain: exampleOrganization
              username_or_email: hazel.zhang@onelogin.com
            properties:
              app_id:
                description: >-
                  App ID of the app for which you want to generate a SAML token.
                  This is the app ID in OneLogin.
                type: string
              ip_address:
                description: >-
                  If you are using this API in a scenario in which MFA is
                  required and you’ll need to be able to honor IP address
                  whitelisting defined in MFA policies, provide this parameter
                  and set its value to the whitelisted IP address that needs to
                  be bypassed.
                type: string
              password:
                description: >-
                  Password of the OneLogin user accessing the app for which you
                  want to generate a SAML token.
                type: string
              subdomain:
                description: >-
                  Set to the subdomain of the OneLogin user accessing the app
                  for which you want to generate a SAML token.
                type: string
              username_or_email:
                description: >-
                  Set this to the username or email of the OneLogin user
                  accessing the app for which you want to generate a SAML token.
                type: string
            required:
              - username_or_email
              - password
              - app_id
              - subdomain
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              data:
                items:
                  type: object
                type: array
              status:
                properties:
                  code:
                    example: 200
                    type: integer
                  error:
                    example: false
                    type: boolean
                  message:
                    example: Success
                    type: string
                  type:
                    example: Success
                    type: string
                required:
                  - code
                  - message
                type: object
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Authentication Only
            - Manage users
            - Manage All
      tags:
        - SAML Assertions
      description: Generate SAML Assertion
      operationId: generateSamlAssert2
      summary: Generate SAML Assertion
  /api/2/saml_assertion/verify_factor:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: body
          name: body
          schema:
            properties:
              app_id:
                description: >-
                  App ID of the app for which you want to generate a SAML token.
                  This is the app ID in OneLogin.
                example: '1657651'
                type: string
              device_id:
                description: >-
                  Provide the MFA device_id you are submitting for verification.
                  The device_id is supplied by the Generate SAML Assertion API.
                example: '1657651'
                type: string
              do_not_notify:
                description: >-
                  When verifying MFA via Protect Push, set this to true to stop
                  additional push notifications being sent to the OneLogin
                  Protect device.
                example: false
                type: boolean
              otp_token:
                description: >-
                  Provide the OTP value for the MFA factor you are submitting
                  for verification. For some MFA factors; such as OneLogin OTP
                  SMS, which requires the user to request an OTP; the otp_token
                  value is not required, and if not included, returns a 200 OK -
                  Pending result. You’ll make a subsequent Verify Factor API
                  call to provide the otp_token value once it has been provided
                  to the user.
                example: '999999'
                type: string
              state_token:
                description: >-
                  Provide the state_token associated with the MFA device_id you
                  are submitting for verification. The state_token is supplied
                  by the Generate SAML Assertion API.
                example: 11x0x1x16x1x3259xxxx0x59xx6xxxx670x61x45xxxxx
                type: string
            required:
              - app_id
              - device_id
              - state_token
            type: object
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              data:
                description: Provides the SAML assertion.
                example: >-
                  PHNhbWxwOlJlc3BvbnNlIHhtbG5zOnNhbWw9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iIHhtbG5zOnNhbWxwPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6cHJvdG9jb2wiIElEPSJSZjE5Y2EyMTI0ZGMxNzJmNzhmMjI3OTk3YzMwOTBkODVkNzFjYWMzOCIgVmVyc2lvbj0iMi4wIiBJc3N1ZUluc3RhbnQ9IjIwMjAtM
                type: string
              message:
                description: Plain text description describing the outcome of the response.
                example: SMS token sent to your mobile device. Authentication pending
                type: string
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Authentication Only
            - Manage users
            - Manage All
      tags:
        - SAML Assertions
      description: 'Verify Factor: SAML'
      operationId: verFactorSaml2
      summary: Verify Factor SAML
  /api/2/users:
    get:
      produces:
        - application/json
      parameters:
        - description: How many items to return at one time (max 100)
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: The page number of results to return.
          in: query
          name: page
          type: integer
        - description: >-
            Set to the value extracted from Before-Cursor or After-Cursor
            headers to return the previous or next page.
          in: query
          name: cursor
          type: string
        - description: >-
            An ISO8601 timestamp value that returns all users created after a
            given date & time.
          in: query
          name: created_since
          type: string
        - description: >-
            An ISO8601 timestamp value that returns all users created before a
            given date & time.
          in: query
          name: created_until
          type: string
        - description: >-
            An ISO8601 timestamp value that returns all users updated after a
            given date & time.
          in: query
          name: updated_since
          type: string
        - description: >-
            An ISO8601 timestamp value that returns all users updated before a
            given date & time.
          in: query
          name: updated_until
          type: string
        - description: >-
            An ISO8601 timestamp value that returns all users that logged in
            after a given date & time.
          in: query
          name: last_login_since
          type: string
        - description: >-
            An ISO8601 timestamp value that returns all users that logged in
            before a given date & time.
          in: query
          name: last_login_until
          type: string
        - description: The first name of the user
          in: query
          name: firstname
          type: string
        - description: The last name of the user
          in: query
          name: lastname
          type: string
        - description: The email address of the user
          in: query
          name: email
          type: string
        - description: The username for the user
          in: query
          name: username
          type: string
        - description: The AD login name for the user
          in: query
          name: samaccountname
          type: string
        - in: query
          name: directory_id
          type: integer
        - description: An external identifier that has been set on the user
          in: query
          name: external_id
          type: string
        - description: A comma separated list of OneLogin User IDs
          in: query
          name: user_ids
          type: string
        - description: >-
            The short name of a custom attribute. Note that the attribute name
            is prefixed with custom_attributes.
          in: query
          name: 'custom_attributes.{attribute_name}'
          type: string
        - description: A comma separated list user attributes to return.
          in: query
          name: fields
          type: string
      responses:
        '200':
          description: OK
          headers:
            After-Cursor:
              description: >-
                A string that can be used to request the page of results that
                follows the current page using the same set of search filters
                and pagination options.
              type: string
            Before-Cursor:
              description: >-
                A string that can be used to request the page of results that
                preceed the current page using the same set of search filters
                and pagination options.
              type: string
            Current-Page:
              description: The index number of the current page being returned.
              type: integer
            Link:
              description: 'A set of urls which contains premade links for first, next'
              type: array
            Page-Items:
              description: The number of items returned in the response.
              type: integer
            Total-Count:
              description: The total number of items across all pages.
              type: integer
            Total-Pages:
              description: The total number of pages to return all results.
              type: integer
          schema:
            items:
              properties:
                activated_at:
                  type: string
                comment:
                  description: Free text related to the user.
                  type: string
                company:
                  description: The user's company.
                  type: string
                created_at:
                  type: string
                department:
                  description: The user's department.
                  type: string
                directory_id:
                  description: The ID of the OneLogin Directory of the user.
                  type: integer
                distinguished_name:
                  description: The distinguished name of the user.
                  type: string
                email:
                  description: A valid email for the user.
                  type: string
                external_id:
                  description: The ID of the user in an external directory.
                  type: string
                firstname:
                  description: The user's first name.
                  type: string
                group_id:
                  description: >-
                    The ID of the Group in OneLogin that the user is assigned
                    to.
                  type: integer
                id:
                  type: integer
                invalid_login_attempts:
                  type: integer
                invitation_sent_at:
                  type: string
                last_login:
                  type: string
                lastname:
                  description: The user's last name.
                  type: string
                locked_until:
                  type: string
                manager_ad_id:
                  description: The ID of the user's manager in Active Directory.
                  type: string
                manager_user_id:
                  description: The OneLogin User ID for the user's manager.
                  type: string
                member_of:
                  description: The user's directory membership.
                  type: string
                password:
                  description: The password to set for a user.
                  type: string
                password_algorithm:
                  description: >-
                    Use this when importing a password that's already hashed.
                    Prepend the salt value to the cleartext password value
                    before SHA-256-encoding it
                  type: string
                password_changed_at:
                  type: string
                password_confirmation:
                  description: Required if the password is being set.
                  type: string
                phone:
                  description: The E.164 format phone number for a user.
                  type: string
                preferred_locale_code:
                  type: string
                role_ids:
                  description: A list of OneLogin Role IDs of the user
                  items:
                    type: integer
                  minLength: 1
                  type: array
                salt:
                  description: The salt value used with the password_algorithm.
                  type: string
                samaccount_name:
                  description: The user's Active Directory username.
                  type: string
                state:
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                  type: integer
                status:
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 7
                    - 8
                  type: integer
                title:
                  description: The user's job title.
                  type: string
                trusted_idp_id:
                  description: The ID of the OneLogin Trusted IDP of the user.
                  type: integer
                updated_at:
                  type: string
                username:
                  description: A username for the user.
                  type: string
                userprincipalname:
                  description: The principle name of the user.
                  type: string
              type: object
            type: array
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '422':
          description: Unprocessable
          examples:
            application/json:
              code: 422
              error: true
              message: 'Validation failed: Value has already been taken'
              type: UnprocessableEntityError
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage users
            - Manage All
            - Read All
            - Read Users
      tags:
        - Users V2
      description: Get a list of users
      operationId: listUsers2
      summary: List Users
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: >-
            Controls how mappings will be applied to the user on creation.
            Defaults to async.
          enum:
            - async
            - sync
            - disabled
          in: query
          name: mappings
          type: string
        - description: Will passwords validate against the User Policy? Defaults to true.
          in: query
          name: validate_policy
          type: boolean
        - in: body
          name: body
          schema:
            properties:
              activated_at:
                type: string
              comment:
                description: Free text related to the user.
                type: string
              company:
                description: The user's company.
                type: string
              created_at:
                type: string
              department:
                description: The user's department.
                type: string
              directory_id:
                description: The ID of the OneLogin Directory of the user.
                type: integer
              distinguished_name:
                description: The distinguished name of the user.
                type: string
              email:
                description: A valid email for the user.
                type: string
              external_id:
                description: The ID of the user in an external directory.
                type: string
              firstname:
                description: The user's first name.
                type: string
              group_id:
                description: The ID of the Group in OneLogin that the user is assigned to.
                type: integer
              id:
                type: integer
              invalid_login_attempts:
                type: integer
              invitation_sent_at:
                type: string
              last_login:
                type: string
              lastname:
                description: The user's last name.
                type: string
              locked_until:
                type: string
              manager_ad_id:
                description: The ID of the user's manager in Active Directory.
                type: string
              manager_user_id:
                description: The OneLogin User ID for the user's manager.
                type: string
              member_of:
                description: The user's directory membership.
                type: string
              password:
                description: The password to set for a user.
                type: string
              password_algorithm:
                description: >-
                  Use this when importing a password that's already hashed.
                  Prepend the salt value to the cleartext password value before
                  SHA-256-encoding it
                type: string
              password_changed_at:
                type: string
              password_confirmation:
                description: Required if the password is being set.
                type: string
              phone:
                description: The E.164 format phone number for a user.
                type: string
              preferred_locale_code:
                type: string
              role_ids:
                description: A list of OneLogin Role IDs of the user
                items:
                  type: integer
                minLength: 1
                type: array
              salt:
                description: The salt value used with the password_algorithm.
                type: string
              samaccount_name:
                description: The user's Active Directory username.
                type: string
              state:
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                type: integer
              status:
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 7
                  - 8
                type: integer
              title:
                description: The user's job title.
                type: string
              trusted_idp_id:
                description: The ID of the OneLogin Trusted IDP of the user.
                type: integer
              updated_at:
                type: string
              username:
                description: A username for the user.
                type: string
              userprincipalname:
                description: The principle name of the user.
                type: string
            type: object
      responses:
        '201':
          description: The full user resource is returned
          schema:
            properties:
              activated_at:
                type: string
              comment:
                description: Free text related to the user.
                type: string
              company:
                description: The user's company.
                type: string
              created_at:
                type: string
              department:
                description: The user's department.
                type: string
              directory_id:
                description: The ID of the OneLogin Directory of the user.
                type: integer
              distinguished_name:
                description: The distinguished name of the user.
                type: string
              email:
                description: A valid email for the user.
                type: string
              external_id:
                description: The ID of the user in an external directory.
                type: string
              firstname:
                description: The user's first name.
                type: string
              group_id:
                description: The ID of the Group in OneLogin that the user is assigned to.
                type: integer
              id:
                type: integer
              invalid_login_attempts:
                type: integer
              invitation_sent_at:
                type: string
              last_login:
                type: string
              lastname:
                description: The user's last name.
                type: string
              locked_until:
                type: string
              manager_ad_id:
                description: The ID of the user's manager in Active Directory.
                type: string
              manager_user_id:
                description: The OneLogin User ID for the user's manager.
                type: string
              member_of:
                description: The user's directory membership.
                type: string
              password:
                description: The password to set for a user.
                type: string
              password_algorithm:
                description: >-
                  Use this when importing a password that's already hashed.
                  Prepend the salt value to the cleartext password value before
                  SHA-256-encoding it
                type: string
              password_changed_at:
                type: string
              password_confirmation:
                description: Required if the password is being set.
                type: string
              phone:
                description: The E.164 format phone number for a user.
                type: string
              preferred_locale_code:
                type: string
              role_ids:
                description: A list of OneLogin Role IDs of the user
                items:
                  type: integer
                minLength: 1
                type: array
              salt:
                description: The salt value used with the password_algorithm.
                type: string
              samaccount_name:
                description: The user's Active Directory username.
                type: string
              state:
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                type: integer
              status:
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 7
                  - 8
                type: integer
              title:
                description: The user's job title.
                type: string
              trusted_idp_id:
                description: The ID of the OneLogin Trusted IDP of the user.
                type: integer
              updated_at:
                type: string
              username:
                description: A username for the user.
                type: string
              userprincipalname:
                description: The principle name of the user.
                type: string
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '422':
          description: Unprocessable
          examples:
            application/json:
              code: 422
              error: true
              message: 'Validation failed: Value has already been taken'
              type: UnprocessableEntityError
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      tags:
        - Users V2
      description: Create User
      operationId: createUser2
      summary: Create User
  '/api/2/users/{user_id}':
    delete:
      produces:
        - application/json
      parameters:
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
      responses:
        '204':
          description: 'On success, no content is returned in the response body.'
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage users
            - Manage All
      tags:
        - Users V2
      description: Delete User
      operationId: deleteUser2
      summary: Delete User
    get:
      produces:
        - application/json
      parameters:
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            properties:
              activated_at:
                type: string
              comment:
                description: Free text related to the user.
                type: string
              company:
                description: The user's company.
                type: string
              created_at:
                type: string
              department:
                description: The user's department.
                type: string
              directory_id:
                description: The ID of the OneLogin Directory of the user.
                type: integer
              distinguished_name:
                description: The distinguished name of the user.
                type: string
              email:
                description: A valid email for the user.
                type: string
              external_id:
                description: The ID of the user in an external directory.
                type: string
              firstname:
                description: The user's first name.
                type: string
              group_id:
                description: The ID of the Group in OneLogin that the user is assigned to.
                type: integer
              id:
                type: integer
              invalid_login_attempts:
                type: integer
              invitation_sent_at:
                type: string
              last_login:
                type: string
              lastname:
                description: The user's last name.
                type: string
              locked_until:
                type: string
              manager_ad_id:
                description: The ID of the user's manager in Active Directory.
                type: string
              manager_user_id:
                description: The OneLogin User ID for the user's manager.
                type: string
              member_of:
                description: The user's directory membership.
                type: string
              password:
                description: The password to set for a user.
                type: string
              password_algorithm:
                description: >-
                  Use this when importing a password that's already hashed.
                  Prepend the salt value to the cleartext password value before
                  SHA-256-encoding it
                type: string
              password_changed_at:
                type: string
              password_confirmation:
                description: Required if the password is being set.
                type: string
              phone:
                description: The E.164 format phone number for a user.
                type: string
              preferred_locale_code:
                type: string
              role_ids:
                description: A list of OneLogin Role IDs of the user
                items:
                  type: integer
                minLength: 1
                type: array
              salt:
                description: The salt value used with the password_algorithm.
                type: string
              samaccount_name:
                description: The user's Active Directory username.
                type: string
              state:
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                type: integer
              status:
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 7
                  - 8
                type: integer
              title:
                description: The user's job title.
                type: string
              trusted_idp_id:
                description: The ID of the OneLogin Trusted IDP of the user.
                type: integer
              updated_at:
                type: string
              username:
                description: A username for the user.
                type: string
              userprincipalname:
                description: The principle name of the user.
                type: string
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage users
            - Manage All
            - Read All
            - Read Users
      tags:
        - Users V2
      description: Get User
      operationId: getUser2
      summary: Get User
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - description: >-
            Controls how mappings will be applied to the user on creation.
            Defaults to async.
          enum:
            - async
            - sync
            - disabled
          in: query
          name: mappings
          type: string
        - description: Will passwords validate against the User Policy? Defaults to true.
          in: query
          name: validate_policy
          type: boolean
        - in: body
          name: body
          schema:
            properties:
              activated_at:
                type: string
              comment:
                description: Free text related to the user.
                type: string
              company:
                description: The user's company.
                type: string
              created_at:
                type: string
              department:
                description: The user's department.
                type: string
              directory_id:
                description: The ID of the OneLogin Directory of the user.
                type: integer
              distinguished_name:
                description: The distinguished name of the user.
                type: string
              email:
                description: A valid email for the user.
                type: string
              external_id:
                description: The ID of the user in an external directory.
                type: string
              firstname:
                description: The user's first name.
                type: string
              group_id:
                description: The ID of the Group in OneLogin that the user is assigned to.
                type: integer
              id:
                type: integer
              invalid_login_attempts:
                type: integer
              invitation_sent_at:
                type: string
              last_login:
                type: string
              lastname:
                description: The user's last name.
                type: string
              locked_until:
                type: string
              manager_ad_id:
                description: The ID of the user's manager in Active Directory.
                type: string
              manager_user_id:
                description: The OneLogin User ID for the user's manager.
                type: string
              member_of:
                description: The user's directory membership.
                type: string
              password:
                description: The password to set for a user.
                type: string
              password_algorithm:
                description: >-
                  Use this when importing a password that's already hashed.
                  Prepend the salt value to the cleartext password value before
                  SHA-256-encoding it
                type: string
              password_changed_at:
                type: string
              password_confirmation:
                description: Required if the password is being set.
                type: string
              phone:
                description: The E.164 format phone number for a user.
                type: string
              preferred_locale_code:
                type: string
              role_ids:
                description: A list of OneLogin Role IDs of the user
                items:
                  type: integer
                minLength: 1
                type: array
              salt:
                description: The salt value used with the password_algorithm.
                type: string
              samaccount_name:
                description: The user's Active Directory username.
                type: string
              state:
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                type: integer
              status:
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 7
                  - 8
                type: integer
              title:
                description: The user's job title.
                type: string
              trusted_idp_id:
                description: The ID of the OneLogin Trusted IDP of the user.
                type: integer
              updated_at:
                type: string
              username:
                description: A username for the user.
                type: string
              userprincipalname:
                description: The principle name of the user.
                type: string
            type: object
      responses:
        '200':
          description: The full user resource is returned
          schema:
            properties:
              activated_at:
                type: string
              comment:
                description: Free text related to the user.
                type: string
              company:
                description: The user's company.
                type: string
              created_at:
                type: string
              department:
                description: The user's department.
                type: string
              directory_id:
                description: The ID of the OneLogin Directory of the user.
                type: integer
              distinguished_name:
                description: The distinguished name of the user.
                type: string
              email:
                description: A valid email for the user.
                type: string
              external_id:
                description: The ID of the user in an external directory.
                type: string
              firstname:
                description: The user's first name.
                type: string
              group_id:
                description: The ID of the Group in OneLogin that the user is assigned to.
                type: integer
              id:
                type: integer
              invalid_login_attempts:
                type: integer
              invitation_sent_at:
                type: string
              last_login:
                type: string
              lastname:
                description: The user's last name.
                type: string
              locked_until:
                type: string
              manager_ad_id:
                description: The ID of the user's manager in Active Directory.
                type: string
              manager_user_id:
                description: The OneLogin User ID for the user's manager.
                type: string
              member_of:
                description: The user's directory membership.
                type: string
              password:
                description: The password to set for a user.
                type: string
              password_algorithm:
                description: >-
                  Use this when importing a password that's already hashed.
                  Prepend the salt value to the cleartext password value before
                  SHA-256-encoding it
                type: string
              password_changed_at:
                type: string
              password_confirmation:
                description: Required if the password is being set.
                type: string
              phone:
                description: The E.164 format phone number for a user.
                type: string
              preferred_locale_code:
                type: string
              role_ids:
                description: A list of OneLogin Role IDs of the user
                items:
                  type: integer
                minLength: 1
                type: array
              salt:
                description: The salt value used with the password_algorithm.
                type: string
              samaccount_name:
                description: The user's Active Directory username.
                type: string
              state:
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                type: integer
              status:
                enum:
                  - 0
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 7
                  - 8
                type: integer
              title:
                description: The user's job title.
                type: string
              trusted_idp_id:
                description: The ID of the OneLogin Trusted IDP of the user.
                type: integer
              updated_at:
                type: string
              username:
                description: A username for the user.
                type: string
              userprincipalname:
                description: The principle name of the user.
                type: string
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '422':
          description: Unprocessable
          examples:
            application/json:
              code: 422
              error: true
              message: 'Validation failed: Value has already been taken'
              type: UnprocessableEntityError
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      tags:
        - Users V2
      description: Update User
      operationId: updateUser2
      summary: Update User
  '/api/2/users/{user_id}/apps':
    get:
      produces:
        - application/json
      parameters:
        - description: Set to the id of the user that you want to return.
          in: path
          name: user_id
          required: true
          type: integer
        - default: false
          description: >-
            Defaults to `false`. When `true` will show all apps that are
            assigned to a user regardless of their portal visibility setting.
          in: query
          name: ignore_visibility
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            items:
              properties:
                extension:
                  description: >-
                    Boolean that indicates if the OneLogin browser extension is
                    required to launch this app.
                  type: boolean
                icon_url:
                  description: >-
                    A url for the icon that represents the app in the OneLogin
                    portal
                  type: string
                id:
                  description: The App ID
                  type: integer
                login_id:
                  description: Unqiue identifier for this user and app combination.
                  type: integer
                name:
                  description: The name of the app.
                  type: string
                provisioning_enabled:
                  description: Indicates if provisioning is enabled for this app.
                  type: boolean
                provisioning_state:
                  description: >-
                    If provisioning is enabled this indicates the state of
                    provisioning for the given user.
                  enum:
                    - unknown
                    - provisioning
                    - modifying
                    - deleting
                    - provisioning_pending_approval
                    - deleting_pending_approval
                    - modifying_pending_approval
                    - linking
                    - provisioned
                    - deleted
                    - modifying_failed
                    - provisioning_failed
                    - deleting_failed
                    - linking_failed
                    - disabled
                    - nonexistent
                    - modifying_pending_approval_then_disabled
                  type: string
                provisioning_status:
                  enum:
                    - enabling
                    - disabling
                    - enabling_pending_approval
                    - disabling_pendding_approval
                    - enabled
                    - disabled
                    - disabling_failed
                    - enabling_failed
                  type: string
              type: object
            type: array
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Manage users
            - Manage All
            - Read All
            - Read Users
      tags:
        - Users V2
      description: Get User Apps
      operationId: getUserApps2
      summary: Get User Apps
  /auth/oauth2/revoke:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          type: string
          x-example: application/json
        - in: body
          name: body
          schema:
            properties:
              access_token:
                description: >-
                  Set to the access token you want to revoke.

                  This access token must have been generated using the client_id
                  and client_secret provided in the Authorization header.
                example: >-
                  xx508xx63817x752xx74004x30705xx92x58349x5x78f5xx34x8x614xxxx1451
                type: string
            required:
              - access_token
            type: object
      responses:
        '200':
          description: Successful response
          examples:
            application/json:
              code: 200
              error: false
              message: sucess
              type: success
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - basicAuth: []
      tags:
        - OAuth2
      description: Revoke Tokens
      operationId: revokeTokens
      summary: Revoke Tokens
  /auth/oauth2/v2/token:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: application/json
          in: header
          name: Content-Type
          required: true
          type: string
          x-example: application/json
        - description: Request Body to Generate OAuth Token
          in: body
          name: body
          required: true
          schema:
            properties:
              grant_type:
                default: client_credentials
                description: Set to client_credentials.
                type: string
            required:
              - grant_type
            type: object
      responses:
        '200':
          description: Successful Response
          schema:
            properties:
              access_token:
                description: >-
                  Provides the requested access token. You can use this token to
                  call our resource APIs.
                example: xx508xx63817x752xx74004x30705xx92x58349x5x78f5xx34xxxxx51
                type: string
              account_id:
                description: >-
                  Account ID associated with the API credentials used to
                  generate the token.
                example: 555555
                type: integer
              created_at:
                description: Time at which the access token was generated.
                example: '2015-11-11T03:36:18.714Z'
                type: string
              expires_in:
                description: >-
                  Indicates that the generated access token expires in 36,000
                  seconds, 600 minutes, or 10 hours.

                  An expired access token cannot be used to make resource API
                  calls, but it can still be used along with its associated
                  refresh token to call the Refresh Tokens v2 API.
                example: 36000
                type: integer
              refresh_token:
                description: deprecated No longer in use
                example: deprecated
                type: string
              token_type:
                description: Indicates that the generated access token is a bearer token.
                example: bearer
                type: string
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - basicAuth: []
      tags:
        - OAuth2
      description: Generate Token
      operationId: generateToken
      summary: Generate Token
  /auth/rate_limit:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              data:
                properties:
                  X-RateLimit-Limit:
                    description: Rate Limit Limit
                    example: 5000
                    type: integer
                  X-RateLimit-Remaining:
                    description: Rate Limit Remaining
                    example: 4988
                    type: integer
                  X-RateLimit-Reset:
                    description: Rate Limit Reset
                    example: 832
                    type: integer
                type: object
              status:
                properties:
                  code:
                    example: 200
                    type: integer
                  error:
                    example: false
                    type: boolean
                  message:
                    example: Success
                    type: string
                  type:
                    example: Success
                    type: string
                required:
                  - code
                  - message
                type: object
            type: object
        '400':
          description: Bad Request
          examples:
            application/json:
              code: 400
              error: true
              message: Request Failure
              type: bad request
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '401':
          description: Unauthorized
          examples:
            application/json:
              code: 401
              error: true
              message: Unauthorized Error
              type: Unauthorized
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
        '404':
          description: Not Found
          examples:
            application/json:
              code: 404
              error: true
              message: No Route Exists
              type: Not Found
          schema:
            properties:
              code:
                example: 200
                type: integer
              error:
                example: false
                type: boolean
              message:
                example: Success
                type: string
              type:
                example: Success
                type: string
            required:
              - code
              - message
            type: object
      security:
        - OAuth2:
            - Read Users
            - Manage users
            - Manage All
            - Read All
      tags:
        - OAuth2
      description: Get Rate Limit
      operationId: getRateLimit
      summary: Get Rate Limit
securityDefinitions:
  OAuth2:
    description: >-
      This API uses OAuth2 with the Client Credential grant flow. [More
      info](https://developers.onelogin.com/api-docs/2/getting-started/working-with-api-credentials)
    flow: application
    scopes:
      Authentication Only: >-
        Gives the credential pair the ability to generate an access token that
        can perform POST calls only to authentication endpoints, providing least
        privileged access to authentication code. These endpoints include:
          - Verify Factor (SAML Assertion)
          - Generate SAML Assertion
          - Verify Factor (Login)
          - Create Session Login Token
          - Log User Out
      Manage All: >-
        Gives the credential pair the ability to generate an access token that
        can perform GET, POST, PUT, and DELETE calls for all available API
        resources, including the ability to set passwords and assign and remove
        roles.
      Manage users: >-
        Gives the credential pair the ability to generate an access token that
        can perform GET, POST, PUT, and DELETE calls available for the User,
        Role, and Group API resources, with the exception of setting passwords
        and assigning and removing roles
      Read All: >-
        Gives the credential pair the ability to generate an access token that
        can perform GET calls available for all API resources.
      Read Users: >-
        Gives the credential pair the ability to generate an access token that
        can perform GET calls available for the User, Role, and Group API
        resources.
    tokenUrl: https://your-api-subdomain.onelogin.com/auth/oauth2/v2/token
    type: oauth2
  basicAuth:
    type: basic
tags:
  - description: OAuth2
    name: OAuth2
  - description: >-
      Collection of APIs that allow you to configure OneLogin as an
      Authorization server
    name: API Authorization Server
  - description: Access and Authorization Scopes
    name: 'API Auth: Scopes'
  - description: Regarding Token Claims
    name: 'API Auth: Claims'
  - name: 'API Auth: Client Apps'
  - description: App Management Endpoint
    name: Apps
  - description: General Branding Service Endpoints
    name: Branding Service
  - description: Branding Service Endpoints for custom templates
    name: 'Branding Service: Templates'
  - description: Branding Service Endpoints for SMTP
    name: 'Branding Service: SMTP'
  - description: Dealing with SAML Authentication protocol
    name: SAML Assertions
  - description: User Mappings Management Endpoint
    name: User Mappings
  - description: Risk service Endpoint
    name: Vigilance AI
  - description: Application Rule policy creation and enforcement
    name: App Rules
  - description: 'Event Types, IDs, tracking, tracing, and more'
    name: Events
  - description: Group Management Endpoint
    name: Groups
  - description: Invite Via Email Link
    name: Invite Links
  - description: 'Multi Factor Authentication (MFA), One Time Passcodes (OTP)'
    name: Multi Factor Authentication
  - description: 'Deprecated Multi Factor Authentication (MFA), One Time Passcodes (OTP)'
    name: Multi Factor Authentication V1
  - description: Privilege Management Endpoint
    name: Privileges
  - description: Role Management Endpoint
    name: Roles
  - description: User Management Endpoint Version 1
    name: Users V1
  - description: User Management Endpoint Version 2
    name: Users V2
x-components: {}

